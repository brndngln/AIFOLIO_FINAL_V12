name: Deploy Static React App

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
        working-directory: frontend
      - name: Lint and format
        run: |
          npm run lint
          npm run format:check || true
        working-directory: frontend
      - name: Accessibility (a11y) check
        run: |
          npx axe ./build --exit
        working-directory: frontend
        continue-on-error: true
      - name: PWA validation
        run: |
          npx pwascanner http://localhost:3000 || echo "PWA check (local)"
        working-directory: frontend
        continue-on-error: true
      - name: Build static site
        run: npm run build
        working-directory: frontend
      - name: Export README and policy docs
        run: |
          mkdir -p build-artifacts
          cp ../README.md build-artifacts/
          cp src/policy/*.md build-artifacts/ || true
        working-directory: frontend
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: frontend/build-artifacts
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3
        with:
          publish-dir: frontend/build
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Must be set in GitHub repo secrets by OWNER

      - name: Notify Slack (Shell Fallback)
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # Must be set in GitHub repo secrets by OWNER
        run: |
          if [ -z "$SLACK_WEBHOOK_URL" ]; then
            echo "SLACK_WEBHOOK_URL not set. Skipping Slack notification."
          else
            curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment complete! (Shell fallback)"}' $SLACK_WEBHOOK_URL
          fi
      - name: Notify Discord
        if: always()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }} # Must be set in GitHub repo secrets by OWNER
        run: |
          if [ -z "$DISCORD_WEBHOOK" ]; then
            echo "DISCORD_WEBHOOK not set. Skipping Discord notification. (This is expected if OWNER has not set the secret.)"
          else
            curl -X POST -H 'Content-type: application/json' --data '{"content":"Deployment complete!"}' $DISCORD_WEBHOOK
          fi
        # Note: Context access warnings for DISCORD_WEBHOOK and SLACK_WEBHOOK_URL are expected if secrets are not set. This is SAFE AI-compliant and prevents accidental notification leaks.
