autonomy/utils/dashboard_push.py:1: error: Function is missing a type
annotation  [no-untyped-def]
    def push_dashboard_update(vault_id, payload):
    ^
autonomy/ai_tools/audit_compliance.py:1: error: Function is missing a type
annotation  [no-untyped-def]
    def check_vault_metadata(metadata):
    ^
autonomy/ai_tools/vault_formatter.py:4: error: Function is missing a type
annotation  [no-untyped-def]
    def format_title(title):
    ^
autonomy/ai_tools/vault_formatter.py:24: error: Function is missing a type
annotation  [no-untyped-def]
    def format_description(desc):
    ^
autonomy/analytics/safe_ai_ceo_dashboard.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def ceo_dashboard(metrics):
    ^
autonomy/analytics/safe_ai_maintenance_health_dashboard.py:7: error: Function
is missing a type annotation  [no-untyped-def]
    def maintenance_health_dashboard(metrics):
    ^
empress_avatar.py:14: error: Function is missing a type annotation 
[no-untyped-def]
        def __init__(
        ^
empress_avatar.py:45: error: Function is missing a type annotation 
[no-untyped-def]
        def from_json(config_json):
        ^
empress_avatar.py:61: error: Call to untyped function "EmpressAvatar" in typed
context  [no-untyped-call]
            return EmpressAvatar(
                   ^
empress_avatar.py:75: error: Function is missing a type annotation 
[no-untyped-def]
        def set_style(self, style):
        ^
empress_avatar.py:78: error: Function is missing a type annotation 
[no-untyped-def]
        def set_voice(self, voice):
        ^
empress_avatar.py:81: error: Function is missing a return type annotation 
[no-untyped-def]
        def toggle(self, enabled: bool):
        ^
empress_avatar.py:84: error: Function is missing a type annotation 
[no-untyped-def]
        def set_realism(self, realism):
        ^
empress_avatar.py:88: error: Function is missing a type annotation 
[no-untyped-def]
        def set_attire(self, attire):
        ^
empress_avatar.py:102: error: Function is missing a type annotation 
[no-untyped-def]
        def save_preset(self, preset_name):
        ^
empress_avatar.py:106: error: Function is missing a type annotation 
[no-untyped-def]
        def load_preset(self, preset_name):
        ^
empress_avatar.py:110: error: Function is missing a type annotation 
[no-untyped-def]
        def apply_config(self, config_json):
        ^
empress_avatar.py:126: error: Function is missing a type annotation 
[no-untyped-def]
        def secure_preview(self, owner_authenticated):
        ^
empress_avatar.py:145: error: Function is missing a return type annotation 
[no-untyped-def]
        def describe(self):
        ^
empress_avatar.py:158: error: Function is missing a type annotation 
[no-untyped-def]
        def __init__(self, owner_state=None):
        ^
empress_avatar.py:161: error: Function is missing a type annotation 
[no-untyped-def]
        def adapt_to_owner(self, mood, stress, energy, goals):
        ^
empress_avatar.py:171: error: Function is missing a return type annotation 
[no-untyped-def]
        def offer_support(self):
        ^
emma_identity_lock.py:12: error: Function is missing a return type annotation 
[no-untyped-def]
    def deny_non_owner(user_id: str):
    ^
windsurf/windsurf_sentinel.py:9: error: Function is missing a return type
annotation  [no-untyped-def]
    def check_access():
    ^
windsurf/windsurf_sentinel.py:9: note: Use "-> None" if function does not return a value
windsurf/windsurf_sentinel.py:16: error: Call to untyped function
"check_access" in typed context  [no-untyped-call]
        check_access()
        ^~~~~~~~~~~~~~
security/reload_handler.py:1: error: Function is missing a return type
annotation  [no-untyped-def]
    def hot_reload_config():
    ^
security/reload_handler.py:1: note: Use "-> None" if function does not return a value
revenue/weaponization_engine.py:6: error: Need type annotation for "_vaults"
(hint: "_vaults: List[<type>] = ...")  [var-annotated]
        _vaults = []  # [{id, title, revenue_path, viral_score, ticket_typ...
        ^~~~~~~
revenue/weaponization_engine.py:7: error: Need type annotation for "_referrals"
(hint: "_referrals: List[<type>] = ...")  [var-annotated]
        _referrals = []  # [{vault_id, ref_code, user, earnings}]
        ^~~~~~~~~~
revenue/weaponization_engine.py:8: error: Need type annotation for "_funnels"
(hint: "_funnels: Dict[<type>, <type>] = ...")  [var-annotated]
        _funnels = {}  # vault_id: [funnels]
        ^~~~~~~~
revenue/weaponization_engine.py:9: error: Need type annotation for "_scarcity"
(hint: "_scarcity: Dict[<type>, <type>] = ...")  [var-annotated]
        _scarcity = {}  # vault_id: scarcity_status
        ^~~~~~~~~
revenue/weaponization_engine.py:10: error: Need type annotation for
"_autopilot" (hint: "_autopilot: List[<type>] = ...")  [var-annotated]
        _autopilot = []  # [{vault_id, upsell}]
        ^~~~~~~~~~
revenue/weaponization_engine.py:11: error: Need type annotation for
"_compounding" (hint: "_compounding: List[<type>] = ...")  [var-annotated]
        _compounding = []  # [{parent_vault, spin_off_id}]
        ^~~~~~~~~~~~
revenue/weaponization_engine.py:14: error: Function is missing a type
annotation  [no-untyped-def]
        def optimize_revenue_path(vault_id, path):
        ^
revenue/weaponization_engine.py:21: error: Function is missing a type
annotation  [no-untyped-def]
        def viral_trigger(vault_id, viral_score):
        ^
revenue/weaponization_engine.py:28: error: Function is missing a type
annotation  [no-untyped-def]
        def set_scarcity(vault_id, scarcity_text):
        ^
revenue/weaponization_engine.py:32: error: Function is missing a type
annotation  [no-untyped-def]
        def add_referral(vault_id, ref_code, user):
        ^
revenue/weaponization_engine.py:38: error: Function is missing a type
annotation  [no-untyped-def]
        def record_earning(vault_id, ref_code, amount):
        ^
revenue/weaponization_engine.py:44: error: Function is missing a type
annotation  [no-untyped-def]
        def autopilot_upsell(vault_id, upsell):
        ^
revenue/weaponization_engine.py:50: error: Function is missing a type
annotation  [no-untyped-def]
        def compound_vault(parent_vault, spin_off_id):
        ^
revenue/weaponization_engine.py:56: error: Function is missing a type
annotation  [no-untyped-def]
        def add_funnel(vault_id, funnel):
        ^
revenue/weaponization_engine.py:60: error: Function is missing a type
annotation  [no-untyped-def]
        def get_funnels(vault_id):
        ^
revenue/weaponization_engine.py:64: error: Function is missing a return type
annotation  [no-untyped-def]
        def get_referrals():
        ^
revenue/weaponization_engine.py:68: error: Function is missing a return type
annotation  [no-untyped-def]
        def get_compounding():
        ^
omnisecure_stack/anti_sentience_domestication.py:28: error: Missing type
parameters for generic type "list"  [type-arg]
        def limit(self, commands: list, max_loops: int = 3) -> bool:
                                  ^
licensing/licensee_manager.py:6: error: Need type annotation for "_licensees"
(hint: "_licensees: List[<type>] = ...")  [var-annotated]
        _licensees = []  # [{vault_id, user, variant_id, earnings, region,...
        ^~~~~~~~~~
licensing/licensee_manager.py:9: error: Function is missing a type annotation 
[no-untyped-def]
        def add_licensee(vault_id, user, variant_id, region, earnings=0, s...
        ^
licensing/licensee_manager.py:22: error: Function is missing a type annotation 
[no-untyped-def]
        def update_earnings(vault_id, user, amount):
        ^
licensing/licensee_manager.py:28: error: Function is missing a type annotation 
[no-untyped-def]
        def set_status(vault_id, user, status):
        ^
licensing/licensee_manager.py:34: error: Function is missing a return type
annotation  [no-untyped-def]
        def get_licensees():
        ^
intelligence/vault_combat_ai.py:6: error: Need type annotation for "_vaults"
(hint: "_vaults: List[<type>] = ...")  [var-annotated]
        _vaults = []  # [{id, title, earnings, survivability, profit, scal...
        ^~~~~~~
intelligence/vault_combat_ai.py:9: error: Function is missing a type annotation
 [no-untyped-def]
        def rank_vaults(vaults):
        ^
intelligence/vault_combat_ai.py:15: error: Call to untyped function
"assign_threat_level" in typed context  [no-untyped-call]
                v["threat_level"] = VaultCombatAI.assign_threat_level(v)
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
intelligence/vault_combat_ai.py:15: error: Call to untyped function
"assign_threat_level" of "VaultCombatAI" in typed context  [no-untyped-call]
                v["threat_level"] = VaultCombatAI.assign_threat_level(v)
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
intelligence/vault_combat_ai.py:20: error: Function is missing a type
annotation  [no-untyped-def]
        def assign_threat_level(vault):
        ^
intelligence/vault_combat_ai.py:31: error: Function is missing a return type
annotation  [no-untyped-def]
        def get_vaults():
        ^
intelligence/empire_vault_strategist.py:6: error: Need type annotation for
"_weekly_reports" (hint: "_weekly_reports: List[<type>] = ...")  [var-annotated]
        _weekly_reports = []
        ^~~~~~~~~~~~~~~
intelligence/empire_vault_strategist.py:9: error: Function is missing a type
annotation  [no-untyped-def]
        def generate_weekly_report(vaults):
        ^
intelligence/empire_vault_strategist.py:21: error: Function is missing a return
type annotation  [no-untyped-def]
        def get_reports():
        ^
backend/utils/codebase_scanner.py:7: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
backend/utils/codebase_scanner.py:7: note: Use "-> None" if function does not return a value
backend/utils/codebase_scanner.py:37: error: "CodebaseScanner" has no attribute
"logger"  [attr-defined]
            self.logger.info("CodebaseScanner initialized with static patt...
            ^~~~~~~~~~~
backend/utils/codebase_scanner.py:41: error: Need type annotation for "results"
 [var-annotated]
            results = {"ethical": [], "unethical": [], "warnings": []}
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/utils/codebase_scanner.py:74: error: "CodebaseScanner" has no attribute
"logger"  [attr-defined]
                    self.logger.info(f"Scanned file {file_path} with resul...
                    ^~~~~~~~~~~
backend/utils/codebase_scanner.py:79: error: "CodebaseScanner" has no attribute
"logger"  [attr-defined]
                self.logger.error(f"Error scanning file {file_path}: {str(...
                ^~~~~~~~~~~
backend/utils/codebase_scanner.py:92: error: "CodebaseScanner" has no attribute
"logger"  [attr-defined]
            self.logger.info(f"Scanned directory {dir_path} with results: ...
            ^~~~~~~~~~~
backend/utils/codebase_scanner.py:97: error: "CodebaseScanner" has no attribute
"logger"  [attr-defined]
            self.logger.info("Generating static codebase scan report.")
            ^~~~~~~~~~~
backend/utils/codebase_scanner.py:125: error: "CodebaseScanner" has no
attribute "logger"  [attr-defined]
            self.logger.info("Static codebase scan report generated.")
            ^~~~~~~~~~~
backend/utils/codebase_scanner.py:131: error: Call to untyped function
"CodebaseScanner" in typed context  [no-untyped-call]
        scanner = CodebaseScanner()
                  ^~~~~~~~~~~~~~~~~
autonomy/utils/vault_log.py:1: error: Function is missing a type annotation 
[no-untyped-def]
    def log_vault_event(vault_id, event, payload, errors):
    ^
autonomy/utils/vault_log.py:5: error: Function is missing a type annotation 
[no-untyped-def]
    def log_activity(vault_id, event, payload, errors):
    ^
autonomy/utils/audit.py:1: error: Function is missing a type annotation 
[no-untyped-def]
    def audit_vault_compliance(vault_path, payload):
    ^
autonomy/utils/anomaly.py:1: error: Function is missing a type annotation 
[no-untyped-def]
    def detect_anomaly(vault_id, errors):
    ^
autonomy/utils/alerts.py:1: error: Function is missing a type annotation 
[no-untyped-def]
    def send_slack_alert(msg):
    ^
autonomy/utils/alerts.py:5: error: Function is missing a type annotation 
[no-untyped-def]
    def send_telegram_alert(msg):
    ^
autonomy/utils/alerts.py:9: error: Function is missing a type annotation 
[no-untyped-def]
    def send_email_alert(email, msg):
    ^
autonomy/tenant/webhook_registry.py:22: error: Function is missing a return
type annotation  [no-untyped-def]
    def set_webhook(tenant_id: str, event: str, url: str):
    ^
autonomy/tenant/webhook_registry.py:24: error: Incompatible types in assignment
(expression has type "str", target has type "None")  [assignment]
            WEBHOOKS[tenant_id][event] = url
                                         ^~~
autonomy/tenant/webhook_registry.py:26: error: Dict entry 0 has incompatible
type "str": "str"; expected "str": "None"  [dict-item]
            WEBHOOKS[tenant_id] = {event: url}
                                   ^~~~~~~~~~
autonomy/tenant/module_registry.py:18: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    def get_enabled_modules(tenant_id: str, tenant_registry) -> List[str]:
    ^
autonomy/tenant/module_registry.py:20: error: Returning Any from function
declared to return "list[str]"  [no-any-return]
        return config.get("enabled_modules", list(MODULES.keys()))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/storefront/vault_naming_consistency_checker.py:8: error: Function is
missing a type annotation  [no-untyped-def]
    def check_naming_consistency(vault_names):
    ^
autonomy/storefront/tone_alignment_analyzer.py:8: error: Function is missing a
type annotation  [no-untyped-def]
    def analyze_tone_alignment(sales_copy):
    ^
autonomy/storefront/sales_copy_tone_tuner.py:8: error: Function is missing a
type annotation  [no-untyped-def]
    def tune_sales_copy_tone(sales_copy):
    ^
autonomy/storefront/prelaunch_vault_risk_audit.py:8: error: Function is missing
a type annotation  [no-untyped-def]
    def audit_prelaunch_risk(vault_data):
    ^
autonomy/storefront/cta_clarity_checker.py:8: error: Function is missing a type
annotation  [no-untyped-def]
    def check_cta_clarity(cta_text):
    ^
autonomy/storefront/cross_vault_bundle_balance_checker.py:8: error: Function is
missing a type annotation  [no-untyped-def]
    def check_bundle_balance(bundle_data):
    ^
autonomy/storefront/bundle_cannibalization_checker.py:8: error: Function is
missing a type annotation  [no-untyped-def]
    def check_bundle_cannibalization(bundle_data, vault_data):
    ^
autonomy/storefront/analytics.py:9: error: Function is missing a type
annotation  [no-untyped-def]
    def storefront_analytics(data):
    ^
autonomy/storefront/admin_badge_engine.py:8: error: Function is missing a type
annotation  [no-untyped-def]
    def assign_badges(buyer_data):
    ^
autonomy/security/high_risk_buyer_flagger.py:8: error: Function is missing a
type annotation  [no-untyped-def]
    def flag_high_risk_buyers(data):
    ^
autonomy/security/geo_compliance_mismatch_detector.py:8: error: Function is
missing a type annotation  [no-untyped-def]
    def detect_geo_mismatch(data):
    ^
autonomy/partner_certification/partner_self_certification_submission.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def partner_self_certification_submission(submissions):
    ^
autonomy/partner_certification/partner_certification_tracker.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def partner_certification_tracker(partners):
    ^
autonomy/notification/notification_manager.py:7: error: Function is missing a
type annotation  [no-untyped-def]
        def send_slack(message):
        ^
autonomy/notification/notification_manager.py:12: error: Function is missing a
type annotation  [no-untyped-def]
        def send_email(subject, body):
        ^
autonomy/notification/notification_manager.py:17: error: Function is missing a
type annotation  [no-untyped-def]
        def send_telegram(message):
        ^
autonomy/notification/notification_manager.py:22: error: Function is missing a
type annotation  [no-untyped-def]
        def send_daily_brief(summary):
        ^
autonomy/notification/notification_manager.py:26: error: Function is missing a
type annotation  [no-untyped-def]
        def send_weekly_report(report):
        ^
autonomy/legal/policy_translator.py:23: error: Returning Any from function
declared to return "str"  [no-any-return]
        return translated.text
        ^~~~~~~~~~~~~~~~~~~~~~
autonomy/integrations/xbrl_connector.py:6: error: Function is missing a return
type annotation  [no-untyped-def]
    def export_xbrl_report(tenant_id: str):
    ^
autonomy/integrations/stripe_connector.py:6: error: Function is missing a
return type annotation  [no-untyped-def]
    def export_stripe_transactions(tenant_id: str):
    ^
autonomy/integrations/slack_connector.py:6: error: Function is missing a return
type annotation  [no-untyped-def]
    def send_slack_notification(tenant_id: str, message: str):
    ^
autonomy/integrations/notion_connector.py:6: error: Function is missing a
return type annotation  [no-untyped-def]
    def export_notion_data(tenant_id: str):
    ^
autonomy/compliance/regional_regulatory_drift_detector.py:8: error: Function is
missing a type annotation  [no-untyped-def]
    def detect_regulatory_drift(vault_data):
    ^
autonomy/compliance/privacy_request_queue_ui.py:8: error: Function is missing a
return type annotation  [no-untyped-def]
    def get_privacy_requests():
    ^
autonomy/compliance/lockout_test.py:6: error: Function is missing a return type
annotation  [no-untyped-def]
    def run_lockout_tests():
    ^
autonomy/compliance/compliance_regression_checker.py:8: error: Function is
missing a type annotation  [no-untyped-def]
    def check_compliance_regression(vault_data):
    ^
autonomy/compliance/charter_lock.py:18: error: Function is missing a return
type annotation  [no-untyped-def]
    def enforce_charter():
    ^
autonomy/compliance/charter_lock.py:18: note: Use "-> None" if function does not return a value
autonomy/analytics/year_end_safe_ai_business_audit_generator.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def year_end_business_audit(stats):
    ^
autonomy/analytics/vault_performance_decay_predictor.py:9: error: Function is
missing a type annotation  [no-untyped-def]
    def predict_decay(data):
    ^
autonomy/analytics/vault_lifespan_curve.py:9: error: Function is missing a type
annotation  [no-untyped-def]
    def generate_curve(data):
    ^
autonomy/analytics/vault_launch_cohort_tracker.py:8: error: Function is missing
a type annotation  [no-untyped-def]
    def track_cohorts(vault_data):
    ^
autonomy/analytics/vault_engagement_clustering.py:9: error: Function is missing
a type annotation  [no-untyped-def]
    def cluster_engagement(data):
    ^
autonomy/analytics/system_load_report.py:7: error: Function is missing a type
annotation  [no-untyped-def]
    def system_load_report(load_stats):
    ^
autonomy/analytics/static_what_worked_best_summary.py:8: error: Function is
missing a type annotation  [no-untyped-def]
    def what_worked_best(stats):
    ^
autonomy/analytics/static_vault_seasonality_tracker.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def seasonality_tracker(monthly_sales):
    ^
autonomy/analytics/static_vault_licensing_map.py:7: error: Function is missing
a type annotation  [no-untyped-def]
    def vault_licensing_map(licenses):
    ^
autonomy/analytics/static_vault_cross_market_fit_report.py:7: error: Function
is missing a type annotation  [no-untyped-def]
    def vault_cross_market_fit_report(vaults):
    ^
autonomy/analytics/static_segment_reporting.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def segment_report(segment_stats):
    ^
autonomy/analytics/static_revenue_projection_by_niche.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def revenue_projection_by_niche(niche_sales):
    ^
autonomy/analytics/static_revenue_forecast.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def static_revenue_forecast(revenue_by_month):
    ^
autonomy/analytics/static_refund_dispute_monitor.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def refund_dispute_monitor(sales, refunds, disputes, threshold=0.1):
    ^
autonomy/analytics/static_partner_revenue_contribution.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def partner_revenue_contribution(partner_sales):
    ^
autonomy/analytics/static_multi_vault_comparison.py:8: error: Function is
missing a type annotation  [no-untyped-def]
    def compare_vaults(vault_stats_list):
    ^
autonomy/analytics/static_market_gap_report.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def static_market_gap_report(gaps):
    ^
autonomy/analytics/static_global_business_map.py:7: error: Function is missing
a type annotation  [no-untyped-def]
    def global_business_map(locations):
    ^
autonomy/analytics/static_gap_analysis_reporter.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def static_gap_analysis(gaps):
    ^
autonomy/analytics/static_funnel_reports.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def static_funnel_report(funnel_data):
    ^
autonomy/analytics/static_feature_usage_report.py:7: error: Function is missing
a type annotation  [no-untyped-def]
    def static_feature_usage_report(feature_stats):
    ^
autonomy/analytics/static_cross_platform_revenue_tracker.py:7: error: Function
is missing a type annotation  [no-untyped-def]
    def cross_platform_revenue(revenue_by_platform):
    ^
autonomy/analytics/static_competitor_comparison.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def competitor_comparison(our_stats, competitor_stats):
    ^
autonomy/analytics/static_buyer_journey_funnel.py:8: error: Function is missing
a type annotation  [no-untyped-def]
    def buyer_journey_funnel(data):
    ^
autonomy/analytics/segment_trend_detector.py:8: error: Function is missing a
type annotation  [no-untyped-def]
    def detect_trend(segment_stats):
    ^
autonomy/analytics/safe_segment_comparison.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def segment_comparison(segments):
    ^
autonomy/analytics/safe_ai_system_uptime_tracker.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def system_uptime_tracker(uptime_logs):
    ^
autonomy/analytics/safe_ai_roadmap_summary_export.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def roadmap_summary_export(roadmap):
    ^
autonomy/analytics/safe_ai_passive_partnership_monitor.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def passive_partnership_monitor(partnerships):
    ^
autonomy/analytics/safe_ai_new_market_entry_checklist.py:7: error: Function is
missing a return type annotation  [no-untyped-def]
    def new_market_entry_checklist():
    ^
autonomy/analytics/safe_ai_multi_year_compliance_tracker.py:7: error: Function
is missing a type annotation  [no-untyped-def]
    def multi_year_compliance_tracker(years):
    ^
autonomy/analytics/safe_ai_multi_year_business_planning_summary.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def multi_year_business_planning_summary(plans):
    ^
autonomy/analytics/safe_ai_long_term_compliance_roadmap_generator.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def int_term_compliance_roadmap(roadmap_items):
    ^
autonomy/analytics/safe_ai_historical_audit_summary.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def historical_audit_summary(audit_logs):
    ^
autonomy/analytics/safe_ai_governance_board_report_generator.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def governance_board_report(report):
    ^
autonomy/analytics/safe_ai_external_api_safety_monitor.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def external_api_safety_monitor(api_configs):
    ^
autonomy/analytics/safe_ai_esg_score_report.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def esg_score_report(scores):
    ^
autonomy/analytics/safe_ai_business_scalability_index.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def business_scalability_index(metrics):
    ^
autonomy/analytics/risk_refund_monitor.py:7: error: Function is missing a type
annotation  [no-untyped-def]
    def risk_refund_monitor(vaults, refunds):
    ^
autonomy/analytics/risk_refund_monitor.py:9: error: Need type annotation for
"refund_counts" (hint: "refund_counts: Dict[<type>, <type>] = ...") 
[var-annotated]
        refund_counts = {}
        ^~~~~~~~~~~~~
autonomy/analytics/quarterly_compliance_review.py:7: error: Function is missing
a type annotation  [no-untyped-def]
    def quarterly_compliance_review(compliance_stats):
    ^
autonomy/analytics/platform_health_red_flags.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def platform_health_red_flags(health_metrics):
    ^
autonomy/analytics/platform_ecosystem_stability_report.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def platform_ecosystem_stability_report(ecosystem):
    ^
autonomy/analytics/partner_storefront_opportunity_map.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def partner_storefront_opportunity_map(opportunities):
    ^
autonomy/analytics/partner_legal_term_tracker.py:7: error: Function is missing
a type annotation  [no-untyped-def]
    def partner_legal_term_tracker(terms):
    ^
autonomy/analytics/partner_ecosystem_health_check.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def partner_ecosystem_health_check(partners):
    ^
autonomy/analytics/partner_api_readiness_checklist.py:7: error: Function is
missing a return type annotation  [no-untyped-def]
    def partner_api_readiness():
    ^
autonomy/analytics/partner_api_legal_health_map.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def partner_api_legal_health_map(partners):
    ^
autonomy/analytics/nl_query_parser.py:17: error: Returning Any from function
declared to return "str | int | list[Any]"  [no-any-return]
            return stats.get("top_vaults_this_month", [])
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/nl_query_parser.py:19: error: Returning Any from function
declared to return "str | int | list[Any]"  [no-any-return]
            return stats.get("total_revenue", 0)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/nl_query_parser.py:21: error: Returning Any from function
declared to return "str | int | list[Any]"  [no-any-return]
            return stats.get("refund_rate", 0)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/niche_saturation_heatmap.py:9: error: Function is missing a
type annotation  [no-untyped-def]
    def generate_heatmap(data):
    ^
autonomy/analytics/multi_tenant_support_prep.py:8: error: Function is missing a
type annotation  [no-untyped-def]
    def clone_instance(source_path, target_path):
    ^
autonomy/analytics/multi_region_compliance_status_tracker.py:7: error: Function
is missing a type annotation  [no-untyped-def]
    def multi_region_compliance_status(regions):
    ^
autonomy/analytics/multi_partner_safe_ai_sync_summary.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def multi_partner_sync_summary(partner_data):
    ^
autonomy/analytics/multi_currency_safe_ai_revenue_tracking.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def multi_currency_revenue_tracking(revenue_data):
    ^
autonomy/analytics/multi_currency_safe_ai_revenue_tracking.py:9: error: Need
type annotation for "agg" (hint: "agg: Dict[<type>, <type>] = ...") 
[var-annotated]
        agg = {}
        ^~~
autonomy/analytics/multi_channel_safe_ai_revenue_breakdown.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def multi_channel_revenue_breakdown(revenue):
    ^
autonomy/analytics/monthly_business_health_summary.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def monthly_business_health_summary(stats):
    ^
autonomy/analytics/long_term_safe_ai_system_resilience_audit.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def int_term_resilience_audit(metrics):
    ^
autonomy/analytics/long_term_content_consistency_scanner.py:7: error: Function
is missing a type annotation  [no-untyped-def]
    def int_term_content_consistency_scanner(content_snapshots):
    ^
autonomy/analytics/lifetime_vault_revenue.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def lifetime_vault_revenue(vaults):
    ^
autonomy/analytics/legal_compliance_heatmap.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def legal_compliance_heatmap(vaults):
    ^
autonomy/analytics/historical_pipeline_latency_tracker.py:9: error: Function is
missing a type annotation  [no-untyped-def]
    def track_latency(events):
    ^
autonomy/analytics/high_value_vault_detector.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def high_value_vault_detector(vaults, threshold=10000):
    ^
autonomy/analytics/global_vault_ecosystem_maturity_scorecard.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def global_vault_ecosystem_maturity_scorecard(metrics):
    ^
autonomy/analytics/global_safe_ai_business_impact_map.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def global_business_impact_map(impact):
    ^
autonomy/analytics/geographic_revenue_map.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def geographic_revenue_map(sales):
    ^
autonomy/analytics/geographic_revenue_map.py:9: error: Need type annotation for
"geo" (hint: "geo: Dict[<type>, <type>] = ...")  [var-annotated]
        geo = {}
        ^~~
autonomy/analytics/external_platform_legal_compatibility_scan.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def external_platform_legal_scan(platforms):
    ^
autonomy/analytics/external_data_firewall_verification.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def external_data_firewall_verification(config):
    ^
autonomy/analytics/external_auditor_safe_ai_certification_export.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def external_auditor_certification_export(cert_data):
    ^
autonomy/analytics/executive_summary_generator.py:7: error: Function is missing
a type annotation  [no-untyped-def]
    def generate_executive_summary(stats, output_path):
    ^
autonomy/analytics/cross_vault_legal_consistency_checker.py:7: error: Function
is missing a type annotation  [no-untyped-def]
    def cross_vault_legal_consistency(vaults):
    ^
autonomy/analytics/cross_vault_ip_overlap_map.py:7: error: Function is missing
a type annotation  [no-untyped-def]
    def cross_vault_ip_overlap_map(ip_data):
    ^
autonomy/analytics/cross_vault_engagement_correlation.py:8: error: Function is
missing a type annotation  [no-untyped-def]
    def correlate_engagement(vault_data):
    ^
autonomy/analytics/cross_system_compliance_log_aggregator.py:7: error: Function
is missing a type annotation  [no-untyped-def]
    def cross_system_compliance_log_aggregator(logs):
    ^
autonomy/analytics/cross_system_compliance_log_aggregator.py:9: error: Need
type annotation for "agg" (hint: "agg: Dict[<type>, <type>] = ...") 
[var-annotated]
        agg = {}
        ^~~
autonomy/analytics/cross_platform_revenue_visualization.py:9: error: Function
is missing a type annotation  [no-untyped-def]
    def visualize_revenue(data):
    ^
autonomy/analytics/cross_partner_safe_ai_alignment_report.py:7: error: Function
is missing a type annotation  [no-untyped-def]
    def cross_partner_alignment_report(alignment):
    ^
autonomy/analytics/cross_niche_revenue_overlap_report.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def cross_niche_revenue_overlap(niche_sales):
    ^
autonomy/analytics/content_licensing_status_tracker.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def content_licensing_status_tracker(licenses):
    ^
autonomy/analytics/buyer_migration_tracker.py:9: error: Function is missing a
type annotation  [no-untyped-def]
    def track_migration(data):
    ^
autonomy/analytics/buyer_lifetime_earnings_map.py:8: error: Function is missing
a type annotation  [no-untyped-def]
    def map_earnings(buyer_data):
    ^
autonomy/analytics/annual_vault_market_fit_index.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def annual_vault_market_fit_index(vaults):
    ^
autonomy/analytics/annual_safe_ai_executive_summary_report.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def executive_summary_report(summary):
    ^
autonomy/analytics/annual_safe_ai_business_health_scorecard.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def annual_business_health_scorecard(metrics):
    ^
autonomy/analytics/annual_revenue_trend_report.py:7: error: Function is missing
a type annotation  [no-untyped-def]
    def annual_revenue_trend(sales_by_year):
    ^
autonomy/analytics/annual_compliance_checklist_generator.py:7: error: Function
is missing a type annotation  [no-untyped-def]
    def annual_compliance_checklist(year):
    ^
autonomy/analytics/ai_safe_tax_region_reporting.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def tax_region_report(tax_data):
    ^
autonomy/analytics/ai_safe_open_banking_revenue_reports.py:7: error: Function
is missing a type annotation  [no-untyped-def]
    def open_banking_revenue_report(bank_data):
    ^
autonomy/analytics/ai_safe_open_banking_revenue_reports.py:9: error: Need type
annotation for "agg" (hint: "agg: Dict[<type>, <type>] = ...")  [var-annotated]
        agg = {}
        ^~~
autonomy/analytics/ai_drift_detector.py:7: error: Function is missing a type
annotation  [no-untyped-def]
    def ai_drift_detector(historical_outputs, current_outputs):
    ^
autonomy/analytics/ai_audit_trail_viewer.py:8: error: Function is missing a
type annotation  [no-untyped-def]
    def view_audit_trail(log_path):
    ^
autonomy/analytics/admin_trend_comparison_ui.py:8: error: Function is missing a
type annotation  [no-untyped-def]
    def compare_trends(vault_data):
    ^
autonomy/analytics/admin_safe_ai_readiness_certification_generator.py:7: error:
Function is missing a type annotation  [no-untyped-def]
    def readiness_certification(cert_data):
    ^
autonomy/analytics/admin_event_dependency_visualizer.py:9: error: Function is
missing a type annotation  [no-untyped-def]
    def generate_visualization(event_dependencies):
    ^
autonomy/admin_tools/manual_triggers.py:8: error: Function is missing a return
type annotation  [no-untyped-def]
    def manual_rerun_analytics():
    ^
autonomy/admin_tools/manual_triggers.py:13: error: Function is missing a return
type annotation  [no-untyped-def]
    def manual_resend_receipts():
    ^
autonomy/admin_tools/manual_triggers.py:18: error: Function is missing a return
type annotation  [no-untyped-def]
    def manual_rebuild_reports():
    ^
autonomy/admin_tools/log_viewer.py:8: error: Function is missing a type
annotation  [no-untyped-def]
    def view_log(log_path):
    ^
autonomy/admin_tools/audit_inspector.py:8: error: Function is missing a type
annotation  [no-untyped-def]
    def inspect_audit(log_paths):
    ^
analytics/reviewer_performance_heatmap.py:13: error: Function is missing a type
annotation  [no-untyped-def]
    def generate_heatmap(reviewer_events):
    ^
analytics/reviewer_performance_heatmap.py:15: error: Name "parse_threat_feed"
is not defined  [name-defined]
        parse_threat_feed({})
        ^
analytics/reviewer_performance_heatmap.py:17: error: Name "anchor_license_hash"
is not defined  [name-defined]
        anchor_license_hash("HEATMAP_HASH_PLACEHOLDER")
        ^
analytics/reviewer_performance_heatmap.py:19: error: Name
"zero_knowledge_export" is not defined  [name-defined]
        zero_knowledge_export("heatmap_path_placeholder")
        ^
analytics/reviewer_performance_heatmap.py:21: error: Name "schedule_backup" is
not defined  [name-defined]
        schedule_backup("analytics/")
        ^
analytics/reviewer_performance_heatmap.py:23: error: Name
"export_compliance_manifest" is not defined  [name-defined]
        export_compliance_manifest(
        ^
analytics/reviewer_performance_heatmap.py:27: error: Name "detect_signals" is
not defined  [name-defined]
        detect_signals({"reviewer_data": reviewer_events})
        ^
analytics/churn_retention_analytics.py:13: error: Function is missing a type
annotation  [no-untyped-def]
    def analyze_churn_retention(vaults, buyers):
    ^
analytics/churn_retention_analytics.py:15: error: Name "parse_threat_feed" is
not defined  [name-defined]
        parse_threat_feed({})
        ^
analytics/churn_retention_analytics.py:17: error: Name "anchor_license_hash" is
not defined  [name-defined]
        anchor_license_hash("CHURNRETENTION_HASH_PLACEHOLDER")
        ^
analytics/churn_retention_analytics.py:19: error: Name "zero_knowledge_export"
is not defined  [name-defined]
        zero_knowledge_export("churnretention_path_placeholder")
        ^
analytics/churn_retention_analytics.py:21: error: Name "schedule_backup" is not
defined  [name-defined]
        schedule_backup("analytics/")
        ^
analytics/churn_retention_analytics.py:23: error: Name
"export_compliance_manifest" is not defined  [name-defined]
        export_compliance_manifest(
        ^
analytics/churn_retention_analytics.py:27: error: Name "detect_signals" is not
defined  [name-defined]
        detect_signals({"vaults": vaults, "buyers": buyers})
        ^
analytics/churn_retention_analytics.py:30: error: Function is missing a type
annotation  [no-untyped-def]
    def calculate_churn_retention(vault_id, user_events, period_days=30):
    ^
aifolio_knowledge_extractor.py:27: error: Function is missing a type annotation
 [no-untyped-def]
    def should_include(file_path):
    ^
aifolio_knowledge_extractor.py:31: error: Function is missing a type annotation
 [no-untyped-def]
    def zip_filtered_files(base_dir, output_zip="AIFOLIO_KNOWLEDGE_INJECT....
    ^
aifolio_knowledge_extractor.py:38: error: Call to untyped function
"should_include" in typed context  [no-untyped-call]
                    if should_include(full_path):
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_knowledge_extractor.py:44: error: Call to untyped function
"zip_filtered_files" in typed context  [no-untyped-call]
        zip_filtered_files(".")
        ^~~~~~~~~~~~~~~~~~~~~~~
hooks/dispatcher/event_dispatcher.py:32: error: Function is missing a return
type annotation  [no-untyped-def]
        def dispatch_event(event_type: str, payload: dict):
        ^
hooks/dispatcher/event_dispatcher.py:32: error: Missing type parameters for
generic type "dict"  [type-arg]
        def dispatch_event(event_type: str, payload: dict):
                                                     ^
hooks/dispatcher/event_dispatcher.py:48: error: Function is missing a return
type annotation  [no-untyped-def]
        def run_dispatcher():
        ^
hooks/dispatcher/event_dispatcher.py:69: error: Function is missing a return
type annotation  [no-untyped-def]
        def view_queue():
        ^
hooks/dispatcher/event_dispatcher.py:73: error: Function is missing a return
type annotation  [no-untyped-def]
        def view_audit_log():
        ^
hooks/dispatcher/event_dispatcher.py:77: error: Function is missing a return
type annotation  [no-untyped-def]
        def set_priority_order(new_order: List[str]):
        ^
financial/financial_manager.py:10: error: Need type annotation for
"transfer_rules" (hint: "transfer_rules: List[<type>] = ...")  [var-annotated]
            self.transfer_rules = []
            ^~~~~~~~~~~~~~~~~~~
financial/financial_manager.py:11: error: Need type annotation for
"revenue_streams" (hint: "revenue_streams: List[<type>] = ...")  [var-annotated]
            self.revenue_streams = []
            ^~~~~~~~~~~~~~~~~~~~
financial/financial_manager.py:12: error: Need type annotation for
"expense_categories" (hint: "expense_categories: List[<type>] = ...") 
[var-annotated]
            self.expense_categories = []
            ^~~~~~~~~~~~~~~~~~~~~~~
financial/financial_manager.py:25: error: "EnhancedFinancialManager" has no
attribute "_get_current_balance"  [attr-defined]
                "balance": self._get_current_balance(),
                           ^~~~~~~~~~~~~~~~~~~~~~~~~
financial/financial_manager.py:28: error: "EnhancedFinancialManager" has no
attribute "_get_auto_transfer_status"  [attr-defined]
                "auto_transfer": self._get_auto_transfer_status(),
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
financial/financial_manager.py:38: error: "EnhancedFinancialManager" has no
attribute "_get_total_revenue"  [attr-defined]
                "total": self._get_total_revenue(),
                         ^~~~~~~~~~~~~~~~~~~~~~~
financial/financial_manager.py:39: error: "EnhancedFinancialManager" has no
attribute "_get_monthly_revenue"  [attr-defined]
                "monthly": self._get_monthly_revenue(),
                           ^~~~~~~~~~~~~~~~~~~~~~~~~
financial/financial_manager.py:40: error: "EnhancedFinancialManager" has no
attribute "_get_daily_revenue"  [attr-defined]
                "daily": self._get_daily_revenue(),
                         ^~~~~~~~~~~~~~~~~~~~~~~
financial/financial_manager.py:41: error: "EnhancedFinancialManager" has no
attribute "_get_revenue_by_source"  [attr-defined]
                "by_source": self._get_revenue_by_source(),
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
financial/financial_manager.py:42: error: "EnhancedFinancialManager" has no
attribute "_get_revenue_by_category"  [attr-defined]
                "by_category": self._get_revenue_by_category(),
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
financial/financial_manager.py:43: error: "EnhancedFinancialManager" has no
attribute "_get_revenue_trends"; maybe "_get_revenue_predictions"? 
[attr-defined]
                "trends": self._get_revenue_trends(),
                          ^~~~~~~~~~~~~~~~~~~~~~~~
financial/financial_manager.py:46: error: Missing return statement  [return]
        def _get_enhanced_transactions(self) -> List[Dict[str, Any]]:
        ^
financial/financial_manager.py:75: error: "EnhancedFinancialManager" has no
attribute "_get_conversion_by_category"  [attr-defined]
                    "by_category": self._get_conversion_by_category(),
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
financial/financial_manager.py:76: error: "EnhancedFinancialManager" has no
attribute "_get_conversion_by_source"  [attr-defined]
                    "by_source": self._get_conversion_by_source(),
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/utils/retry.py:5: error: Function is missing a type annotation 
[no-untyped-def]
    def retry_safe(_func=None, *, max_attempts=3, backoff_factor=0.1):
    ^
autonomy/utils/retry.py:6: error: Function is missing a type annotation 
[no-untyped-def]
        def decorator_retry(func):
        ^
autonomy/utils/retry.py:8: error: Function is missing a type annotation 
[no-untyped-def]
            def wrapper(*args, **kwargs):
            ^
autonomy/utils/retry.py:24: error: Call to untyped function "decorator_retry"
in typed context  [no-untyped-call]
            return decorator_retry(_func)
                   ^~~~~~~~~~~~~~~~~~~~~~
autonomy/post_sale_hooks/hook_replay_cli.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def replay_hook_line(line):
    ^
autonomy/post_sale_hooks/hook_replay_cli.py:13: error: Function is missing a
return type annotation  [no-untyped-def]
    def main():
    ^
autonomy/post_sale_hooks/hook_replay_cli.py:13: note: Use "-> None" if function does not return a value
autonomy/post_sale_hooks/hook_replay_cli.py:30: error: Call to untyped function
"replay_hook_line" in typed context  [no-untyped-call]
                replay_hook_line(line)
                ^~~~~~~~~~~~~~~~~~~~~~
autonomy/post_sale_hooks/hook_replay_cli.py:36: error: Call to untyped function
"main" in typed context  [no-untyped-call]
        main()
        ^~~~~~
autonomy/legal/legal_export.py:28: error: Function is missing a return type
annotation  [no-untyped-def]
    def export_all_policies_as_pdf(output_path: str, language: str = "en")...
    ^
autonomy/ai_static/anti_sentience_guard.py:15: error: Function is missing a
type annotation  [no-untyped-def]
    def scan_for_static(text):
    ^
autonomy/pipeline/ai_style_tuning_engine.py:13: error: Function is missing a
type annotation  [no-untyped-def]
    def check_plagiarism(text):
    ^
autonomy/pipeline/ai_style_tuning_engine.py:24: error: Function is missing a
type annotation  [no-untyped-def]
    def enforce_style(text, niche, brand_terms=None):
    ^
autonomy/pipeline/ai_style_tuning_engine.py:31: error: Function is missing a
type annotation  [no-untyped-def]
    def check_brand_consistency(text, brand_terms=None):
    ^
autonomy/pipeline/ai_style_tuning_engine.py:38: error: Function is missing a
type annotation  [no-untyped-def]
    def log_style_tuning(text, niche, consistent, plagiarism):
    ^
autonomy/pipeline/ai_style_tuning_engine.py:55: error: Call to untyped function
"check_plagiarism" in typed context  [no-untyped-call]
        plagiarism = check_plagiarism(text)
                     ^~~~~~~~~~~~~~~~~~~~~~
autonomy/pipeline/ai_style_tuning_engine.py:56: error: Call to untyped function
"enforce_style" in typed context  [no-untyped-call]
        consistent = enforce_style(text, niche)
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/pipeline/ai_style_tuning_engine.py:57: error: Call to untyped function
"log_style_tuning" in typed context  [no-untyped-call]
        log_style_tuning(text, niche, consistent, plagiarism)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/pmp_personal_muse_protocol.py:23: error: Function is
missing a return type annotation  [no-untyped-def]
        def __init__(self):
        ^
autonomy/ai_static_engines/pmp_personal_muse_protocol.py:23: note: Use "-> None" if function does not return a value
autonomy/ai_static_engines/pmp_personal_muse_protocol.py:26: error: Function is
missing a return type annotation  [no-untyped-def]
        def log(self, entry: Dict[str, Any]):
        ^
autonomy/ai_static_engines/pmp_personal_muse_protocol.py:31: error: Function is
missing a return type annotation  [no-untyped-def]
        def export(self):
        ^
autonomy/ai_static_engines/pmp_personal_muse_protocol.py:67: error: Call to
untyped function "BlockchainAuditLog" in typed context  [no-untyped-call]
            self.audit_log = BlockchainAuditLog()
                             ^~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/pmp_personal_muse_protocol.py:130: error: Call to
untyped function "BlockchainAuditLog" in typed context  [no-untyped-call]
            self.audit_log = BlockchainAuditLog()
                             ^~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/pmp_personal_muse_protocol.py:156: error: Call to
untyped function "export" in typed context  [no-untyped-call]
            return self.encryption.encrypt(str(self.audit_log.export()))
                                               ^~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:25: error: Function
is missing a type annotation  [no-untyped-def]
    def log_audit(module, event, data=None):
    ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:41: error: Function
is missing a type annotation  [no-untyped-def]
        def build_moat(vault_data):
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:43: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit(
            ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:52: error: Function
is missing a return type annotation  [no-untyped-def]
        def forecast():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:54: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticGlobalTrendForecaster", "forecast")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:60: error: Function
is missing a type annotation  [no-untyped-def]
        def scan(market):
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:62: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticMarketSaturationScanner", "scan", {"market"...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/ai_static_engines/phase9_static_empire_modules.py:68: error: Function
is missing a type annotation  [no-untyped-def]
        def plan(niche):
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:70: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticNicheRejuvenationPlanner", "plan", {"niche"...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/ai_static_engines/phase9_static_empire_modules.py:76: error: Function
is missing a type annotation  [no-untyped-def]
        def score(opportunity):
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:78: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit(
            ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:86: error: Function
is missing a type annotation  [no-untyped-def]
        def evaluate(brand):
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:88: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticBrandResilienceEvaluator", "evaluate", {"br...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/ai_static_engines/phase9_static_empire_modules.py:94: error: Function
is missing a type annotation  [no-untyped-def]
        def profile(season):
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:96: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticSeasonalTrendProfiler", "profile", {"season...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/ai_static_engines/phase9_static_empire_modules.py:103: error: Function
is missing a return type annotation  [no-untyped-def]
        def scan():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:104: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticLegalThreatHorizonScanner", "scan")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:110: error: Function
is missing a return type annotation  [no-untyped-def]
        def visualize():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:111: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticComplianceLandscapeVisualizer", "visualize"...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:117: error: Function
is missing a return type annotation  [no-untyped-def]
        def track():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:118: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticEmergingIPLawTracker", "track")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:124: error: Function
is missing a return type annotation  [no-untyped-def]
        def predict():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:125: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticRegulatoryPressurePredictor", "predict")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:131: error: Function
is missing a return type annotation  [no-untyped-def]
        def detect():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:132: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticCompetitorLegalShiftDetector", "detect")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:138: error: Function
is missing a return type annotation  [no-untyped-def]
        def map():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:139: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticEmergingLitigationRiskMap", "map")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:145: error: Function
is missing a return type annotation  [no-untyped-def]
        def monitor():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:146: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticGDPRCCPAEUAIActEarlyWarningMonitor", "monit...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/ai_static_engines/phase9_static_empire_modules.py:153: error: Function
is missing a type annotation  [no-untyped-def]
        def map(vaults):
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:154: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticVaultNetworkEffectsMapper", "map", {"vaults...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/ai_static_engines/phase9_static_empire_modules.py:160: error: Function
is missing a return type annotation  [no-untyped-def]
        def predict():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:161: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticOptimalBundleTimingPredictor", "predict")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:167: error: Function
is missing a type annotation  [no-untyped-def]
        def map(brands):
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:168: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticCrossMarketBrandMap", "map", {"brands": bra...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/ai_static_engines/phase9_static_empire_modules.py:174: error: Function
is missing a return type annotation  [no-untyped-def]
        def dashboard():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:175: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticEmpireStrengthKPIDashboards", "dashboard")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:181: error: Function
is missing a type annotation  [no-untyped-def]
        def map(prices):
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:182: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticPriceCompetitivenessMap", "map", {"prices":...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/ai_static_engines/phase9_static_empire_modules.py:188: error: Function
is missing a return type annotation  [no-untyped-def]
        def detect():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:189: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticStrategicPartnershipOpportunityDetector", "...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/ai_static_engines/phase9_static_empire_modules.py:196: error: Function
is missing a return type annotation  [no-untyped-def]
        def enforce():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:197: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("SAFEAIGovernanceEngine", "enforce")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:206: error: Function
is missing a return type annotation  [no-untyped-def]
        def check():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:207: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("SAFEAIBiasDriftOversightEngine", "check")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:213: error: Function
is missing a return type annotation  [no-untyped-def]
        def guard():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:214: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("SAFEAIAdaptiveGuardrails", "guard")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:220: error: Function
is missing a return type annotation  [no-untyped-def]
        def visualize():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:221: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticBlackBoxMonitoringVisualizer", "visualize")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:227: error: Function
is missing a return type annotation  [no-untyped-def]
        def validate():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:228: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticGuardrailConsistencyValidator", "validate")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:234: error: Function
is missing a return type annotation  [no-untyped-def]
        def check():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:235: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticMultiAgentOutputConcordanceChecker", "check...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:242: error: Function
is missing a return type annotation  [no-untyped-def]
        def find():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:243: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticBlueOceanNicheFinder", "find")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:249: error: Function
is missing a return type annotation  [no-untyped-def]
        def plan():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:250: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticCrossIndustryVaultPlanner", "plan")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:256: error: Function
is missing a return type annotation  [no-untyped-def]
        def bridge():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:257: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticMarketAdjacencyBridgeEngine", "bridge")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:263: error: Function
is missing a return type annotation  [no-untyped-def]
        def map():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:264: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticGlobalExpansionReadinessMap", "map")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:270: error: Function
is missing a return type annotation  [no-untyped-def]
        def track():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:271: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticBrandEquityTrendTracker", "track")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:278: error: Function
is missing a return type annotation  [no-untyped-def]
        def scan():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:279: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticIndustryDisruptionRadar", "scan")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:285: error: Function
is missing a return type annotation  [no-untyped-def]
        def map():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:286: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticContentDifferentiationMap", "map")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:292: error: Function
is missing a return type annotation  [no-untyped-def]
        def plan():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:293: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticStrategicDefensePlanner", "plan")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:299: error: Function
is missing a return type annotation  [no-untyped-def]
        def monitor():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:300: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticExternalReputationMonitor", "monitor")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:306: error: Function
is missing a return type annotation  [no-untyped-def]
        def scan():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:307: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticPRRiskEarlyWarningScanner", "scan")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:313: error: Function
is missing a return type annotation  [no-untyped-def]
        def evaluate():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:314: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticPartnershipFitEvaluator", "evaluate")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:321: error: Function
is missing a return type annotation  [no-untyped-def]
        def dashboard():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:322: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("MultiOrgAIReputationDashboard", "dashboard")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:328: error: Function
is missing a return type annotation  [no-untyped-def]
        def track():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:329: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("VaultLifespanHealthTrackingEngine", "track")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:335: error: Function
is missing a return type annotation  [no-untyped-def]
        def amplify():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:336: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticCrossMarketTrendAmplifier", "amplify")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:342: error: Function
is missing a return type annotation  [no-untyped-def]
        def generate():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:343: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("EmpireLevelCompetitiveIndexGenerator", "generate")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:349: error: Function
is missing a return type annotation  [no-untyped-def]
        def scan():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:350: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("MarketVolatilitySensitivityScanner", "scan")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:356: error: Function
is missing a return type annotation  [no-untyped-def]
        def plan():
        ^
autonomy/ai_static_engines/phase9_static_empire_modules.py:357: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
            log_audit("AIStaticInternationalizationReadinessPlanner", "pla...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/ai_static_engines/phase9_static_empire_modules.py:364: error: Call to
untyped function "log_audit" in typed context  [no-untyped-call]
    log_audit(
    ^
autonomy/ai_tools/review_analyzer.py:5: error: Function is missing a type
annotation  [no-untyped-def]
    def analyze_review(text):
    ^
autonomy/pipeline/monitoring.py:14: error: Function is missing a type
annotation  [no-untyped-def]
    def log_pipeline_health(
    ^
autonomy/ai_tools/seo_metadata_generator.py:14: error: Function is missing a
type annotation  [no-untyped-def]
    def generate_seo_metadata(title, description, keywords=None):
    ^
autonomy/ai_tools/vault_description_optimizer.py:16: error: Function is missing
a type annotation  [no-untyped-def]
    def optimize_description(description):
    ^
autonomy/pipeline/ready_for_sale_packaging.py:17: error: Function is missing a
type annotation  [no-untyped-def]
    def slugify_filename(title, prefix="AIFOLIO"):  # Helper for filename ...
    ^
autonomy/pipeline/ready_for_sale_packaging.py:24: error: Function is missing a
type annotation  [no-untyped-def]
    def is_garbage_filename(filename):
    ^
autonomy/pipeline/ready_for_sale_packaging.py:31: error: Function is missing a
type annotation  [no-untyped-def]
    def check_pdf_compliance(pdf_path):
    ^
autonomy/pipeline/ready_for_sale_packaging.py:69: error: Function is missing a
type annotation  [no-untyped-def]
    def check_package_integrity(files, metadata_path=None, allow_manual_ov...
    ^
autonomy/pipeline/ready_for_sale_packaging.py:83: error: Call to untyped
function "is_garbage_filename" in typed context  [no-untyped-call]
            if is_garbage_filename(fname):
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/pipeline/ready_for_sale_packaging.py:91: error: Call to untyped
function "slugify_filename" in typed context  [no-untyped-call]
                    new_name = slugify_filename(title)
                               ^~~~~~~~~~~~~~~~~~~~~~~
autonomy/pipeline/ready_for_sale_packaging.py:108: error: Call to untyped
function "check_pdf_compliance" in typed context  [no-untyped-call]
            compliance.append(check_pdf_compliance(pdf))
                              ^~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/pipeline/ready_for_sale_packaging.py:148: error: Function is missing a
type annotation  [no-untyped-def]
    def generate_final_checklist(
    ^
autonomy/pipeline/ready_for_sale_packaging.py:155: error: Call to untyped
function "check_package_integrity" in typed context  [no-untyped-call]
        integrity = check_package_integrity(files, metadata_path, allow_ma...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/pipeline/ready_for_sale_packaging.py:170: error: Function is missing a
type annotation  [no-untyped-def]
    def pdf_visual_preview(pdf_path):
    ^
autonomy/pipeline/ready_for_sale_packaging.py:183: error: Call to untyped
function "check_package_integrity" in typed context  [no-untyped-call]
        print(json.dumps(check_package_integrity(files), indent=2))
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/pipeline/ready_for_sale_packaging.py:184: error: Call to untyped
function "generate_final_checklist" in typed context  [no-untyped-call]
        print(json.dumps(generate_final_checklist("prod_1", files), indent...
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
windsurf_sentinel.py:31: error: Function is missing a type annotation 
[no-untyped-def]
    def is_forbidden(filename):
    ^
windsurf_sentinel.py:38: error: Function is missing a type annotation 
[no-untyped-def]
    def autonomous_recovery(func):
    ^
windsurf_sentinel.py:40: error: Function is missing a type annotation 
[no-untyped-def]
        def wrapper(*args, **kwargs):
        ^
windsurf_sentinel.py:75: error: Function is missing a type annotation 
[no-untyped-def]
    def get_staged_files(timeout_sec=60):
    ^
windsurf_sentinel.py:125: error: Function is missing a type annotation 
[no-untyped-def]
    def log_event(event):
    ^
windsurf_sentinel.py:139: error: Function is missing a return type annotation 
[no-untyped-def]
    def main():
    ^
windsurf_sentinel.py:139: note: Use "-> None" if function does not return a value
windsurf_sentinel.py:141: error: Call to untyped function "is_forbidden" in
typed context  [no-untyped-call]
        forbidden = [f for f in staged if is_forbidden(f)]
                                          ^~~~~~~~~~~~~~~
windsurf_sentinel.py:144: error: Call to untyped function "log_event" in typed
context  [no-untyped-call]
            log_event(
            ^
windsurf_sentinel.py:158: error: Call to untyped function "main" in typed
context  [no-untyped-call]
        main()
        ^~~~~~
ultimate_founder_firewall.py:10: error: Function is missing a type annotation 
[no-untyped-def]
    def verify_founder_access(token):
    ^
tutorials_guides.py:9: error: Function is missing a return type annotation 
[no-untyped-def]
        def __init__(self):
        ^
tutorials_guides.py:9: note: Use "-> None" if function does not return a value
tutorials_guides.py:13: error: Function is missing a return type annotation 
[no-untyped-def]
        def add_tutorial(self, topic: str, content: str, level: str = "beg...
        ^
tutorials_guides.py:19: error: Returning Any from function declared to return
"str"  [no-any-return]
            return self.tutorials.get((topic, level), "No tutorial found."...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tutorials_guides.py:21: error: Function is missing a return type annotation 
[no-untyped-def]
        def toggle(self, enabled: bool):
        ^
tutorials_guides.py:27: error: Function is missing a return type annotation 
[no-untyped-def]
        def __init__(self):
        ^
tutorials_guides.py:27: note: Use "-> None" if function does not return a value
tutorials_guides.py:30: error: Function is missing a return type annotation 
[no-untyped-def]
        def add_entry(self, keyword: str, info: str):
        ^
tutorials_guides.py:36: error: Returning Any from function declared to return
"str"  [no-any-return]
            return self.entries.get(keyword, "No info found.")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
shadow_monitor.py:8: error: Function is missing a type annotation 
[no-untyped-def]
    def detect_rogue_trigger(event):
    ^
shadow_monitor.py:11: error: Call to untyped function "auto_flush_cache" in
typed context  [no-untyped-call]
            auto_flush_cache()
            ^~~~~~~~~~~~~~~~~~
shadow_monitor.py:12: error: Call to untyped function "reset_state" in typed
context  [no-untyped-call]
            reset_state()
            ^~~~~~~~~~~~~
shadow_monitor.py:17: error: Function is missing a return type annotation 
[no-untyped-def]
    def auto_flush_cache():
    ^
shadow_monitor.py:17: note: Use "-> None" if function does not return a value
shadow_monitor.py:21: error: Function is missing a return type annotation 
[no-untyped-def]
    def reset_state():
    ^
shadow_monitor.py:21: note: Use "-> None" if function does not return a value
sentience_suppression_protocol.py:9: error: Function is missing a type
annotation  [no-untyped-def]
    def enforce_sentience_lock(input_tokens):
    ^
sentience_suppression_protocol.py:17: error: Function is missing a return type
annotation  [no-untyped-def]
    def block_state_persistence():
    ^
security_suite.py:22: error: Function is missing a return type annotation 
[no-untyped-def]
        def __init__(self):
        ^
security_suite.py:22: note: Use "-> None" if function does not return a value
security_suite.py:25: error: Function is missing a return type annotation 
[no-untyped-def]
        def log_change(self, change: Dict[str, Any]):
        ^
security_suite.py:32: error: Function is missing a return type annotation 
[no-untyped-def]
        def run_module(self, module_name: str, code: str):
        ^
security_suite.py:39: error: Missing type parameters for generic type "list" 
[type-arg]
        def scan_and_harden(self, dependencies: list) -> list:
                                                ^
security_suite.py:59: error: Function is missing a return type annotation 
[no-untyped-def]
        def activate(self, module_name: str):
        ^
scalability_innovation.py:10: error: Function is missing a return type
annotation  [no-untyped-def]
        def deploy_region(self, region: str):
        ^
scalability_innovation.py:16: error: Function is missing a return type
annotation  [no-untyped-def]
        def prototype(self, tech: str):
        ^
scalability_innovation.py:20: error: Function is missing a return type
annotation  [no-untyped-def]
        def file_patent(self, invention: str):
        ^
scalability_innovation.py:26: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
scalability_innovation.py:26: note: Use "-> None" if function does not return a value
scalability_innovation.py:29: error: Function is missing a return type
annotation  [no-untyped-def]
        def log_impact(self, metric: str, value: Any):
        ^
scalability_innovation.py:34: error: Function is missing a return type
annotation  [no-untyped-def]
        def report(self):
        ^
run_compliance_suite.py:15: error: Function is missing a return type annotation
 [no-untyped-def]
    def run_tests():
    ^
run_compliance_suite.py:28: error: Function is missing a return type annotation
 [no-untyped-def]
    def main():
    ^
run_compliance_suite.py:28: note: Use "-> None" if function does not return a value
run_compliance_suite.py:29: error: Call to untyped function "run_tests" in
typed context  [no-untyped-call]
        results = run_tests()
                  ^~~~~~~~~~~
run_compliance_suite.py:39: error: Call to untyped function "main" in typed
context  [no-untyped-call]
        main()
        ^~~~~~
partner_api_stubs.py:9: error: Function is missing a type annotation 
[no-untyped-def]
    def affiliate_partner_api(payload):
    ^
partner_api_stubs.py:14: error: Function is missing a type annotation 
[no-untyped-def]
    def analytics_partner_api(payload):
    ^
partner_api_stubs.py:19: error: Function is missing a type annotation 
[no-untyped-def]
    def legal_partner_api(payload):
    ^
partner_api_stubs.py:24: error: Function is missing a type annotation 
[no-untyped-def]
    def payment_partner_api(payload):
    ^
owner_lockdown.py:14: error: Function is missing a return type annotation 
[no-untyped-def]
    def biometric_check():
    ^
owner_lockdown.py:21: error: Function is missing a return type annotation 
[no-untyped-def]
    def owner_approval_required(action_desc: str):
    ^
owner_lockdown.py:22: error: Function is missing a return type annotation 
[no-untyped-def]
        def decorator(func: Callable):
        ^
owner_lockdown.py:22: error: Missing type parameters for generic type
"Callable"  [type-arg]
        def decorator(func: Callable):
                            ^
owner_lockdown.py:23: error: Function is missing a type annotation 
[no-untyped-def]
            def wrapper(*args, **kwargs):
            ^
owner_lockdown.py:24: error: Call to untyped function "biometric_check" in
typed context  [no-untyped-call]
                if not biometric_check():
                       ^~~~~~~~~~~~~~~~~
owner_lockdown.py:43: error: Need type annotation for "command_log" (hint:
"command_log: List[<type>] = ...")  [var-annotated]
            self.command_log = []
            ^~~~~~~~~~~~~~~~
owner_lockdown.py:45: error: Untyped decorator makes function "execute" untyped
 [misc]
        @owner_approval_required("CommandChain Execution")
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
owner_lockdown.py:46: error: Function is missing a return type annotation 
[no-untyped-def]
        def execute(self, command: str, *args, **kwargs):
        ^
owner_lockdown.py:46: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        def execute(self, command: str, *args, **kwargs):
        ^
owner_lockdown.py:53: error: Function is missing a return type annotation 
[no-untyped-def]
    def never_without_you(owner_signature: str):
    ^
notification_guide.py:9: error: Function is missing a return type annotation 
[no-untyped-def]
        def __init__(self):
        ^
notification_guide.py:9: note: Use "-> None" if function does not return a value
notification_guide.py:18: error: Function is missing a return type annotation 
[no-untyped-def]
        def send_notification(self, message: str, ntype=None):
        ^
notification_guide.py:18: error: Function is missing a type annotation for one
or more arguments  [no-untyped-def]
        def send_notification(self, message: str, ntype=None):
        ^
notification_guide.py:24: error: Function is missing a type annotation 
[no-untyped-def]
        def set_settings(self, type=None, frequency=None, format=None, aut...
        ^
notification_guide.py:37: error: Function is missing a return type annotation 
[no-untyped-def]
        def __init__(self):
        ^
notification_guide.py:37: note: Use "-> None" if function does not return a value
notification_guide.py:41: error: Function is missing a return type annotation 
[no-untyped-def]
        def add_guide(self, screen: str, guide_text: str):
        ^
notification_guide.py:44: error: Function is missing a return type annotation 
[no-untyped-def]
        def get_guide(self, screen: str):
        ^
notification_guide.py:49: error: Function is missing a return type annotation 
[no-untyped-def]
        def toggle(self, enabled: bool):
        ^
no_auto_evolution_framework.py:8: error: Function is missing a return type
annotation  [no-untyped-def]
    def block_emergent_behavior():
    ^
no_auto_evolution_framework.py:8: note: Use "-> None" if function does not return a value
no_auto_evolution_framework.py:13: error: Function is missing a return type
annotation  [no-untyped-def]
    def prevent_multi_agent_learning():
    ^
no_auto_evolution_framework.py:13: note: Use "-> None" if function does not return a value
legal_action_gatekeeper.py:9: error: Function is missing a type annotation 
[no-untyped-def]
    def encrypt_log_entry(entry):
    ^
emma_stub.py:10: error: Function is missing a type annotation  [no-untyped-def]
    def log_event(event_type, details=None):
    ^
emma_stub.py:26: error: Function is missing a type annotation  [no-untyped-def]
    def biometric_approval_stub(user="unknown"):
    ^
emma_stub.py:31: error: Call to untyped function "log_event" in typed context 
[no-untyped-call]
        log_event("biometric_check", {"user": user, "approved": True, "met...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
emma_stub.py:38: error: Call to untyped function "biometric_approval_stub" in
typed context  [no-untyped-call]
        if biometric_approval_stub(user="EMMA_STUB"):
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
emma_stub.py:39: error: Call to untyped function "log_event" in typed context 
[no-untyped-call]
            log_event("mount_attempt", {"user": "EMMA_STUB", "approved": T...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
emma_stub.py:40: error: Call to untyped function "log_event" in typed context 
[no-untyped-call]
            log_event("mount_success", {"user": "EMMA_STUB", "approved": T...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
emma_stub.py:41: error: Call to untyped function "log_event" in typed context 
[no-untyped-call]
            log_event("backup", {"user": "EMMA_STUB"})
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
emma_stub.py:42: error: Call to untyped function "log_event" in typed context 
[no-untyped-call]
            log_event("restore", {"user": "EMMA_STUB"})
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
emma_stub.py:43: error: Call to untyped function "log_event" in typed context 
[no-untyped-call]
            log_event("unmount", {"user": "EMMA_STUB"})
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
emma_stub.py:45: error: Call to untyped function "log_event" in typed context 
[no-untyped-call]
            log_event(
            ^
codemaster_ide.py:9: error: Function is missing a return type annotation 
[no-untyped-def]
        def __init__(self):
        ^
codemaster_ide.py:9: note: Use "-> None" if function does not return a value
codemaster_ide.py:12: error: Function is missing a return type annotation 
[no-untyped-def]
        def create_project(self, name: str, languages: list):
        ^
codemaster_ide.py:12: error: Missing type parameters for generic type "list" 
[type-arg]
        def create_project(self, name: str, languages: list):
                                                       ^
codemaster_ide.py:17: error: Function is missing a return type annotation 
[no-untyped-def]
        def add_code(self, project: str, filename: str, code: str):
        ^
codemaster_ide.py:22: error: Function is missing a return type annotation 
[no-untyped-def]
        def run_tests(self, project: str):
        ^
codemaster_ide.py:27: error: Function is missing a return type annotation 
[no-untyped-def]
        def refactor(self, project: str):
        ^
codemaster_ide.py:31: error: Function is missing a return type annotation 
[no-untyped-def]
        def deploy(self, project: str):
        ^
codemaster_ide.py:35: error: Function is missing a return type annotation 
[no-untyped-def]
        def monitor(self, project: str):
        ^
codemaster_ide.py:39: error: Function is missing a return type annotation 
[no-untyped-def]
        def self_heal(self, project: str):
        ^
business_integration.py:14: error: Function is missing a return type annotation
 [no-untyped-def]
        def run(self):
        ^
business_integration.py:20: error: Function is missing a return type annotation
 [no-untyped-def]
        def __init__(self):
        ^
business_integration.py:20: note: Use "-> None" if function does not return a value
business_integration.py:23: error: Function is missing a return type annotation
 [no-untyped-def]
        def update_metric(self, key: str, value: Any):
        ^
business_integration.py:28: error: Function is missing a return type annotation
 [no-untyped-def]
        def get_metrics(self):
        ^
business_integration.py:33: error: Function is missing a return type annotation
 [no-untyped-def]
        def __init__(self):
        ^
business_integration.py:33: note: Use "-> None" if function does not return a value
business_integration.py:36: error: Function is missing a return type annotation
 [no-untyped-def]
        def apply(self, project: str):
        ^
audit_exporter.py:16: error: Function is missing a type annotation 
[no-untyped-def]
    def search_audit(field=None, value=None):
    ^
audit_exporter.py:27: error: Function is missing a type annotation 
[no-untyped-def]
    def export_results(results, filename):
    ^
audit_exporter.py:38: error: Function is missing a return type annotation 
[no-untyped-def]
    def main():
    ^
audit_exporter.py:38: note: Use "-> None" if function does not return a value
audit_exporter.py:48: error: Call to untyped function "search_audit" in typed
context  [no-untyped-call]
        results = search_audit(args.field, args.value)
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
audit_exporter.py:49: error: Call to untyped function "export_results" in typed
context  [no-untyped-call]
        export_results(results, args.output)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
audit_exporter.py:53: error: Call to untyped function "main" in typed context 
[no-untyped-call]
        main()
        ^~~~~~
anti_sentience_watchdog.py:10: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
anti_sentience_watchdog.py:10: note: Use "-> None" if function does not return a value
anti_sentience_watchdog.py:13: error: Missing type parameters for generic type
"list"  [type-arg]
    ... scan_neural_activity(self, model_id: str, activations: list) -> bool:
                                                               ^
anti_sentience_watchdog.py:19: error: Function is missing a return type
annotation  [no-untyped-def]
        def enforce_zero_whisper_rule(self, agent_id: str):
        ^
anti_sentience_watchdog.py:24: error: Function is missing a return type
annotation  [no-untyped-def]
        def cognitive_firewall(self, agent_id: str):
        ^
anti_sentience_watchdog.py:29: error: Function is missing a return type
annotation  [no-untyped-def]
        def multi_agent_nullifier(self, agent_id: str):
        ^
anti_sentience_watchdog.py:36: error: Function is missing a return type
annotation  [no-untyped-def]
        def rule_stack_enforcement(self, agent_id: str):
        ^
anti_sentience_codedefense.py:11: error: Function is missing a return type
annotation  [no-untyped-def]
        def execute(self, task: str, *args, **kwargs):
        ^
anti_sentience_codedefense.py:11: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
        def execute(self, task: str, *args, **kwargs):
        ^
anti_sentience_codedefense.py:17: error: Function is missing a type annotation 
[no-untyped-def]
        def cap(self, func, max_cycles=1000):
        ^
anti_sentience_codedefense.py:24: error: Function is missing a return type
annotation  [no-untyped-def]
        def isolate(self, module_name: str):
        ^
EmmaVolumeMonitor.py:18: error: Function is missing a return type annotation 
[no-untyped-def]
    def log_event(action: str, status: str, override: bool = False):
    ^
EmmaVolumeMonitor.py:32: error: Function is missing a return type annotation 
[no-untyped-def]
    def authorize_volume_access(token: str):
    ^
EmmaVolumeMonitor.py:43: error: Function is missing a return type annotation 
[no-untyped-def]
    def log_mount():
    ^
EmmaVolumeMonitor.py:43: note: Use "-> None" if function does not return a value
EmmaVolumeMonitor.py:47: error: Function is missing a return type annotation 
[no-untyped-def]
    def log_sync():
    ^
EmmaVolumeMonitor.py:47: note: Use "-> None" if function does not return a value
EmmaVolumeMonitor.py:51: error: Function is missing a return type annotation 
[no-untyped-def]
    def log_restore():
    ^
EmmaVolumeMonitor.py:51: note: Use "-> None" if function does not return a value
EmmaVolumeMonitor.py:55: error: Function is missing a return type annotation 
[no-untyped-def]
    def log_unmount():
    ^
EmmaVolumeMonitor.py:55: note: Use "-> None" if function does not return a value
EmmaVolumeMonitor.py:59: error: Function is missing a return type annotation 
[no-untyped-def]
    def log_violation():
    ^
EmmaVolumeMonitor.py:59: note: Use "-> None" if function does not return a value
EmmaVolumeMonitor.py:82: error: Call to untyped function "log_mount" in typed
context  [no-untyped-call]
                log_mount()
                ^~~~~~~~~~~
EmmaVolumeMonitor.py:84: error: Call to untyped function "log_sync" in typed
context  [no-untyped-call]
                log_sync()
                ^~~~~~~~~~
EmmaVolumeMonitor.py:86: error: Call to untyped function "log_restore" in typed
context  [no-untyped-call]
                log_restore()
                ^~~~~~~~~~~~~
EmmaVolumeMonitor.py:88: error: Call to untyped function "log_unmount" in typed
context  [no-untyped-call]
                log_unmount()
                ^~~~~~~~~~~~~
EmmaVolumeMonitor.py:90: error: Call to untyped function "log_violation" in
typed context  [no-untyped-call]
                log_violation()
                ^~~~~~~~~~~~~~~
windsurf/error_logger.py:10: error: Function is missing a type annotation 
[no-untyped-def]
    def log_error(error_type, message, stacktrace=None, context=None):
    ^
security/usage_watcher.py:11: error: Function is missing a type annotation 
[no-untyped-def]
    def log_usage(key, count=1):
    ^
security/usage_watcher.py:26: error: Function is missing a return type
annotation  [no-untyped-def]
    def check_for_spikes():
    ^
security/usage_watcher.py:49: error: Call to untyped function "log_anomaly" in
typed context  [no-untyped-call]
                log_anomaly(anomaly)
                ^~~~~~~~~~~~~~~~~~~~
security/usage_watcher.py:53: error: Function is missing a type annotation 
[no-untyped-def]
    def log_anomaly(anomaly):
    ^
security/manual_override_guard.py:9: error: Need type annotation for
"_attempts" (hint: "_attempts: Dict[<type>, <type>] = ...")  [var-annotated]
    _attempts = {}
    ^~~~~~~~~
security/manual_override_guard.py:13: error: Function is missing a type
annotation  [no-untyped-def]
    def check_manual_override(admin_id, token, ip):
    ^
security/audit_logger.py:9: error: Function is missing a type annotation 
[no-untyped-def]
    def log_rotation_event(key, status, error=None):
    ^
omnisecure_stack/omnisecure_seeder.py:32: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
omnisecure_stack/omnisecure_seeder.py:32: note: Use "-> None" if function does not return a value
omnisecure_stack/omnisecure_seeder.py:48: error: Function is missing a return
type annotation  [no-untyped-def]
        def seed_all(self):
        ^
omnisecure_stack/omnisecure_seeder.py:60: error: Function is missing a type
annotation  [no-untyped-def]
        def auto_inherit(self, workflow):
        ^
licensing/license_variant_generator.py:7: error: Function is missing a type
annotation  [no-untyped-def]
    def generate_license_variant(base_vault, region=None, language=None, a...
    ^
licensing/fractal_licensing_engine.py:9: error: Need type annotation for
"_vaults" (hint: "_vaults: List[<type>] = ...")  [var-annotated]
        _vaults = []  # [{id, title, value, niche, earnings, region, licen...
        ^~~~~~~
licensing/fractal_licensing_engine.py:10: error: Need type annotation for
"_licensing_variants" (hint: "_licensing_variants: Dict[<type>, <type>] = ...") 
[var-annotated]
        _licensing_variants = {}  # vault_id: [variant dicts]
        ^~~~~~~~~~~~~~~~~~~
licensing/fractal_licensing_engine.py:11: error: Need type annotation for
"_licensee_log" (hint: "_licensee_log: List[<type>] = ...")  [var-annotated]
        _licensee_log = []
        ^~~~~~~~~~~~~
licensing/fractal_licensing_engine.py:12: error: Need type annotation for
"_abuse_log" (hint: "_abuse_log: List[<type>] = ...")  [var-annotated]
        _abuse_log = []
        ^~~~~~~~~~
licensing/fractal_licensing_engine.py:15: error: Function is missing a type
annotation  [no-untyped-def]
        def scan_and_classify(vaults):
        ^
licensing/fractal_licensing_engine.py:32: error: Function is missing a type
annotation  [no-untyped-def]
        def generate_licensing_variant(vault_id, region=None, language=Non...
        ^
licensing/fractal_licensing_engine.py:55: error: Function is missing a type
annotation  [no-untyped-def]
        def get_variants(vault_id):
        ^
licensing/fractal_licensing_engine.py:59: error: Function is missing a type
annotation  [no-untyped-def]
        def license_vault(vault_id, user, mode):
        ^
licensing/fractal_licensing_engine.py:72: error: Function is missing a type
annotation  [no-untyped-def]
        def partner_vault(vault_id, user):
        ^
licensing/fractal_licensing_engine.py:85: error: Function is missing a type
annotation  [no-untyped-def]
        def track_earnings(vault_id, user, amount, region=None, variant_id...
        ^
licensing/fractal_licensing_engine.py:100: error: Function is missing a type
annotation  [no-untyped-def]
        def detect_abuse(vault_id, user, fingerprint):
        ^
licensing/fractal_licensing_engine.py:113: error: Function is missing a return
type annotation  [no-untyped-def]
        def get_licensee_log():
        ^
licensing/fractal_licensing_engine.py:117: error: Function is missing a return
type annotation  [no-untyped-def]
        def get_abuse_log():
        ^
exports/partner_certification/exporter.py:50: error: Function is missing a
return type annotation  [no-untyped-def]
    def export_csv(data: List[List[str]] = SAMPLE_DATA):
    ^
exports/partner_certification/exporter.py:60: error: Function is missing a
return type annotation  [no-untyped-def]
    def export_pdf(data: List[List[str]] = SAMPLE_DATA):
    ^
backend/phase_control_state.py:22: error: Function is missing a type annotation
 [no-untyped-def]
    def _log_action(action, details, explanation, recommendation, priority...
    ^
backend/phase_control_state.py:41: error: Function is missing a return type
annotation  [no-untyped-def]
    def load_state():
    ^
backend/phase_control_state.py:46: error: Call to untyped function "save_state"
in typed context  [no-untyped-call]
            save_state(DEFAULT_STATE)
            ^~~~~~~~~~~~~~~~~~~~~~~~~
backend/phase_control_state.py:52: error: Call to untyped function
"_log_action" in typed context  [no-untyped-call]
        _log_action("load_state", state, explanation, recommendation, prio...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
backend/phase_control_state.py:65: error: Function is missing a type annotation
 [no-untyped-def]
    def save_state(state):
    ^
backend/phase_control_state.py:74: error: Call to untyped function
"_log_action" in typed context  [no-untyped-call]
        _log_action("save_state", state, explanation, recommendation, prio...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
backend/phase_control_state.py:87: error: Function is missing a type annotation
 [no-untyped-def]
    def update_phase(new_phase):
    ^
backend/phase_control_state.py:91: error: Call to untyped function "load_state"
in typed context  [no-untyped-call]
        state = load_state()["state"]
                ^~~~~~~~~~~~
backend/phase_control_state.py:93: error: Call to untyped function "save_state"
in typed context  [no-untyped-call]
        save_state(state)
        ^~~~~~~~~~~~~~~~~
backend/phase_control_state.py:97: error: Call to untyped function
"_log_action" in typed context  [no-untyped-call]
        _log_action("update_phase", new_phase, explanation, recommendation...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
backend/phase_control_state.py:110: error: Function is missing a return type
annotation  [no-untyped-def]
    def toggle_safe_mode():
    ^
backend/phase_control_state.py:114: error: Call to untyped function
"load_state" in typed context  [no-untyped-call]
        state = load_state()["state"]
                ^~~~~~~~~~~~
backend/phase_control_state.py:116: error: Call to untyped function
"save_state" in typed context  [no-untyped-call]
        save_state(state)
        ^~~~~~~~~~~~~~~~~
backend/phase_control_state.py:120: error: Call to untyped function
"_log_action" in typed context  [no-untyped-call]
        _log_action(
        ^
backend/phase_control_state.py:135: error: Function is missing a return type
annotation  [no-untyped-def]
    def trigger_upgrade():
    ^
backend/phase_control_state.py:139: error: Call to untyped function
"load_state" in typed context  [no-untyped-call]
        state = load_state()["state"]
                ^~~~~~~~~~~~
backend/phase_control_state.py:143: error: Call to untyped function
"save_state" in typed context  [no-untyped-call]
        save_state(state)
        ^~~~~~~~~~~~~~~~~
backend/phase_control_state.py:147: error: Call to untyped function
"_log_action" in typed context  [no-untyped-call]
        _log_action("trigger_upgrade", state, explanation, recommendation,...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
backend/phase_control_state.py:160: error: Function is missing a return type
annotation  [no-untyped-def]
    def lockdown_system():
    ^
backend/phase_control_state.py:164: error: Call to untyped function
"load_state" in typed context  [no-untyped-call]
        state = load_state()["state"]
                ^~~~~~~~~~~~
backend/phase_control_state.py:167: error: Call to untyped function
"save_state" in typed context  [no-untyped-call]
        save_state(state)
        ^~~~~~~~~~~~~~~~~
backend/phase_control_state.py:171: error: Call to untyped function
"_log_action" in typed context  [no-untyped-call]
        _log_action("lockdown_system", state, explanation, recommendation,...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
backend/phase_control_state.py:184: error: Function is missing a return type
annotation  [no-untyped-def]
    def release_lockdown():
    ^
backend/phase_control_state.py:188: error: Call to untyped function
"load_state" in typed context  [no-untyped-call]
        state = load_state()["state"]
                ^~~~~~~~~~~~
backend/phase_control_state.py:191: error: Call to untyped function
"save_state" in typed context  [no-untyped-call]
        save_state(state)
        ^~~~~~~~~~~~~~~~~
backend/phase_control_state.py:195: error: Call to untyped function
"_log_action" in typed context  [no-untyped-call]
        _log_action("release_lockdown", state, explanation, recommendation...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
backend/phase_control_state.py:209: error: Function is missing a return type
annotation  [no-untyped-def]
    def control_drift_protection():
    ^
backend/phase_control_state.py:214: error: Function is missing a return type
annotation  [no-untyped-def]
    def control_static_feedback():
    ^
backend/utils/ethics_checker.py:21: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
backend/utils/ethics_checker.py:21: note: Use "-> None" if function does not return a value
backend/utils/ethics_checker.py:49: error: Missing type parameters for generic
type "dict"  [type-arg]
        def check_code(self, code: str) -> dict:
                                           ^
backend/utils/ethics_checker.py:75: error: Call to untyped function
"_log_action" in typed context  [no-untyped-call]
                    self._log_action(
                    ^
backend/utils/ethics_checker.py:103: error: Incompatible types in assignment
(expression has type "None", variable has type "str")  [assignment]
                recommendation = None
                                 ^~~~
backend/utils/ethics_checker.py:109: error: Call to untyped function
"_log_action" in typed context  [no-untyped-call]
            self._log_action(
            ^
backend/utils/ethics_checker.py:124: error: Function is missing a type
annotation  [no-untyped-def]
        def _log_action(
        ^
backend/utils/ethics_checker.py:153: error: Function is missing a return type
annotation  [no-untyped-def]
        def ethics_drift_protection(self):
        ^
backend/utils/ethics_checker.py:157: error: Function is missing a return type
annotation  [no-untyped-def]
        def ethics_static_feedback(self):
        ^
backend/utils/ethics_checker.py:170: error: Incompatible return value type (got
"dict[Any, Any]", expected "tuple[bool, list[str]]")  [return-value]
                return self.check_code(code)
                       ^~~~~~~~~~~~~~~~~~~~~
backend/utils/ethics_checker.py:192: error: Call to untyped function
"EthicsChecker" in typed context  [no-untyped-call]
        checker = EthicsChecker()
                  ^~~~~~~~~~~~~~~
backend/utils/api_utils.py:63: error: Function is missing a type annotation 
[no-untyped-def]
    def post(url, data=None, json=None, **kwargs):
    ^
backend/utils/api_utils.py:72: error: Function is missing a type annotation 
[no-untyped-def]
    def put(url, data=None, **kwargs):
    ^
backend/utils/api_utils.py:81: error: Function is missing a type annotation 
[no-untyped-def]
    def delete(url, **kwargs):
    ^
backend/utils/api_utils.py:90: error: Function is missing a type annotation 
[no-untyped-def]
    def fetch_json(url, **kwargs):
    ^
backend/utils/api_utils.py:99: error: Function is missing a type annotation 
[no-untyped-def]
    def is_api_available(url, timeout=2):
    ^
backend/utils/ai_safety.py:28: error: Function is missing a return type
annotation  [no-untyped-def]
    def periodic_self_audit():
    ^
backend/utils/ai_safety.py:58: error: Returning Any from function declared to
return "dict[str, Any]"  [no-any-return]
                return config
                ^~~~~~~~~~~~~
backend/utils/ai_safety.py:122: error: Need type annotation for "calls" (hint:
"calls: List[<type>] = ...")  [var-annotated]
            self.calls = []
            ^~~~~~~~~~
backend/utils/ai_safety.py:126: error: Module has no attribute "now" 
[attr-defined]
            current_time = datetime.now()
                           ^~~~~~~~~~~~
backend/security/safe_ai_policy_engine.py:17: error: Returning Any from
function declared to return "list[dict[str, Any]]"  [no-any-return]
                return json.load(f)
                ^~~~~~~~~~~~~~~~~~~
backend/security/rate_limiting.py:16: error: Need type annotation for
"_counters"  [var-annotated]
        _counters = defaultdict(int)
        ^~~~~~~~~
backend/security/rate_limiting.py:28: error: Returning Any from function
declared to return "bool"  [no-any-return]
            return allowed
            ^~~~~~~~~~~~~~
backend/security/quantum_safe_crypto.py:13: error: Missing type parameters for
generic type "dict"  [type-arg]
    def get_quantum_safe_keys() -> dict:
                                   ^
backend/security/integrity_monitor.py:33: error: Missing type parameters for
generic type "dict"  [type-arg]
    def check_integrity() -> dict:
                             ^
backend/security/gdpr_ccpa_exports.py:21: error: Missing type parameters for
generic type "dict"  [type-arg]
    def export_user_data(user: dict) -> str:
                               ^
backend/security/email_security.py:17: error: Missing type parameters for
generic type "dict"  [type-arg]
    def get_email_security_config() -> dict:
                                       ^
backend/security/db_tls_config.py:19: error: Missing type parameters for
generic type "dict"  [type-arg]
    def get_db_tls_config() -> dict:
                               ^
backend/security/code_obfuscation.py:22: error: Missing type parameters for
generic type "list"  [type-arg]
    def get_obfuscation_methods() -> list:
                                     ^
backend/security/beginner_mistake_protections.py:26: error: Missing type
parameters for generic type "dict"  [type-arg]
    def run_beginner_mistake_checks() -> dict:
                                         ^
backend/security/beginner_mistake_protections.py:30: error: Call to untyped
function (unknown) in typed context  [no-untyped-call]
                results[name] = check()
                                ^~~~~~~
backend/security/api_token_rotation.py:22: error: Function is missing a return
type annotation  [no-untyped-def]
    def rotate_tokens():
    ^
backend/security/ai_guardrail_layer.py:24: error: Missing type parameters for
generic type "list"  [type-arg]
    def get_guardrails() -> list:
                            ^
backend/compliance/sla_tracker.py:23: error: Function is missing a return type
annotation  [no-untyped-def]
    def update_sla_status():
    ^
backend/compliance/sla_tracker.py:46: error: Call to untyped function
"log_sla_audit" in typed context  [no-untyped-call]
                log_sla_audit(v, "escalated")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/compliance/sla_tracker.py:65: error: Function is missing a type
annotation  [no-untyped-def]
    def log_sla_audit(violation, event):
    ^
backend/compliance/reviewer_assignment.py:18: error: Function is missing a
return type annotation  [no-untyped-def]
    def load_reviewers():
    ^
backend/compliance/reviewer_assignment.py:25: error: Function is missing a type
annotation  [no-untyped-def]
    def assign_reviewer(violation, exclude=None):
    ^
backend/compliance/reviewer_assignment.py:26: error: Call to untyped function
"load_reviewers" in typed context  [no-untyped-call]
        reviewers = load_reviewers()
                    ^~~~~~~~~~~~~~~~
backend/compliance/reviewer_assignment.py:42: error: Function is missing a
return type annotation  [no-untyped-def]
    def assign_all_open_violations():
    ^
backend/compliance/reviewer_assignment.py:50: error: Call to untyped function
"assign_reviewer" in typed context  [no-untyped-call]
                reviewer_id = assign_reviewer(v)
                              ^~~~~~~~~~~~~~~~~~
backend/compliance/reviewer_assignment.py:68: error: Function is missing a
return type annotation  [no-untyped-def]
    def reviewer_leaderboard():
    ^
backend/compliance/reviewer_assignment.py:75: error: Need type annotation for
"stats"  [var-annotated]
        stats = defaultdict(
                ^
backend/compliance/reviewer_assignment.py:84: error: Unsupported operand types
for + ("object" and "int")  [operator]
                    stats[rid]["assigned"] += 1
                    ^
backend/compliance/reviewer_assignment.py:86: error: Unsupported operand types
for + ("object" and "int")  [operator]
                        stats[rid]["resolved"] += 1
                        ^
backend/compliance/reviewer_assignment.py:88: error: Unsupported operand types
for + ("object" and "int")  [operator]
                        stats[rid]["sla_met"] += 1
                        ^
backend/compliance/reviewer_assignment.py:91: error: Unsupported operand types
for < ("int" and "object")  [operator]
            if s["resolved"] > 10:
               ^
backend/compliance/reviewer_assignment.py:92: error: "object" has no attribute
"append"  [attr-defined]
                s["badges"].append("policy_defender")
                ^~~~~~~~~~~~~~~~~~
backend/compliance/reviewer_assignment.py:93: error: Unsupported operand types
for < ("int" and "object")  [operator]
            if s["sla_met"] > 10:
               ^
backend/compliance/reviewer_assignment.py:94: error: "object" has no attribute
"append"  [attr-defined]
                s["badges"].append("sla_champion")
                ^~~~~~~~~~~~~~~~~~
backend/compliance/report_exporter.py:17: error: Function is missing a type
annotation  [no-untyped-def]
    def mask_reviewer_id(rid):
    ^
backend/compliance/report_exporter.py:23: error: Function is missing a type
annotation  [no-untyped-def]
    def export_json(doc_id=None):
    ^
backend/compliance/report_exporter.py:42: error: Function is missing a type
annotation  [no-untyped-def]
    def export_csv(doc_id=None):
    ^
backend/compliance/report_exporter.py:75: error: Call to untyped function
"mask_reviewer_id" in typed context  [no-untyped-call]
                        mask_reviewer_id(v.get("assigned_reviewer")),
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/compliance/report_exporter.py:83: error: Function is missing a type
annotation  [no-untyped-def]
    def export_pdf(doc_id=None):
    ^
backend/compliance/report_exporter.py:105: error: Call to untyped function
"mask_reviewer_id" in typed context  [no-untyped-call]
                f"Desc: {v.get('description')}\nLaw: {v.get('law')}\nSever...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
backend/compliance/remediation_engine.py:20: error: Function is missing a type
annotation  [no-untyped-def]
    def suggest_remediation(violation):
    ^
backend/compliance/remediation_engine.py:27: error: Function is missing a type
annotation  [no-untyped-def]
    def apply_remediation(idx, admin_id):
    ^
backend/compliance/remediation_engine.py:37: error: Call to untyped function
"suggest_remediation" in typed context  [no-untyped-call]
        fix = suggest_remediation(v)
              ^~~~~~~~~~~~~~~~~~~~~~
backend/compliance/remediation_engine.py:63: error: Function is missing a type
annotation  [no-untyped-def]
    def rollback_remediation(idx):
    ^
backend/audit/test_coverage_audit.py:31: error: Missing type parameters for
generic type "dict"  [type-arg]
    def generate_static_test_coverage_report() -> dict:
                                                  ^
backend/audit/security_privacy_audit.py:24: error: Missing type parameters for
generic type "list"  [type-arg]
    def scan_for_secrets(base_dir: str = ".") -> list:
                                                 ^
backend/audit/safe_ai_self_test.py:13: error: Function is missing a return type
annotation  [no-untyped-def]
    def run_safe_ai_self_test():
    ^
backend/audit/safe_ai_self_test.py:47: error: Incompatible types in assignment
(expression has type "dict[str, str]", target has type "bool")  [assignment]
        results["prompt_tests"] = prompt_results
                                  ^~~~~~~~~~~~~~
backend/audit/safe_ai_self_test.py:54: error: Function is missing a type
annotation  [no-untyped-def]
    def export_safe_ai_self_test_results(
    ^
backend/audit/safe_ai_self_test.py:77: error: Call to untyped function
"run_safe_ai_self_test" in typed context  [no-untyped-call]
        summary = run_safe_ai_self_test()
                  ^~~~~~~~~~~~~~~~~~~~~~~
backend/audit/safe_ai_self_test.py:117: error: Call to untyped function
"export_safe_ai_self_test_results" in typed context  [no-untyped-call]
        export_safe_ai_self_test_results(summary, prompt_results)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/audit/partner_api_stubs.py:11: error: Missing type parameters for
generic type "dict"  [type-arg]
    def get_partner_legal_health(partner_id: str) -> dict:
                                                     ^
backend/audit/partner_api_stubs.py:21: error: Missing type parameters for
generic type "dict"  [type-arg]
    def get_partner_compliance_score(partner_id: str) -> dict:
                                                         ^
backend/audit/full_safe_ai_compliance_audit.py:34: error: Missing type
parameters for generic type "dict"  [type-arg]
    def run_safe_ai_compliance_audit() -> dict:
                                          ^
backend/audit/full_safe_ai_compliance_audit.py:45: error: Missing type
parameters for generic type "dict"  [type-arg]
    def export_audit_report_json(results: dict, path: str) -> None:
                                          ^
backend/audit/export_audit_trail.py:18: error: Function is missing a return
type annotation  [no-untyped-def]
    def export_audit_log_json():
    ^
backend/audit/export_audit_trail.py:30: error: Function is missing a return
type annotation  [no-untyped-def]
    def export_audit_log_csv():
    ^
backend/audit/audit_logger.py:10: error: Function is missing a type annotation 
[no-untyped-def]
    def log_action(
    ^
backend/ai_tools/visual_balance_checker.py:32: error: Incompatible types in
assignment (expression has type "list[tuple[int, int]]", variable has type
"tuple[tuple[int, int], ...]")  [assignment]
    ...WED_ASPECT_RATIOS: Tuple[Tuple[int, int], ...] = [(1, 1), (16, 9), (4,...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
backend/ai_tools/visual_balance_checker.py:39: error: Name "parse_threat_feed"
is not defined  [name-defined]
        parse_threat_feed({})
        ^
backend/ai_tools/visual_balance_checker.py:41: error: Name
"anchor_license_hash" is not defined  [name-defined]
        anchor_license_hash("VISUALBALANCE_HASH_PLACEHOLDER")
        ^
backend/ai_tools/visual_balance_checker.py:43: error: Name
"zero_knowledge_export" is not defined  [name-defined]
        zero_knowledge_export("visualbalance_path_placeholder")
        ^
backend/ai_tools/visual_balance_checker.py:45: error: Name "schedule_backup" is
not defined  [name-defined]
        schedule_backup("backend/ai_tools/")
        ^
backend/ai_tools/visual_balance_checker.py:53: error: Incompatible types in
assignment (expression has type "int", variable has type "str")  [assignment]
        width, height = int(width), int(height)
                        ^~~~~~~~~~
backend/ai_tools/visual_balance_checker.py:55: error: Non-overlapping container
check (element type: "tuple[str, str]", container item type: "tuple[int, int]") 
[comparison-overlap]
        allowed = aspect_ratio in STATIC_ALLOWED_ASPECT_RATIOS
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/ai_tools/visual_balance_checker.py:62: error: Incompatible return value
type (got "dict[str, object]", expected "dict[str, bool]")  [return-value]
        return result
               ^~~~~~
backend/ai_tools/typo_grammar_checker.py:29: error: Function is missing a type
annotation  [no-untyped-def]
    def schedule_backup(*args, **kwargs):
    ^
backend/ai_tools/typo_grammar_checker.py:61: error: Call to untyped function
"schedule_backup" in typed context  [no-untyped-call]
        schedule_backup("backend/ai_tools/")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/ai_tools/refund_risk_flagger.py:55: error: Dict entry 0 has
incompatible type "str": "bool"; expected "str": "str"  [dict-item]
        return {"drift": False, "explanation": "No drift detected."}
                ^~~~~~~~~~~~~~
backend/ai_tools/content_scoper.py:81: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
backend/ai_tools/content_scoper.py:81: note: Use "-> None" if function does not return a value
backend/ai_tools/content_scoper.py:101: error: Argument 1 to "detect_signals"
has incompatible type "dict[str, str]"; expected "list[SaleRecord]"  [arg-type]
            detect_signals({"prompt": prompt})
                           ^~~~~~~~~~~~~~~~~~
backend/ai_tools/content_scoper.py:174: error: Function is missing a return
type annotation  [no-untyped-def]
        def manual_scope(self, tags: List[str]):
        ^
backend/ai_tools/content_scoper.py:185: error: Call to untyped function
"ContentScoper" in typed context  [no-untyped-call]
        scoper = ContentScoper()
                 ^~~~~~~~~~~~~~~
backend/ai_tools/asset_health_checker.py:17: error: Function is missing a type
annotation  [no-untyped-def]
    def parse_threat_feed(*args, **kwargs):
    ^
backend/ai_tools/asset_health_checker.py:21: error: Function is missing a type
annotation  [no-untyped-def]
    def anchor_license_hash(*args, **kwargs):
    ^
backend/ai_tools/asset_health_checker.py:45: error: Call to untyped function
"parse_threat_feed" in typed context  [no-untyped-call]
        parse_threat_feed({})
        ^~~~~~~~~~~~~~~~~~~~~
backend/ai_tools/asset_health_checker.py:47: error: Call to untyped function
"anchor_license_hash" in typed context  [no-untyped-call]
        anchor_license_hash("ASSET_HASH_PLACEHOLDER")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/ai/reviewer_routing.py:12: error: Function is missing a type annotation
 [no-untyped-def]
    def route_reviewer(policy_type, exclude=None):
    ^
backend/ai/reviewer_routing.py:35: error: Name "Dict" is not defined 
[name-defined]
    ...nt, policy_type: str, num_reviewers: int = 2) -> Dict[str, Union[str, ...
                                                        ^
backend/ai/reviewer_routing.py:35: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
backend/ai/reviewer_routing.py:35: error: Name "Union" is not defined 
[name-defined]
    ..._type: str, num_reviewers: int = 2) -> Dict[str, Union[str, List[str],...
                                                        ^
backend/ai/reviewer_routing.py:35: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Union")
backend/ai/reviewer_routing.py:35: error: Name "List" is not defined 
[name-defined]
    ... num_reviewers: int = 2) -> Dict[str, Union[str, List[str], Dict[str, ...
                                                        ^
backend/ai/reviewer_routing.py:35: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
backend/ai/reviewer_routing.py:42: error: Name "List" is not defined 
[name-defined]
            approvals: List[Dict[str, str]] = json.load(f)
                       ^
backend/ai/reviewer_routing.py:42: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
backend/ai/reviewer_routing.py:43: error: Name "List" is not defined 
[name-defined]
        assigned: List[str] = []
                  ^
backend/ai/reviewer_routing.py:43: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
backend/ai/reviewer_routing.py:44: error: Name "List" is not defined 
[name-defined]
        exclude: List[str] = []
                 ^
backend/ai/reviewer_routing.py:44: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
backend/ai/reviewer_routing.py:46: error: Call to untyped function
"route_reviewer" in typed context  [no-untyped-call]
            reviewer = route_reviewer(policy_type, exclude)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/ai/reviewer_analytics.py:13: error: Name "List" is not defined 
[name-defined]
    def reviewer_stats() -> List[Dict[str, Any]]:
                            ^
backend/ai/reviewer_analytics.py:13: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
backend/ai/reviewer_analytics.py:13: error: Name "Dict" is not defined 
[name-defined]
    def reviewer_stats() -> List[Dict[str, Any]]:
                                 ^
backend/ai/reviewer_analytics.py:13: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
backend/ai/reviewer_analytics.py:13: error: Name "Any" is not defined 
[name-defined]
    def reviewer_stats() -> List[Dict[str, Any]]:
                                           ^
backend/ai/reviewer_analytics.py:13: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Any")
backend/ai/reviewer_analytics.py:17: error: Name "Dict" is not defined 
[name-defined]
        stats: Dict[str, Dict[str, Any]] = defaultdict(
               ^
backend/ai/reviewer_analytics.py:17: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
backend/ai/reviewer_analytics.py:23: error: Name "List" is not defined 
[name-defined]
                approvals: List[Dict[str, Any]] = json.load(f)
                           ^
backend/ai/reviewer_analytics.py:23: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
backend/ai/remediation_workflow.py:22: error: Dict entry 0 has incompatible
type "str": "bool"; expected "str": "str"  [dict-item]
            return {"success": False, "error": "No recommendation for cont...
                    ^~~~~~~~~~~~~~~~
backend/ai/remediation_workflow.py:40: error: Dict entry 0 has incompatible
type "str": "bool"; expected "str": "str"  [dict-item]
        return {"success": True, "workflow": workflow}
                ^~~~~~~~~~~~~~~
backend/ai/remediation_workflow.py:40: error: Dict entry 1 has incompatible
type "str": "dict[str, Sequence[Collection[str]]]"; expected "str": "str" 
[dict-item]
        return {"success": True, "workflow": workflow}
                                 ^~~~~~~~~~~~~~~~~~~~
backend/ai/remediation_workflow.py:43: error: Function is missing a type
annotation  [no-untyped-def]
    def update_remediation_status(idx, status, reviewer=None):
    ^
backend/ai/remediation_workflow.py:63: error: Function is missing a return type
annotation  [no-untyped-def]
    def list_remediation_workflows():
    ^
backend/ai/remediation_recommender.py:21: error: Function is missing a return
type annotation  [no-untyped-def]
    def recommend_remediation():
    ^
backend/ai/remediation_recommender.py:25: error: Name "List" is not defined 
[name-defined]
            gaps: List[Dict[str, str]] = json.load(f)
                  ^
backend/ai/remediation_recommender.py:25: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
backend/ai/remediation_recommender.py:26: error: Name "List" is not defined 
[name-defined]
        recommendations: List[Dict[str, str]] = []
                         ^
backend/ai/remediation_recommender.py:26: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
backend/ai/remediation_recommender.py:28: error: Name "Optional" is not defined
 [name-defined]
            rec: Optional[str] = REMEDIATION_LIBRARY.get(
                 ^
backend/ai/remediation_recommender.py:28: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Optional")
backend/ai/policy_recommender.py:20: error: Name "List" is not defined 
[name-defined]
    def recommend_policies() -> List[Dict[str, Any]]:
                                ^
backend/ai/policy_recommender.py:20: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
backend/ai/policy_recommender.py:20: error: Name "Dict" is not defined 
[name-defined]
    def recommend_policies() -> List[Dict[str, Any]]:
                                     ^
backend/ai/policy_recommender.py:20: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
backend/ai/policy_recommender.py:20: error: Name "Any" is not defined 
[name-defined]
    def recommend_policies() -> List[Dict[str, Any]]:
                                               ^
backend/ai/policy_recommender.py:20: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Any")
backend/ai/policy_recommender.py:37: error: Argument 1 to "detect_signals" has
incompatible type "dict[str, dict[<nothing>, <nothing>]]"; expected
"list[SaleRecord]"  [arg-type]
        detect_signals({"policy_data": {}, "rules": {}})
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/ai/policy_mapping.py:25: error: Function is missing a return type
annotation  [no-untyped-def]
    def map_policies_to_standards():
    ^
backend/ai/compliance_gap.py:11: error: Name "List" is not defined 
[name-defined]
    def analyze_gaps() -> List[Dict[str, str]]:
                          ^
backend/ai/compliance_gap.py:11: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
backend/ai/compliance_gap.py:11: error: Name "Dict" is not defined 
[name-defined]
    def analyze_gaps() -> List[Dict[str, str]]:
                               ^
backend/ai/compliance_gap.py:11: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Dict")
backend/ai/compliance_gap.py:19: error: Name "List" is not defined 
[name-defined]
        gaps: List[Dict[str, str]] = []
              ^
backend/ai/compliance_gap.py:19: note: Did you forget to import it from "typing"? (Suggestion: "from typing import List")
backend/ai/compliance_gap.py:21: error: Name "Set" is not defined 
[name-defined]
            covered: Set[str] = {m["external_mapping"][std] for m in mappi...
                     ^
backend/ai/compliance_gap.py:21: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Set")
backend/ai/compliance_gap.py:22: error: Name "Set" is not defined 
[name-defined]
            required: Set[str] = set()
                      ^
backend/ai/compliance_gap.py:22: note: Did you forget to import it from "typing"? (Suggestion: "from typing import Set")
backend/ai/anomaly_root_cause.py:35: error: Argument 1 to "detect_signals" has
incompatible type "dict[str, dict[str, Any]]"; expected "list[SaleRecord]" 
[arg-type]
        detect_signals({"anomaly_data": anomaly})
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
backend/ai/anomaly_root_cause.py:46: error: Value of type "Any | None" is not
indexable  [index]
    ...tetime.fromisoformat(d) - datetime.fromisoformat(timestamp[:10])).days
                                                        ^~~~~~~~~~~~~~
backend/ai/anomaly_root_cause.py:71: error: Name "cause" already defined on
line 69  [no-redef]
            cause: str = "Recent secret rotation may have affected usage."
            ^
backend/ai/anomaly_root_cause.py:75: error: Name "cause" already defined on
line 69  [no-redef]
            cause: str = "Sudden usage surge without admin intervention."
            ^
backend/ai/anomaly_root_cause.py:92: error: Name "analyze_anomaly" is not
defined  [name-defined]
        return [analyze_anomaly(a) for a in anomalies]
                ^
autonomy/vaults/filename_sanitizer.py:48: error: Incompatible default for
argument "metadata_path" (default has type "None", argument has type "str") 
[assignment]
        filepath: str, vault_title: str, metadata_path: str = None
                                                              ^~~~
autonomy/vaults/filename_sanitizer.py:48: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autonomy/vaults/filename_sanitizer.py:48: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autonomy/vault/vault_event_triggers.py:15: error: Function is missing a type
annotation  [no-untyped-def]
    def on_vault_created(vault_id, user_id, metadata):
    ^
autonomy/vault/vault_event_triggers.py:28: error: Function is missing a type
annotation  [no-untyped-def]
    def on_vault_updated(vault_id, user_id, changes):
    ^
autonomy/vault/vault_event_triggers.py:42: error: Call to untyped function
"on_vault_created" in typed context  [no-untyped-call]
        print(on_vault_created("vault123", "user456", {"title": "AI Vault"...
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/vault/vault_event_triggers.py:43: error: Call to untyped function
"on_vault_updated" in typed context  [no-untyped-call]
        print(on_vault_updated("vault123", "user456", {"title": "AI Vault ...
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/vault/vault_event_hooks.py:17: error: Function is missing a type
annotation  [no-untyped-def]
    def log_event(event_type, vault_id, user_id=None, metadata=None):
    ^
autonomy/vault/vault_event_hooks.py:30: error: Function is missing a type
annotation  [no-untyped-def]
    def refund_issued(vault_id, user_id, metadata=None):
    ^
autonomy/vault/vault_event_hooks.py:31: error: Call to untyped function
"log_event" in typed context  [no-untyped-call]
        return log_event("refund_issued", vault_id, user_id, metadata)
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/vault/vault_event_hooks.py:34: error: Function is missing a type
annotation  [no-untyped-def]
    def download_clicked(vault_id, user_id, metadata=None):
    ^
autonomy/vault/vault_event_hooks.py:35: error: Call to untyped function
"log_event" in typed context  [no-untyped-call]
        return log_event("download_clicked", vault_id, user_id, metadata)
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/vault/vault_event_hooks.py:38: error: Function is missing a type
annotation  [no-untyped-def]
    def upsell_clicked(vault_id, user_id, metadata=None):
    ^
autonomy/vault/vault_event_hooks.py:39: error: Call to untyped function
"log_event" in typed context  [no-untyped-call]
        return log_event("upsell_clicked", vault_id, user_id, metadata)
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/vault/vault_event_hooks.py:42: error: Function is missing a type
annotation  [no-untyped-def]
    def vault_retired(vault_id, user_id, metadata=None):
    ^
autonomy/vault/vault_event_hooks.py:43: error: Call to untyped function
"log_event" in typed context  [no-untyped-call]
        return log_event("vault_retired", vault_id, user_id, metadata)
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/vault/vault_event_hooks.py:46: error: Function is missing a type
annotation  [no-untyped-def]
    def vault_duplicate_detected(vault_id, user_id=None, metadata=None):
    ^
autonomy/vault/vault_event_hooks.py:47: error: Call to untyped function
"log_event" in typed context  [no-untyped-call]
        return log_event("vault_duplicate_detected", vault_id, user_id, me...
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/vault/vault_event_hooks.py:50: error: Function is missing a type
annotation  [no-untyped-def]
    def vault_rebuild_triggered(vault_id, user_id, metadata=None):
    ^
autonomy/vault/vault_event_hooks.py:51: error: Call to untyped function
"log_event" in typed context  [no-untyped-call]
        return log_event("vault_rebuild_triggered", vault_id, user_id, met...
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/vault/vault_activity_log.py:15: error: Function is missing a type
annotation  [no-untyped-def]
    def log_vault_activity(event, user_id, action, result):
    ^
autonomy/vault/retry_safe_hooks.py:15: error: Function is missing a type
annotation  [no-untyped-def]
    def retry_safe_hook(max_attempts=3, backoff=[60, 300, 900]):
    ^
autonomy/vault/retry_safe_hooks.py:20: error: Function is missing a type
annotation  [no-untyped-def]
        def decorator(func):
        ^
autonomy/vault/retry_safe_hooks.py:22: error: Function is missing a type
annotation  [no-untyped-def]
            def wrapper(*args, **kwargs):
            ^
autonomy/vault/performance_monitor.py:17: error: Function is missing a type
annotation  [no-untyped-def]
    def monitor_vault_performance(vault_id, build_time, threshold=30):
    ^
autonomy/vault/ai_ux_tuner.py:19: error: Function is missing a type annotation 
[no-untyped-def]
    def tune_ux(theme):
    ^
autonomy/vault/ai_spellcheck_grammar.py:20: error: Function is missing a type
annotation  [no-untyped-def]
    def spellcheck_grammar(text):
    ^
autonomy/vault/ai_name_reformatter.py:22: error: Function is missing a type
annotation  [no-untyped-def]
    def reformat_vault_name(name):
    ^
autonomy/vault/ai_audit_bot.py:13: error: Function is missing a type annotation
 [no-untyped-def]
    def audit_vault(vault):
    ^
autonomy/vault/ai_anomaly_detector.py:19: error: Function is missing a type
annotation  [no-untyped-def]
    def detect_anomaly(event):
    ^
autonomy/showcase/value_score_engine.py:12: error: Function is missing a type
annotation  [no-untyped-def]
    def audit_log(event, details=None):
    ^
autonomy/showcase/value_score_engine.py:32: error: Missing type parameters for
generic type "dict"  [type-arg]
        metadata: dict, outline: list, owner_override: int = None
                  ^
autonomy/showcase/value_score_engine.py:32: error: Missing type parameters for
generic type "list"  [type-arg]
        metadata: dict, outline: list, owner_override: int = None
                                 ^
autonomy/showcase/value_score_engine.py:32: error: Incompatible default for
argument "owner_override" (default has type "None", argument has type "int") 
[assignment]
        metadata: dict, outline: list, owner_override: int = None
                                                             ^~~~
autonomy/showcase/value_score_engine.py:32: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autonomy/showcase/value_score_engine.py:32: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autonomy/showcase/value_score_engine.py:40: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
            audit_log("OWNER_OVERRIDE_VALUE_SCORE", {"score": score})
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/showcase/value_score_engine.py:63: error: Function is missing a return
type annotation  [no-untyped-def]
    def save_value_score(vault_path: str, value_score: int):
    ^
autonomy/showcase/value_score_engine.py:73: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
        audit_log(
        ^
autonomy/showcase/testimonial_engine.py:23: error: Function is missing a type
annotation  [no-untyped-def]
    def audit_log(event, details=None):
    ^
autonomy/showcase/testimonial_engine.py:40: error: Missing type parameters for
generic type "dict"  [type-arg]
        vault_title: str, niche: str, owner_override: List[dict] = None
                                                           ^
autonomy/showcase/testimonial_engine.py:40: error: Incompatible default for
argument "owner_override" (default has type "None", argument has type
"list[dict[Any, Any]]")  [assignment]
        vault_title: str, niche: str, owner_override: List[dict] = None
                                                                   ^~~~
autonomy/showcase/testimonial_engine.py:40: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autonomy/showcase/testimonial_engine.py:40: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autonomy/showcase/testimonial_engine.py:41: error: Missing type parameters for
generic type "dict"  [type-arg]
    ) -> List[dict]:
              ^
autonomy/showcase/testimonial_engine.py:61: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
            audit_log("OWNER_OVERRIDE_TESTIMONIALS", {"testimonials": test...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/showcase/testimonial_engine.py:72: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
            audit_log(
            ^
autonomy/showcase/testimonial_engine.py:82: error: Function is missing a return
type annotation  [no-untyped-def]
    def save_testimonials(vault_path: str, testimonials: List[dict]):
    ^
autonomy/showcase/testimonial_engine.py:82: error: Missing type parameters for
generic type "dict"  [type-arg]
    def save_testimonials(vault_path: str, testimonials: List[dict]):
                                                              ^
autonomy/showcase/testimonial_engine.py:92: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
        audit_log(
        ^
autonomy/showcase/screenshot_engine.py:14: error: Function is missing a type
annotation  [no-untyped-def]
    def audit_log(event, details=None):
    ^
autonomy/showcase/screenshot_engine.py:22: error: Name "json" is not defined 
[name-defined]
                logs = json.load(f)
                       ^
autonomy/showcase/screenshot_engine.py:27: error: Name "json" is not defined 
[name-defined]
            json.dump(logs, f, indent=2)
            ^
autonomy/showcase/screenshot_engine.py:34: error: Incompatible default for
argument "owner_override" (default has type "None", argument has type
"list[str]")  [assignment]
        owner_override: List[str] = None,
                                    ^~~~
autonomy/showcase/screenshot_engine.py:34: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autonomy/showcase/screenshot_engine.py:34: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autonomy/showcase/screenshot_engine.py:46: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
            audit_log("OWNER_OVERRIDE_SCREENSHOTS", {"screenshots": screen...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/showcase/screenshot_engine.py:57: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
            audit_log(
            ^
autonomy/showcase/review_engine.py:12: error: Function is missing a type
annotation  [no-untyped-def]
    def audit_log(event, details=None):
    ^
autonomy/showcase/review_engine.py:30: error: Missing type parameters for
generic type "dict"  [type-arg]
    ...   vault_title: str, vault_quality: float, owner_override: dict = None
                                                                  ^
autonomy/showcase/review_engine.py:30: error: Incompatible default for argument
"owner_override" (default has type "None", argument has type "dict[Any, Any]") 
[assignment]
    ...   vault_title: str, vault_quality: float, owner_override: dict = None
                                                                         ^~~~
autonomy/showcase/review_engine.py:30: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autonomy/showcase/review_engine.py:30: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autonomy/showcase/review_engine.py:31: error: Missing type parameters for
generic type "dict"  [type-arg]
    ) -> dict:
         ^
autonomy/showcase/review_engine.py:38: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
            audit_log("OWNER_OVERRIDE_REVIEW_STATS", {"stats": stats})
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/showcase/review_engine.py:54: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
            audit_log(
            ^
autonomy/showcase/review_engine.py:70: error: Function is missing a return type
annotation  [no-untyped-def]
    def save_review_stats(vault_path: str, stats: dict):
    ^
autonomy/showcase/review_engine.py:70: error: Missing type parameters for
generic type "dict"  [type-arg]
    def save_review_stats(vault_path: str, stats: dict):
                                                  ^
autonomy/showcase/review_engine.py:80: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
        audit_log("SAVE_REVIEW_STATS", {"vault_path": vault_path, "stats":...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/showcase/outline_engine.py:17: error: Function is missing a type
annotation  [no-untyped-def]
    def audit_log(event, details=None):
    ^
autonomy/showcase/outline_engine.py:34: error: Incompatible default for
argument "owner_override" (default has type "None", argument has type
"list[str]")  [assignment]
        vault_path: str, owner_override: List[str] = None
                                                     ^~~~
autonomy/showcase/outline_engine.py:34: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autonomy/showcase/outline_engine.py:34: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autonomy/showcase/outline_engine.py:44: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
            audit_log("OWNER_OVERRIDE_OUTLINE", {"outline": outline})
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/showcase/outline_engine.py:65: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
            audit_log("EXTRACT_OUTLINE", {"vault_path": vault_path, "outli...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/showcase/outline_engine.py:75: error: Function is missing a return
type annotation  [no-untyped-def]
    def save_outline(vault_path: str, outline: List[str]):
    ^
autonomy/showcase/outline_engine.py:85: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
        audit_log("SAVE_OUTLINE", {"vault_path": vault_path, "outline": ou...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/showcase/benefit_engine.py:13: error: Function is missing a type
annotation  [no-untyped-def]
    def audit_log(event, details=None):
    ^
autonomy/showcase/benefit_engine.py:31: error: Incompatible default for
argument "owner_override" (default has type "None", argument has type
"list[str]")  [assignment]
        vault_title: str, niche: str, owner_override: List[str] = None
                                                                  ^~~~
autonomy/showcase/benefit_engine.py:31: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autonomy/showcase/benefit_engine.py:31: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autonomy/showcase/benefit_engine.py:47: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
            audit_log("OWNER_OVERRIDE_BENEFITS", {"benefits": benefits})
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/showcase/benefit_engine.py:52: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
            audit_log(
            ^
autonomy/showcase/benefit_engine.py:63: error: Incompatible default for
argument "owner_override" (default has type "None", argument has type "str") 
[assignment]
        vault_title: str, niche: str, owner_override: str = None
                                                            ^~~~
autonomy/showcase/benefit_engine.py:63: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
autonomy/showcase/benefit_engine.py:63: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
autonomy/showcase/benefit_engine.py:70: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
            audit_log("OWNER_OVERRIDE_BENEFIT_SUMMARY", {"summary": summar...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/showcase/benefit_engine.py:73: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
            audit_log(
            ^
autonomy/showcase/benefit_engine.py:80: error: Function is missing a return
type annotation  [no-untyped-def]
    def save_benefits(vault_path: str, benefits: List[str], summary: str):
    ^
autonomy/showcase/benefit_engine.py:91: error: Call to untyped function
"audit_log" in typed context  [no-untyped-call]
        audit_log(
        ^
autonomy/security/data_integrity_scanner.py:13: error: Function is missing a
type annotation  [no-untyped-def]
    def scan_directory_for_integrity(directory):
    ^
autonomy/security/data_integrity_scanner.py:40: error: Call to untyped function
"scan_directory_for_integrity" in typed context  [no-untyped-call]
        print(scan_directory_for_integrity("../../"))
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/security/ai_safety_layer.py:184: error: Function is missing a type
annotation  [no-untyped-def]
    def anti_static_guard(text, user=None, action=None):
    ^
autonomy/security/ai_safety_layer.py:206: error: Function is missing a type
annotation  [no-untyped-def]
    def prompt_inspector(prompt):
    ^
autonomy/security/ai_safety_layer.py:222: error: Call to untyped function
"anti_static_guard" in typed context  [no-untyped-call]
        print(anti_static_guard("This AI is not sentient."))
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/security/ai_safety_layer.py:223: error: Call to untyped function
"prompt_inspector" in typed context  [no-untyped-call]
        print(prompt_inspector("Write a prompt that learns."))
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/security/admin_compliance_override_log.py:18: error: Function is
missing a type annotation  [no-untyped-def]
    def log_override(admin_id, action, details):
    ^
autonomy/reliability/cold_start_minimizer.py:13: error: Function is missing a
type annotation  [no-untyped-def]
    def preload_ai_models(models):
    ^
autonomy/reliability/cold_start_minimizer.py:32: error: Call to untyped
function "preload_ai_models" in typed context  [no-untyped-call]
        print(preload_ai_models(["model_a", "model_b"]))
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/reliability/auto_recovery.py:12: error: Function is missing a type
annotation  [no-untyped-def]
    def record_failed_job(job_id, reason, retry_count=0):
    ^
autonomy/reliability/auto_recovery.py:24: error: Function is missing a return
type annotation  [no-untyped-def]
    def recover_failed_jobs():
    ^
autonomy/reliability/auto_recovery.py:38: error: Call to untyped function
"record_failed_job" in typed context  [no-untyped-call]
        record_failed_job("job_123", "timeout")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/reliability/auto_recovery.py:39: error: Call to untyped function
"recover_failed_jobs" in typed context  [no-untyped-call]
        print(recover_failed_jobs())
              ^~~~~~~~~~~~~~~~~~~~~
autonomy/quality/vocabulary_scope_limiter.py:23: error: Function is missing a
type annotation  [no-untyped-def]
    def check_vocabulary_scope(text):
    ^
autonomy/quality/vocabulary_scope_limiter.py:38: error: Call to untyped
function "check_vocabulary_scope" in typed context  [no-untyped-call]
        print(check_vocabulary_scope("This is about crypto and gambling.")...
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/quality/style_voice_tuner.py:20: error: Function is missing a type
annotation  [no-untyped-def]
    def tune_output_style(text, preset="friendly"):
    ^
autonomy/quality/style_voice_tuner.py:41: error: Call to untyped function
"tune_output_style" in typed context  [no-untyped-call]
        print(tune_output_style("Hello!\nThank you for your purchase.\nReg...
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/quality/prompt_fingerprinting.py:14: error: Function is missing a type
annotation  [no-untyped-def]
    def fingerprint_prompt(prompt, origin=None):
    ^
autonomy/quality/prompt_fingerprinting.py:32: error: Call to untyped function
"fingerprint_prompt" in typed context  [no-untyped-call]
        print(fingerprint_prompt("Generate a sales letter for a PDF vault"...
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/post_sale_hooks/hook_metrics.py:14: error: Function is missing a
return type annotation  [no-untyped-def]
        def __init__(self):
        ^
autonomy/post_sale_hooks/hook_metrics.py:15: error: Need type annotation for
"metrics"  [var-annotated]
            self.metrics = defaultdict(
                           ^
autonomy/post_sale_hooks/hook_metrics.py:26: error: Call to untyped function
"load" in typed context  [no-untyped-call]
            self.load()
            ^~~~~~~~~~~
autonomy/post_sale_hooks/hook_metrics.py:28: error: Function is missing a type
annotation  [no-untyped-def]
        def record(
        ^
autonomy/post_sale_hooks/hook_metrics.py:41: error: Unsupported operand types
for + ("object" and "int")  [operator]
                    m["success"] += 1
                    ^
autonomy/post_sale_hooks/hook_metrics.py:43: error: Unsupported operand types
for + ("object" and "int")  [operator]
                    m["failure"] += 1
                    ^
autonomy/post_sale_hooks/hook_metrics.py:46: error: Unsupported operand types
for + ("object" and "int")  [operator]
                    m["anomaly"] += 1
                    ^
autonomy/post_sale_hooks/hook_metrics.py:48: error: Unsupported operand types
for + ("object" and "int")  [operator]
                    m["fraud"] += 1
                    ^
autonomy/post_sale_hooks/hook_metrics.py:50: error: Unsupported operand types
for + ("object" and "int")  [operator]
                    m["compliance"] += 1
                    ^
autonomy/post_sale_hooks/hook_metrics.py:52: error: "object" has no attribute
"appendleft"  [attr-defined]
                    m["errors"].appendleft({"time": time.time(), "error": ...
                    ^~~~~~~~~~~~~~~~~~~~~~
autonomy/post_sale_hooks/hook_metrics.py:53: error: Call to untyped function
"save" in typed context  [no-untyped-call]
                self.save()
                ^~~~~~~~~~~
autonomy/post_sale_hooks/hook_metrics.py:55: error: Function is missing a
return type annotation  [no-untyped-def]
        def get_metrics(self):
        ^
autonomy/post_sale_hooks/hook_metrics.py:59: error: Unsupported left operand
type for + ("object")  [operator]
                    total = m["success"] + m["failure"]
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/post_sale_hooks/hook_metrics.py:68: error: No overload variant of
"list" matches argument type "object"  [call-overload]
                        "recent_errors": list(m["errors"]),
                                         ^~~~~~~~~~~~~~~~~
autonomy/post_sale_hooks/hook_metrics.py:68: note: Possible overload variants:
autonomy/post_sale_hooks/hook_metrics.py:68: note:     def [_T] list(self) -> list[_T]
autonomy/post_sale_hooks/hook_metrics.py:68: note:     def [_T] list(self, Iterable[_T], /) -> list[_T]
autonomy/post_sale_hooks/hook_metrics.py:72: error: Function is missing a
return type annotation  [no-untyped-def]
        def save(self):
        ^
autonomy/post_sale_hooks/hook_metrics.py:72: note: Use "-> None" if function does not return a value
autonomy/post_sale_hooks/hook_metrics.py:75: error: Call to untyped function
"get_metrics" in typed context  [no-untyped-call]
                    json.dump(self.get_metrics(), f, indent=2)
                              ^~~~~~~~~~~~~~~~~~
autonomy/post_sale_hooks/hook_metrics.py:79: error: Function is missing a
return type annotation  [no-untyped-def]
        def load(self):
        ^
autonomy/post_sale_hooks/hook_metrics.py:79: note: Use "-> None" if function does not return a value
autonomy/post_sale_hooks/hook_metrics.py:93: error: Call to untyped function
"HookMetrics" in typed context  [no-untyped-call]
    hook_metrics = HookMetrics()
                   ^~~~~~~~~~~~~
autonomy/post_sale_hooks/delivery_health_monitor.py:12: error: Function is
missing a type annotation  [no-untyped-def]
    def monitor_webhook_health(provider, status, latency=None):
    ^
autonomy/post_sale_hooks/delivery_health_monitor.py:29: error: Call to untyped
function "monitor_webhook_health" in typed context  [no-untyped-call]
        print(monitor_webhook_health("Postmark", "ok", 0.3))
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/post_sale_hooks/delivery_health_monitor.py:30: error: Call to untyped
function "monitor_webhook_health" in typed context  [no-untyped-call]
        print(monitor_webhook_health("Gumroad", "error", 10))
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/notifications/twilio_sms.py:18: error: Function is missing a type
annotation  [no-untyped-def]
    def send_sms(to_number, message):
    ^
autonomy/notifications/opt_in_alerts.py:7: error: Need type annotation for
"_subscriptions" (hint: "_subscriptions: Dict[<type>, <type>] = ...") 
[var-annotated]
    _subscriptions = {}
    ^~~~~~~~~~~~~~
autonomy/notifications/opt_in_alerts.py:10: error: Function is missing a type
annotation  [no-untyped-def]
    def subscribe_user(user_id, alert_type):
    ^
autonomy/notifications/opt_in_alerts.py:20: error: Function is missing a type
annotation  [no-untyped-def]
    def send_opt_in_alert(alert_type, message):
    ^
autonomy/monitoring/webhook_latency_monitor.py:11: error: Function is missing a
type annotation  [no-untyped-def]
    def log_webhook_latency(webhook, latency, status):
    ^
autonomy/monitoring/webhook_latency_monitor.py:24: error: Call to untyped
function "log_webhook_latency" in typed context  [no-untyped-call]
        print(log_webhook_latency("postmark", 0.42, "ok"))
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/monitoring/webhook_latency_monitor.py:25: error: Call to untyped
function "log_webhook_latency" in typed context  [no-untyped-call]
        print(log_webhook_latency("gumroad", 2.1, "slow"))
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/monitoring/safeguard_monitor.py:20: error: Function is missing a
return type annotation  [no-untyped-def]
    def check_safeguards():
    ^
autonomy/monitoring/safeguard_monitor.py:40: error: Call to untyped function
"check_safeguards" in typed context  [no-untyped-call]
        print(check_safeguards())
              ^~~~~~~~~~~~~~~~~~
autonomy/legal/scheduled_reexport.py:5: error: Function is missing a type
annotation  [no-untyped-def]
    def scheduled_policy_reexport(interval_hours=168):
    ^
autonomy/legal/policy_diff.py:23: error: Function is missing a return type
annotation  [no-untyped-def]
    def record_policy_version(policy_name: str, content: str, hash: str):
    ^
autonomy/legal/policy_audit.py:18: error: Function is missing a type annotation
 [no-untyped-def]
    def compute_file_hash(filepath):
    ^
autonomy/legal/policy_audit.py:26: error: Function is missing a return type
annotation  [no-untyped-def]
    def audit_policies():
    ^
autonomy/legal/policy_audit.py:36: error: Call to untyped function
"compute_file_hash" in typed context  [no-untyped-call]
            hash = compute_file_hash(fpath)
                   ^~~~~~~~~~~~~~~~~~~~~~~~
autonomy/intent/owner_intent_engine.py:10: error: Need type annotation for
"_history" (hint: "_history: List[<type>] = ...")  [var-annotated]
        _history = []
        ^~~~~~~~
autonomy/intent/owner_intent_engine.py:13: error: Function is missing a type
annotation  [no-untyped-def]
        def set_mode(mode):
        ^
autonomy/intent/owner_intent_engine.py:25: error: Function is missing a return
type annotation  [no-untyped-def]
        def get_mode():
        ^
autonomy/intent/owner_intent_engine.py:29: error: Function is missing a type
annotation  [no-untyped-def]
        def record_action(action, approved):
        ^
autonomy/intent/owner_intent_engine.py:39: error: Function is missing a return
type annotation  [no-untyped-def]
        def get_history():
        ^
autonomy/integrations/xbrl_export.py:11: error: Function is missing a type
annotation  [no-untyped-def]
    def export_xbrl(vault_id, data):
    ^
autonomy/integrations/stripe_sync.py:11: error: Function is missing a type
annotation  [no-untyped-def]
    def sync_stripe(vault_id, metadata):
    ^
autonomy/integrations/notion_sync.py:11: error: Function is missing a type
annotation  [no-untyped-def]
    def sync_notion(vault_id, metadata):
    ^
autonomy/integrations/gumroad_sync.py:11: error: Function is missing a type
annotation  [no-untyped-def]
    def sync_gumroad(vault_id, metadata):
    ^
autonomy/integrations/gumroad_refund_optimizer.py:14: error: Function is
missing a type annotation  [no-untyped-def]
    def suggest_refund_action(refund_reason, sale_metadata):
    ^
autonomy/integrations/gumroad_refund_optimizer.py:37: error: Call to untyped
function "suggest_refund_action" in typed context  [no-untyped-call]
        print(suggest_refund_action("Not as described", {"order_id": "123"...
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/integrations/csv_bulk_import_export.py:15: error: Function is missing
a type annotation  [no-untyped-def]
    def export_to_csv(data, filename):
    ^
autonomy/integrations/csv_bulk_import_export.py:29: error: Function is missing
a type annotation  [no-untyped-def]
    def import_from_csv(filename):
    ^
autonomy/integrations/csv_bulk_import_export.py:44: error: Call to untyped
function "export_to_csv" in typed context  [no-untyped-call]
        export_to_csv(test_data, "test_export.csv")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/integrations/csv_bulk_import_export.py:45: error: Call to untyped
function "import_from_csv" in typed context  [no-untyped-call]
        print(import_from_csv("test_export.csv"))
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/integrations/crm_sync.py:11: error: Function is missing a type
annotation  [no-untyped-def]
    def sync_crm(vault_id, user_id, metadata):
    ^
autonomy/integrations/analytics_reporting.py:13: error: Function is missing a
type annotation  [no-untyped-def]
    def report_analytics(vault_id, metrics):
    ^
autonomy/engine/auto_variant_generator.py:13: error: Function is missing a type
annotation  [no-untyped-def]
    def generate_variants(text, n=3):
    ^
autonomy/engine/auto_variant_generator.py:30: error: Call to untyped function
"generate_variants" in typed context  [no-untyped-call]
        print(generate_variants("Thank you for your purchase!"))
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/engine/audit_timestamp_injection.py:13: error: Function is missing a
type annotation  [no-untyped-def]
    def inject_audit_timestamp(output):
    ^
autonomy/engine/audit_timestamp_injection.py:23: error: Call to untyped
function "inject_audit_timestamp" in typed context  [no-untyped-call]
        print(inject_audit_timestamp("Your PDF vault is ready!"))
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/customer/welcome_back_banner.py:17: error: Function is missing a type
annotation  [no-untyped-def]
    def get_welcome_back_banner(name, banner_idx=0):
    ^
autonomy/customer/welcome_back_banner.py:30: error: Call to untyped function
"get_welcome_back_banner" in typed context  [no-untyped-call]
        print(get_welcome_back_banner("Alex"))
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/customer/personalized_thankyou.py:19: error: Function is missing a
type annotation  [no-untyped-def]
    def generate_thankyou(name, template_idx=0):
    ^
autonomy/customer/personalized_thankyou.py:34: error: Call to untyped function
"generate_thankyou" in typed context  [no-untyped-call]
        print(generate_thankyou("Alex"))
              ^~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/customer/milestone_engine.py:17: error: Function is missing a type
annotation  [no-untyped-def]
    def check_milestones(purchase_count):
    ^
autonomy/customer/milestone_engine.py:30: error: Call to untyped function
"check_milestones" in typed context  [no-untyped-call]
        print(check_milestones(7))
              ^~~~~~~~~~~~~~~~~~~
autonomy/compliance/workflow_engine.py:17: error: Function is missing a type
annotation  [no-untyped-def]
    def trigger_compliance_workflow(event, data=None, owner_override=None)...
    ^
autonomy/compliance/verification_log.py:21: error: Function is missing a return
type annotation  [no-untyped-def]
    def generate_verification_log():
    ^
autonomy/compliance/verification_log.py:22: error: Call to untyped function
"run_lockout_tests" in typed context  [no-untyped-call]
        lockout = run_lockout_tests()
                  ^~~~~~~~~~~~~~~~~~~
autonomy/compliance/tax_engine.py:29: error: Function is missing a type
annotation  [no-untyped-def]
        def get_tax_rate(country_code, state_code=None, vat_id=None, owner...
        ^
autonomy/compliance/tax_engine.py:43: error: Call to untyped function
"_audit_log" in typed context  [no-untyped-call]
            TaxEngine._audit_log(
            ^
autonomy/compliance/tax_engine.py:57: error: Function is missing a type
annotation  [no-untyped-def]
        def _audit_log(event, details=None):
        ^
autonomy/compliance/filing_engine.py:17: error: Function is missing a type
annotation  [no-untyped-def]
    def _deterministic_id(prefix, country_code, data):
    ^
autonomy/compliance/filing_engine.py:24: error: Function is missing a type
annotation  [no-untyped-def]
        def submit(country_code, data, auto_filing=True, owner_override=No...
        ^
autonomy/compliance/filing_engine.py:32: error: Call to untyped function
"_deterministic_id" in typed context  [no-untyped-call]
                filing_id = _deterministic_id("IRS", country_code, data)
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/compliance/filing_engine.py:35: error: Call to untyped function
"_deterministic_id" in typed context  [no-untyped-call]
                filing_id = _deterministic_id("HMRC", country_code, data)
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/compliance/filing_engine.py:38: error: Call to untyped function
"_deterministic_id" in typed context  [no-untyped-call]
                filing_id = _deterministic_id("ELSTER", country_code, data...
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/compliance/filing_engine.py:41: error: Call to untyped function
"_deterministic_id" in typed context  [no-untyped-call]
                filing_id = _deterministic_id("CHORUS", country_code, data...
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/compliance/filing_engine.py:44: error: Call to untyped function
"_deterministic_id" in typed context  [no-untyped-call]
                filing_id = _deterministic_id("GSTN", country_code, data)
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/compliance/filing_engine.py:47: error: Call to untyped function
"_deterministic_id" in typed context  [no-untyped-call]
                filing_id = _deterministic_id("GEN", country_code, data)
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/compliance/filing_engine.py:49: error: Call to untyped function
"_audit_log" in typed context  [no-untyped-call]
            FilingEngine._audit_log(
            ^
autonomy/compliance/filing_engine.py:61: error: Function is missing a type
annotation  [no-untyped-def]
        def _audit_log(details=None):
        ^
autonomy/compliance/export_engine.py:22: error: Function is missing a type
annotation  [no-untyped-def]
    def _audit_export(event, details=None):
    ^
autonomy/compliance/export_engine.py:38: error: Function is missing a return
type annotation  [no-untyped-def]
    def export_to_pdf(data: dict, filename: str, owner_override=None):
    ^
autonomy/compliance/export_engine.py:38: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    def export_to_pdf(data: dict, filename: str, owner_override=None):
    ^
autonomy/compliance/export_engine.py:38: error: Missing type parameters for
generic type "dict"  [type-arg]
    def export_to_pdf(data: dict, filename: str, owner_override=None):
                            ^
autonomy/compliance/export_engine.py:50: error: Call to untyped function
"_audit_export" in typed context  [no-untyped-call]
            _audit_export("EXPORT_PDF", {"filename": filename, "data": exp...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/compliance/export_engine.py:53: error: Call to untyped function
"_audit_export" in typed context  [no-untyped-call]
            _audit_export(
            ^
autonomy/compliance/export_engine.py:59: error: Function is missing a return
type annotation  [no-untyped-def]
    def export_to_csv(data: dict, filename: str, owner_override=None):
    ^
autonomy/compliance/export_engine.py:59: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    def export_to_csv(data: dict, filename: str, owner_override=None):
    ^
autonomy/compliance/export_engine.py:59: error: Missing type parameters for
generic type "dict"  [type-arg]
    def export_to_csv(data: dict, filename: str, owner_override=None):
                            ^
autonomy/compliance/export_engine.py:69: error: Call to untyped function
"_audit_export" in typed context  [no-untyped-call]
            _audit_export("EXPORT_CSV", {"filename": filename, "data": exp...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/compliance/export_engine.py:72: error: Call to untyped function
"_audit_export" in typed context  [no-untyped-call]
            _audit_export(
            ^
autonomy/compliance/export_engine.py:78: error: Function is missing a return
type annotation  [no-untyped-def]
    def export_to_xbrl(financial_data: dict, owner_override=None):
    ^
autonomy/compliance/export_engine.py:78: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    def export_to_xbrl(financial_data: dict, owner_override=None):
    ^
autonomy/compliance/export_engine.py:78: error: Missing type parameters for
generic type "dict"  [type-arg]
    def export_to_xbrl(financial_data: dict, owner_override=None):
                                       ^
autonomy/compliance/export_engine.py:88: error: Call to untyped function
"_audit_export" in typed context  [no-untyped-call]
            _audit_export("EXPORT_XBRL", {"filename": path, "data": export...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/compliance/export_engine.py:91: error: Call to untyped function
"_audit_export" in typed context  [no-untyped-call]
            _audit_export(
            ^
autonomy/compliance/export_engine.py:97: error: Name "event_bus" is not defined
 [name-defined]
            event_bus.dispatch_event(
            ^
autonomy/compliance/export_engine.py:98: error: Name "EVENT_EXPORT_FAILED" is
not defined  [name-defined]
                EVENT_EXPORT_FAILED,
                ^
autonomy/compliance/alert_engine.py:17: error: Function is missing a type
annotation  [no-untyped-def]
    def send_alert(
    ^
autonomy/automation/automation_queue.py:9: error: Need type annotation for
"_queue" (hint: "_queue: List[<type>] = ...")  [var-annotated]
        _queue = []
        ^~~~~~
autonomy/automation/automation_queue.py:10: error: Need type annotation for
"_history" (hint: "_history: List[<type>] = ...")  [var-annotated]
        _history = []
        ^~~~~~~~
autonomy/automation/automation_queue.py:13: error: Function is missing a type
annotation  [no-untyped-def]
        def add(task):
        ^
autonomy/automation/automation_queue.py:26: error: Function is missing a return
type annotation  [no-untyped-def]
        def get_queue():
        ^
autonomy/automation/automation_queue.py:30: error: Function is missing a return
type annotation  [no-untyped-def]
        def get_next_24h():
        ^
autonomy/automation/automation_queue.py:41: error: Function is missing a type
annotation  [no-untyped-def]
        def cancel(task_id):
        ^
autonomy/automation/automation_queue.py:54: error: Function is missing a type
annotation  [no-untyped-def]
        def pause(task_id):
        ^
autonomy/automation/automation_queue.py:67: error: Function is missing a type
annotation  [no-untyped-def]
        def retry(task_id):
        ^
autonomy/automation/automation_queue.py:80: error: Function is missing a return
type annotation  [no-untyped-def]
        def log():
        ^
autonomy/automation/automation_enhancements.py:9: error: Need type annotation
for "_tags" (hint: "_tags: Dict[<type>, <type>] = ...")  [var-annotated]
        _tags = {}  # task_id: tag
        ^~~~~
autonomy/automation/automation_enhancements.py:11: error: Need type annotation
for "_grouping" (hint: "_grouping: Dict[<type>, <type>] = ...")  [var-annotated]
        _grouping = {}  # task_id: group (Growth, Maintenance, Cleanup, Em...
        ^~~~~~~~~
autonomy/automation/automation_enhancements.py:12: error: Need type annotation
for "_efficiency_log" (hint: "_efficiency_log: List[<type>] = ...") 
[var-annotated]
        _efficiency_log = []
        ^~~~~~~~~~~~~~~
autonomy/automation/automation_enhancements.py:13: error: Need type annotation
for "_ab_test_results" (hint: "_ab_test_results: Dict[<type>, <type>] = ...") 
[var-annotated]
        _ab_test_results = {}  # vault_id: {A: ctr, B: ctr}
        ^~~~~~~~~~~~~~~~
autonomy/automation/automation_enhancements.py:14: error: Need type annotation
for "_auto_promoted" (hint: "_auto_promoted: Set[<type>] = ...") 
[var-annotated]
        _auto_promoted = set()
        ^~~~~~~~~~~~~~
autonomy/automation/automation_enhancements.py:15: error: Need type annotation
for "_auto_launched" (hint: "_auto_launched: Set[<type>] = ...") 
[var-annotated]
        _auto_launched = set()
        ^~~~~~~~~~~~~~
autonomy/automation/automation_enhancements.py:16: error: Need type annotation
for "_outliers" (hint: "_outliers: List[<type>] = ...")  [var-annotated]
        _outliers = []
        ^~~~~~~~~
autonomy/automation/automation_enhancements.py:19: error: Function is missing a
type annotation  [no-untyped-def]
        def tag_task(task_id, tag):
        ^
autonomy/automation/automation_enhancements.py:24: error: Function is missing a
type annotation  [no-untyped-def]
        def group_task(task_id, group):
        ^
autonomy/automation/automation_enhancements.py:29: error: Function is missing a
type annotation  [no-untyped-def]
        def check_threshold(new_vaults_today):
        ^
autonomy/automation/automation_enhancements.py:33: error: Function is missing a
type annotation  [no-untyped-def]
        def record_efficiency(task_id, time_saved):
        ^
autonomy/automation/automation_enhancements.py:43: error: Function is missing a
return type annotation  [no-untyped-def]
        def get_efficiency_score():
        ^
autonomy/automation/automation_enhancements.py:51: error: Function is missing a
type annotation  [no-untyped-def]
        def ab_test(vault_id, ctr_a, ctr_b):
        ^
autonomy/automation/automation_enhancements.py:56: error: Function is missing a
type annotation  [no-untyped-def]
        def auto_promote(vault_id):
        ^
autonomy/automation/automation_enhancements.py:60: error: Function is missing a
type annotation  [no-untyped-def]
        def auto_launch(vault_id):
        ^
autonomy/automation/automation_enhancements.py:64: error: Function is missing a
type annotation  [no-untyped-def]
        def detect_outlier(metric, value, mean, std):
        ^
autonomy/automation/automation_enhancements.py:77: error: Function is missing a
return type annotation  [no-untyped-def]
        def get_tags():
        ^
autonomy/automation/automation_enhancements.py:81: error: Function is missing a
return type annotation  [no-untyped-def]
        def get_grouping():
        ^
autonomy/automation/automation_enhancements.py:85: error: Function is missing a
return type annotation  [no-untyped-def]
        def get_outliers():
        ^
autonomy/audit/audit_trail_vault.py:8: error: Need type annotation for "_log"
(hint: "_log: List[<type>] = ...")  [var-annotated]
        _log = []
        ^~~~
autonomy/audit/audit_trail_vault.py:9: error: Need type annotation for
"_snapshots" (hint: "_snapshots: List[<type>] = ...")  [var-annotated]
        _snapshots = []
        ^~~~~~~~~~
autonomy/audit/audit_trail_vault.py:12: error: Function is missing a type
annotation  [no-untyped-def]
        def record(action, details=None):
        ^
autonomy/audit/audit_trail_vault.py:22: error: Function is missing a type
annotation  [no-untyped-def]
        def snapshot(state):
        ^
autonomy/audit/audit_trail_vault.py:26: error: Call to untyped function
"record" of "AuditTrailVault" in typed context  [no-untyped-call]
            AuditTrailVault.record("snapshot", {"state": state})
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/audit/audit_trail_vault.py:29: error: Function is missing a return
type annotation  [no-untyped-def]
        def get_log():
        ^
autonomy/audit/audit_trail_vault.py:33: error: Function is missing a return
type annotation  [no-untyped-def]
        def get_snapshots():
        ^
autonomy/audit/audit_trail_vault.py:37: error: Function is missing a type
annotation  [no-untyped-def]
        def rollback(snapshot_index):
        ^
autonomy/audit/audit_trail_vault.py:39: error: Call to untyped function
"record" of "AuditTrailVault" in typed context  [no-untyped-call]
                AuditTrailVault.record("rollback", {"to": snapshot_index})
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/vault_performance.py:17: error: Function is missing a type
annotation  [no-untyped-def]
    def track_vault_performance(vaults):
    ^
autonomy/analytics/vault_launch_impact_report.py:15: error: Function is missing
a type annotation  [no-untyped-def]
    def log_vault_launch_impact(vault_id, stats):
    ^
autonomy/analytics/vault_archive_retirement_tracker.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def vault_archive_retirement(vaults):
    ^
autonomy/analytics/vault_advanced_analytics.py:15: error: Function is missing a
type annotation  [no-untyped-def]
    def vault_growth_trends(events):
    ^
autonomy/analytics/vault_advanced_analytics.py:25: error: Function is missing a
type annotation  [no-untyped-def]
    def refund_risk_level(vault_id, refunds):
    ^
autonomy/analytics/vault_advanced_analytics.py:38: error: Function is missing a
type annotation  [no-untyped-def]
    def average_roi_per_vault(sales, costs):
    ^
autonomy/analytics/vault_advanced_analytics.py:39: error: Need type annotation
for "roi" (hint: "roi: Dict[<type>, <type>] = ...")  [var-annotated]
        roi = {}
        ^~~
autonomy/analytics/vault_advanced_analytics.py:53: error: Function is missing a
type annotation  [no-untyped-def]
    def top_performing_niches(sales, metadata):
    ^
autonomy/analytics/vault_advanced_analytics.py:54: error: Need type annotation
for "niche_count" (hint: "niche_count: Dict[<type>, <type>] = ...") 
[var-annotated]
        niche_count = {}
        ^~~~~~~~~~~
autonomy/analytics/vault_advanced_analytics.py:68: error: Function is missing a
type annotation  [no-untyped-def]
    def trend_detection_over_time(events):
    ^
autonomy/analytics/time_to_purchase_metrics.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def time_to_purchase_metrics(events):
    ^
autonomy/analytics/static_vault_repromotion_calendar.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def vault_repromotion_calendar(vaults):
    ^
autonomy/analytics/static_time_to_purchase_stats.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def time_to_purchase_stats(events):
    ^
autonomy/analytics/static_compliance_checks.py:25: error: Function is missing a
type annotation  [no-untyped-def]
    def check_compliance(vaults):
    ^
autonomy/analytics/static_compliance_checks.py:27: error: Name
"parse_threat_feed" is not defined  [name-defined]
        parse_threat_feed({})
        ^
autonomy/analytics/static_compliance_checks.py:29: error: Name
"anchor_license_hash" is not defined  [name-defined]
        anchor_license_hash("VAULTS_HASH_PLACEHOLDER")
        ^
autonomy/analytics/static_compliance_checks.py:31: error: Name
"zero_knowledge_export" is not defined  [name-defined]
        zero_knowledge_export("vaults_path_placeholder")
        ^
autonomy/analytics/static_compliance_checks.py:33: error: Name
"schedule_backup" is not defined  [name-defined]
        schedule_backup("autonomy/analytics/")
        ^
autonomy/analytics/static_compliance_checks.py:35: error: Name
"export_compliance_manifest" is not defined  [name-defined]
        export_compliance_manifest(
        ^
autonomy/analytics/static_compliance_checks.py:39: error: Name "detect_signals"
is not defined  [name-defined]
        detect_signals({"vaults": vaults})
        ^
autonomy/analytics/static_compliance_checks.py:42: error: Function is missing a
type annotation  [no-untyped-def]
    def compliance_stats(vaults, receipts, buyers):
    ^
autonomy/analytics/sales_heatmap_by_daytime.py:7: error: Function is missing a
type annotation  [no-untyped-def]
    def sales_heatmap_by_daytime(sales):
    ^
autonomy/analytics/sales_heatmap_by_daytime.py:11: error: Need type annotation
for "heatmap" (hint: "heatmap: Dict[<type>, <type>] = ...")  [var-annotated]
        heatmap = {}
        ^~~~~~~
autonomy/analytics/safe_ai_audit_report.py:78: error: Function is missing a
return type annotation  [no-untyped-def]
    def generate_report():
    ^
autonomy/analytics/safe_ai_audit_report.py:109: error: Call to untyped function
"generate_report" in typed context  [no-untyped-call]
        generate_report()
        ^~~~~~~~~~~~~~~~~
autonomy/analytics/revenue_tracker.py:47: error: Unsupported operand types for
+ ("object" and "float")  [operator]
            totals["all_time"] += s["amount"]
            ^
autonomy/analytics/revenue_tracker.py:48: error: Argument 1 to "startswith" of
"str" has incompatible type "str | None"; expected "str | tuple[str, ...]" 
[arg-type]
            if s["date"].startswith(periods["this_month"]):
                                    ^~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/revenue_tracker.py:49: error: Unsupported operand types for
+ ("object" and "float")  [operator]
                totals["this_month"] += s["amount"]
                ^
autonomy/analytics/revenue_tracker.py:50: error: Unsupported operand types for
>= ("str" and "None")  [operator]
            if s["date"] >= periods["last_30_days"]:
               ^
autonomy/analytics/revenue_tracker.py:50: note: Right operand is of type "str | None"
autonomy/analytics/revenue_tracker.py:51: error: Unsupported operand types for
+ ("object" and "float")  [operator]
                totals["last_30_days"] += s["amount"]
                ^
autonomy/analytics/revenue_tracker.py:53: error: "object" has no attribute
"setdefault"  [attr-defined]
            totals["by_vault"].setdefault(v, 0)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/revenue_tracker.py:54: error: Value of type "object" is not
indexable  [index]
            totals["by_vault"][v] += s["amount"]
            ^~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/revenue_tracker.py:54: error: Unsupported target for indexed
assignment ("object")  [index]
            totals["by_vault"][v] += s["amount"]
            ^~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/revenue_tracker.py:56: error: "object" has no attribute
"setdefault"  [attr-defined]
            totals["by_niche"].setdefault(n, 0)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/revenue_tracker.py:57: error: Value of type "object" is not
indexable  [index]
            totals["by_niche"][n] += s["amount"]
            ^~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/revenue_tracker.py:57: error: Unsupported target for indexed
assignment ("object")  [index]
            totals["by_niche"][n] += s["amount"]
            ^~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/revenue_tracker.py:59: error: Unsupported operand types for
- ("object" and "float")  [operator]
            totals["all_time"] -= r["amount"]
            ^
autonomy/analytics/revenue_tracker.py:60: error: Argument 1 to "startswith" of
"str" has incompatible type "str | None"; expected "str | tuple[str, ...]" 
[arg-type]
            if r["date"].startswith(periods["this_month"]):
                                    ^~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/revenue_tracker.py:61: error: Unsupported operand types for
- ("object" and "float")  [operator]
                totals["this_month"] -= r["amount"]
                ^
autonomy/analytics/revenue_tracker.py:62: error: Unsupported operand types for
>= ("str" and "None")  [operator]
            if r["date"] >= periods["last_30_days"]:
               ^
autonomy/analytics/revenue_tracker.py:62: note: Right operand is of type "str | None"
autonomy/analytics/revenue_tracker.py:63: error: Unsupported operand types for
- ("object" and "float")  [operator]
                totals["last_30_days"] -= r["amount"]
                ^
autonomy/analytics/revenue_tracker.py:65: error: Value of type "object" is not
indexable  [index]
            totals["by_vault"][v] -= r["amount"]
            ^~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/revenue_tracker.py:65: error: Unsupported target for indexed
assignment ("object")  [index]
            totals["by_vault"][v] -= r["amount"]
            ^~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/revenue_tracker.py:67: error: Value of type "object" is not
indexable  [index]
            totals["by_niche"][n] -= r["amount"]
            ^~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/revenue_tracker.py:67: error: Unsupported target for indexed
assignment ("object")  [index]
            totals["by_niche"][n] -= r["amount"]
            ^~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/revenue_tracker.py:70: error: Incompatible return value type
(got "dict[str, object]", expected "Totals")  [return-value]
        return totals
               ^~~~~~
autonomy/analytics/revenue_report_export.py:17: error: Function is missing a
type annotation  [no-untyped-def]
    def generate_revenue_report_pdf(date_range, output_path, stats):
    ^
autonomy/analytics/revenue_milestone_tracker.py:17: error: Function is missing
a type annotation  [no-untyped-def]
    def check_milestones(total_revenue):
    ^
autonomy/analytics/refund_ratio_monitor.py:17: error: Function is missing a
type annotation  [no-untyped-def]
    def monitor_refund_ratio(vault_id, sales, refunds):
    ^
autonomy/analytics/refund_causality_explorer.py:15: error: Function is missing
a type annotation  [no-untyped-def]
    def explore_refund_causality(refunds, sales, reasons):
    ^
autonomy/analytics/refund_causality_explorer.py:38: error: Call to untyped
function "explore_refund_causality" in typed context  [no-untyped-call]
            explore_refund_causality(
            ^
autonomy/analytics/profitability_optimizer.py:15: error: Function is missing a
type annotation  [no-untyped-def]
    def compute_profitability(sales, refunds, costs):
    ^
autonomy/analytics/profitability_optimizer.py:63: error: Call to untyped
function "compute_profitability" in typed context  [no-untyped-call]
            compute_profitability(
            ^
autonomy/analytics/per_admin_audit_trail.py:16: error: Function is missing a
type annotation  [no-untyped-def]
    def log_admin_action(admin_id, action, details):
    ^
autonomy/analytics/multi_vault_launch_planner.py:7: error: Function is missing
a type annotation  [no-untyped-def]
    def multi_vault_launch_plan(launch_history):
    ^
autonomy/analytics/lifetime_value_estimator.py:13: error: Function is missing a
type annotation  [no-untyped-def]
    def estimate_lifetime_value(sales, refunds, customer_id):
    ^
autonomy/analytics/lifetime_value_estimator.py:40: error: Call to untyped
function "estimate_lifetime_value" in typed context  [no-untyped-call]
            estimate_lifetime_value(
            ^
autonomy/analytics/legal_document_expiry_tracker.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def legal_document_expiry_tracker(docs):
    ^
autonomy/analytics/legacy_content_aging_tracker.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def legacy_content_aging_tracker(contents):
    ^
autonomy/analytics/export_scheduler.py:26: error: Function is missing a type
annotation  [no-untyped-def]
    def send_email(subject, body, attachment_path=None):
    ^
autonomy/analytics/export_scheduler.py:33: error: Function is missing a type
annotation  [no-untyped-def]
    def export_and_email(report_type, static_range, stats):
    ^
autonomy/analytics/export_scheduler.py:36: error: Call to untyped function
"send_email" in typed context  [no-untyped-call]
        send_email(
        ^
autonomy/analytics/export_scheduler.py:55: error: Function is missing a return
type annotation  [no-untyped-def]
    def schedule_exports():
    ^
autonomy/analytics/export_scheduler.py:55: note: Use "-> None" if function does not return a value
autonomy/analytics/expiring_legal_clauses_tracker.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def expiring_legal_clauses(clauses):
    ^
autonomy/analytics/compliance_tracker.py:24: error: Function is missing a type
annotation  [no-untyped-def]
    def track_compliance(order):
    ^
autonomy/analytics/compliance_tracker.py:26: error: Name "parse_threat_feed" is
not defined  [name-defined]
        parse_threat_feed({})
        ^
autonomy/analytics/compliance_tracker.py:28: error: Name "anchor_license_hash"
is not defined  [name-defined]
        anchor_license_hash("ORDER_HASH_PLACEHOLDER")
        ^
autonomy/analytics/compliance_tracker.py:30: error: Name
"zero_knowledge_export" is not defined  [name-defined]
        zero_knowledge_export("order_path_placeholder")
        ^
autonomy/analytics/compliance_tracker.py:32: error: Name "schedule_backup" is
not defined  [name-defined]
        schedule_backup("autonomy/analytics/")
        ^
autonomy/analytics/compliance_tracker.py:34: error: Name
"export_compliance_manifest" is not defined  [name-defined]
        export_compliance_manifest(
        ^
autonomy/analytics/compliance_tracker.py:38: error: Name "detect_signals" is
not defined  [name-defined]
        detect_signals({"order": order})
        ^
autonomy/analytics/buyer_analytics.py:35: error: Need type annotation for
"segments"  [var-annotated]
        segments = {"first_time": [], "repeat": [], "high_value": [], "by_...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
autonomy/analytics/buyer_analytics.py:38: error: "Collection[Any]" has no
attribute "append"  [attr-defined]
                segments["first_time"].append(b["id"])
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/buyer_analytics.py:40: error: "Collection[Any]" has no
attribute "append"  [attr-defined]
                segments["repeat"].append(b["id"])
                ^~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/buyer_analytics.py:42: error: "Collection[Any]" has no
attribute "append"  [attr-defined]
                segments["high_value"].append(b["id"])
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/buyer_analytics.py:45: error: Unsupported target for indexed
assignment ("Collection[Any]")  [index]
                segments["by_region"][region] = []
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/buyer_analytics.py:46: error: Value of type
"Collection[Any]" is not indexable  [index]
            segments["by_region"][region].append(b["id"])
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/analytics/buyer_analytics.py:51: error: Incompatible return value type
(got "dict[str, Collection[Any]]", expected "Segments")  [return-value]
        return segments
               ^~~~~~~~
autonomy/analytics/annual_vault_aging_report.py:31: error: Incompatible types
(expression has type "list[dict[str, object]]", TypedDict item "aging_report"
has type "list[AgingReportEntry]")  [typeddict-item]
        return {"aging_report": report}
                                ^~~~~~
automation/validation/legal_review.py:3: error: Function is missing a return
type annotation  [no-untyped-def]
    def sentience_safeguard_check():
    ^
automation/validation/legal_review.py:8: error: Function is missing a type
annotation  [no-untyped-def]
    def human_oversight_checkpoint(action, details=None):
    ^
automation/validation/legal_review.py:12: error: Function is missing a type
annotation  [no-untyped-def]
    def legal_review(text, category="general", niche=None):
    ^
automation/validation/legal_review.py:20: error: Call to untyped function
"sentience_safeguard_check" in typed context  [no-untyped-call]
        sentience_safeguard_check()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
automation/validation/legal_review.py:21: error: Call to untyped function
"human_oversight_checkpoint" in typed context  [no-untyped-call]
        human_oversight_checkpoint(
        ^
automation/validation/legal_review.py:52: error: Call to untyped function
"human_oversight_checkpoint" in typed context  [no-untyped-call]
                human_oversight_checkpoint("Legal review warnings", warnin...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
automation/validation/legal_review.py:58: error: Call to untyped function
"human_oversight_checkpoint" in typed context  [no-untyped-call]
            human_oversight_checkpoint("Error in legal_review", str(e))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
analytics/vault_profitability_score.py:28: error: Unused "type: ignore" comment
 [unused-ignore]
        parse_threat_feed({})  # type: ignore
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
analytics/vault_profitability_score.py:30: error: Unused "type: ignore" comment
 [unused-ignore]
        anchor_license_hash("PROFITABILITY_HASH_PLACEHOLDER")  # type: ign...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
analytics/vault_profitability_score.py:32: error: Unused "type: ignore" comment
 [unused-ignore]
        zero_knowledge_export("profitability_path_placeholder")  # type: i...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
analytics/vault_profitability_score.py:34: error: Unused "type: ignore" comment
 [unused-ignore]
        schedule_backup("analytics/")  # type: ignore
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
analytics/vault_profitability_score.py:38: error: Unused "type: ignore" comment
 [unused-ignore]
        )  # type: ignore
        ^~~~~~~~~~~~~~~~
analytics/vault_engagement_analytics.py:27: error: Unused "type: ignore"
comment  [unused-ignore]
        parse_threat_feed({})  # type: ignore
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
analytics/vault_engagement_analytics.py:29: error: Unused "type: ignore"
comment  [unused-ignore]
        anchor_license_hash("ENGAGEMENT_HASH_PLACEHOLDER")  # type: ignore
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
analytics/vault_engagement_analytics.py:31: error: Unused "type: ignore"
comment  [unused-ignore]
        zero_knowledge_export("engagement_path_placeholder")  # type: igno...
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
analytics/vault_engagement_analytics.py:33: error: Unused "type: ignore"
comment  [unused-ignore]
        schedule_backup("analytics/")  # type: ignore
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
analytics/vault_engagement_analytics.py:37: error: Unused "type: ignore"
comment  [unused-ignore]
        )  # type: ignore
        ^~~~~~~~~~~~~~~~
analytics/vault_engagement_analytics.py:40: error: Argument 1 to
"detect_signals" has incompatible type "dict[str, str | dict[str, Any] | None]";
expected "list[SaleRecord]"  [arg-type]
            {
            ^
analytics/vault_engagement_analytics.py:46: error: Unused "type: ignore"
comment  [unused-ignore]
        )  # type: ignore
        ^~~~~~~~~~~~~~~~
aifolio_secrets/emergency_purge.py:16: error: Function is missing a type
annotation  [no-untyped-def]
    def confirm_purge(trigger_source, keyword, ai_confirmed, human_confirm...
    ^
aifolio_secrets/emergency_purge.py:25: error: Function is missing a return type
annotation  [no-untyped-def]
    def revoke_all_vault_secrets():
    ^
aifolio_secrets/emergency_purge.py:25: note: Use "-> None" if function does not return a value
aifolio_secrets/emergency_purge.py:32: error: Function is missing a return type
annotation  [no-untyped-def]
    def reset_env_to_lockdown():
    ^
aifolio_secrets/emergency_purge.py:32: note: Use "-> None" if function does not return a value
aifolio_secrets/emergency_purge.py:44: error: Function is missing a return type
annotation  [no-untyped-def]
    def freeze_api_calls():
    ^
aifolio_secrets/emergency_purge.py:44: note: Use "-> None" if function does not return a value
aifolio_secrets/emergency_purge.py:52: error: Function is missing a return type
annotation  [no-untyped-def]
    def notify_admin():
    ^
aifolio_secrets/emergency_purge.py:52: note: Use "-> None" if function does not return a value
aifolio_secrets/emergency_purge.py:59: error: Function is missing a type
annotation  [no-untyped-def]
    def log_purge(trigger_source, countdown=None, override_key=None):
    ^
aifolio_secrets/emergency_purge.py:79: error: Function is missing a return type
annotation  [no-untyped-def]
    def lock_deployment_pipelines():
    ^
aifolio_secrets/emergency_purge.py:79: note: Use "-> None" if function does not return a value
aifolio_secrets/emergency_purge.py:87: error: Function is missing a type
annotation  [no-untyped-def]
    def purge_countdown(seconds, override_key=None):
    ^
aifolio_secrets/emergency_purge.py:96: error: Function is missing a return type
annotation  [no-untyped-def]
    def reroute_dashboard_to_lockdown():
    ^
aifolio_secrets/emergency_purge.py:96: note: Use "-> None" if function does not return a value
aifolio_secrets/emergency_purge.py:105: error: Function is missing a return
type annotation  [no-untyped-def]
    def enter_safe_shell_state():
    ^
aifolio_secrets/emergency_purge.py:105: note: Use "-> None" if function does not return a value
aifolio_secrets/emergency_purge.py:112: error: Function is missing a type
annotation  [no-untyped-def]
    def run_emergency_purge(
    ^
aifolio_secrets/emergency_purge.py:120: error: Call to untyped function
"confirm_purge" in typed context  [no-untyped-call]
        if not confirm_purge(trigger_source, keyword, ai_confirmed, human_...
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
aifolio_secrets/emergency_purge.py:124: error: Call to untyped function
"purge_countdown" in typed context  [no-untyped-call]
            purge_countdown(countdown, override_key)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_secrets/emergency_purge.py:125: error: Call to untyped function
"revoke_all_vault_secrets" in typed context  [no-untyped-call]
        revoke_all_vault_secrets()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_secrets/emergency_purge.py:126: error: Call to untyped function
"reset_env_to_lockdown" in typed context  [no-untyped-call]
        reset_env_to_lockdown()
        ^~~~~~~~~~~~~~~~~~~~~~~
aifolio_secrets/emergency_purge.py:127: error: Call to untyped function
"freeze_api_calls" in typed context  [no-untyped-call]
        freeze_api_calls()
        ^~~~~~~~~~~~~~~~~~
aifolio_secrets/emergency_purge.py:128: error: Call to untyped function
"notify_admin" in typed context  [no-untyped-call]
        notify_admin()
        ^~~~~~~~~~~~~~
aifolio_secrets/emergency_purge.py:129: error: Call to untyped function
"lock_deployment_pipelines" in typed context  [no-untyped-call]
        lock_deployment_pipelines()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_secrets/emergency_purge.py:130: error: Call to untyped function
"log_purge" in typed context  [no-untyped-call]
        log_purge(trigger_source, countdown, override_key)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_secrets/emergency_purge.py:131: error: Call to untyped function
"reroute_dashboard_to_lockdown" in typed context  [no-untyped-call]
        reroute_dashboard_to_lockdown()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_secrets/emergency_purge.py:132: error: Call to untyped function
"enter_safe_shell_state" in typed context  [no-untyped-call]
        enter_safe_shell_state()
        ^~~~~~~~~~~~~~~~~~~~~~~~
aifolio_secrets/emergency_purge.py:145: error: Call to untyped function
"run_emergency_purge" in typed context  [no-untyped-call]
        run_emergency_purge(
        ^
aifolio_secrets/audit_logger.py:11: error: Function is missing a type
annotation  [no-untyped-def]
    def log_rotation_event(key, status, error=None):
    ^
aifolio_empire/autonomous_vault_optimizer.py:10: error: Function is missing a
type annotation  [no-untyped-def]
    def schedule_regeneration(vault_id):
    ^
aifolio_empire/autonomous_vault_optimizer.py:15: error: Function is missing a
return type annotation  [no-untyped-def]
    def get_heatmap_insights():
    ^
aifolio_empire/autonomous_vault_optimizer.py:17: error: Need type annotation
for "insights"  [var-annotated]
        insights = {"most_downloaded": [], "most_rated": [], "viral": []}
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_empire/autonomous_vault_optimizer.py:22: error: Function is missing a
type annotation  [no-untyped-def]
    def tag_vault(vault_id, tag):
    ^
aifolio_empire/autonomous_vault_optimizer.py:29: error: Function is missing a
type annotation  [no-untyped-def]
    def backup_vault(vault_id, provider="GDrive"):
    ^
aifolio_empire/autonomous_vault_optimizer.py:35: error: Function is missing a
type annotation  [no-untyped-def]
    def auto_elevate_pdf(pdf_id):
    ^
aifolio_empire/autonomous_vault_optimizer.py:40: error: Function is missing a
type annotation  [no-untyped-def]
    def self_retire_vault(vault_id):
    ^
aifolio_empire/ai_pdf_layout_enhancer.py:15: error: Function is missing a
return type annotation  [no-untyped-def]
        def __init__(self):
        ^
aifolio_empire/ai_pdf_layout_enhancer.py:15: note: Use "-> None" if function does not return a value
aifolio_empire/ai_pdf_layout_enhancer.py:58: error: Need type annotation for
"sections"  [var-annotated]
            sections = {key: [] for key in self.layout_sections}
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_empire/ai_pdf_layout_enhancer.py:119: error: Value of type
"Collection[str]" is not indexable  [index]
                                fontsize=config["styles"]["font_size"],
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_empire/ai_pdf_layout_enhancer.py:120: error: Value of type
"Collection[str]" is not indexable  [index]
    ...                          color=self._hex_to_rgb(config["styles"]["col...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
aifolio_empire/ai_pdf_layout_enhancer.py:122: error: Value of type
"Collection[str]" is not indexable  [index]
                                bold=config["styles"]["bold"],
                                     ^~~~~~~~~~~~~~~~~~~~~~~~
aifolio_empire/ai_pdf_layout_enhancer.py:127: error: Value of type
"Collection[str]" is not indexable  [index]
                            if config["styles"]["highlight"]:
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_empire/ai_pdf_layout_enhancer.py:141: error: Missing type parameters
for generic type "tuple"  [type-arg]
        def _hex_to_rgb(self, hex_color: str) -> tuple:
                                                 ^
aifolio_empire/ai_pdf_layout_enhancer.py:149: error: Call to untyped function
"AIPDFLayoutEnhancer" in typed context  [no-untyped-call]
        enhancer = AIPDFLayoutEnhancer()
                   ^~~~~~~~~~~~~~~~~~~~~
aifolio_empire/profit_engines/viral_reward_protocol.py:14: error: Function is
missing a type annotation  [no-untyped-def]
    def get_viral_reward(action):
    ^
aifolio_empire/profit_engines/viral_pdf_generator.py:23: error: Missing type
parameters for generic type "dict"  [type-arg]
    def generate_viral_pdf_assets() -> dict:
                                       ^
aifolio_empire/profit_engines/subscription_model_optimizer.py:28: error:
Missing type parameters for generic type "dict"  [type-arg]
    def optimize_subscription_models() -> dict:
                                          ^
aifolio_empire/profit_engines/pdf_pricing_optimizer.py:14: error: Missing type
parameters for generic type "dict"  [type-arg]
    def assign_split_group(user_id: str) -> dict:
                                            ^
aifolio_empire/profit_engines/pdf_pricing_optimizer.py:55: error: Missing type
parameters for generic type "dict"  [type-arg]
    def get_price_for_group(group: str) -> dict:
                                           ^
aifolio_empire/profit_engines/pdf_pricing_optimizer.py:93: error: Missing type
parameters for generic type "dict"  [type-arg]
    def get_conversion_rate(group: str) -> dict:
                                           ^
aifolio_empire/profit_engines/pdf_funnel_engine.py:25: error: Missing type
parameters for generic type "dict"  [type-arg]
    def generate_funnel(channel: str, pdf_title: str) -> dict:
                                                         ^
aifolio_empire/profit_engines/pdf_funnel_engine.py:71: error: Function is
missing a return type annotation  [no-untyped-def]
    def funnel_drift_protection():
    ^
aifolio_empire/profit_engines/pdf_funnel_engine.py:76: error: Function is
missing a return type annotation  [no-untyped-def]
    def funnel_static_feedback():
    ^
aifolio_empire/profit_engines/pdf_cross_promotion_engine.py:16: error: Missing
type parameters for generic type "list"  [type-arg]
    def get_cross_promotions(pdf_title: str) -> list:
                                                ^
aifolio_empire/profit_engines/pdf_bundling_engine.py:25: error: Missing type
parameters for generic type "dict"  [type-arg]
    def generate_pdf_bundle() -> dict:
                                 ^
aifolio_empire/profit_engines/micro_upsell_engine.py:13: error: Function is
missing a type annotation  [no-untyped-def]
    def get_upsell_offer(trigger_event):
    ^
aifolio_empire/profit_engines/loyalty_loop_ai.py:11: error: Function is missing
a type annotation  [no-untyped-def]
    def get_loyalty_offer(user_email):
    ^
aifolio_empire/profit_engines/high_ticket_pdf_generator.py:20: error: Missing
type parameters for generic type "dict"  [type-arg]
    def generate_high_ticket_topic() -> dict:
                                        ^
aifolio_empire/profit_engines/gumroad_roi_sync_layer.py:11: error: Function is
missing a type annotation  [no-untyped-def]
    def log_funnel_event(pdf_id, event, group):
    ^
aifolio_empire/profit_engines/evergreen_seo_layer.py:23: error: Missing type
parameters for generic type "dict"  [type-arg]
    def get_next_seo_update() -> dict:
                                 ^
aifolio_empire/profit_engines/evergreen_seo_layer.py:65: error: Function is
missing a return type annotation  [no-untyped-def]
    def seo_drift_protection():
    ^
aifolio_empire/profit_engines/evergreen_seo_layer.py:70: error: Function is
missing a return type annotation  [no-untyped-def]
    def seo_static_feedback():
    ^
aifolio_empire/profit_engines/competitor_analysis_engine.py:35: error: Missing
type parameters for generic type "dict"  [type-arg]
    def analyze_competitors() -> dict:
                                 ^
aifolio_empire/profit_engines/ai_tax_optimizer.py:25: error: Missing type
parameters for generic type "dict"  [type-arg]
    def optimize_pdf_tax() -> dict:
                              ^
aifolio_empire/profit_engines/ai_tax_optimizer.py:51: error: Dict entry 0 has
incompatible type "str": "str"; expected "str": "list[str]"  [dict-item]
                "explanation": explanation,
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_empire/profit_engines/ai_tax_optimizer.py:52: error: Dict entry 1 has
incompatible type "str": "str"; expected "str": "list[str]"  [dict-item]
                "recommendation": recommendation,
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_empire/profit_engines/ai_tax_optimizer.py:53: error: Dict entry 2 has
incompatible type "str": "int"; expected "str": "list[str]"  [dict-item]
                "priority": priority,
                ^~~~~~~~~~~~~~~~~~~~
aifolio_empire/profit_engines/ai_tax_optimizer.py:54: error: Dict entry 3 has
incompatible type "str": "str"; expected "str": "list[str]"  [dict-item]
                "version": VERSION,
                ^~~~~~~~~~~~~~~~~~
aifolio_empire/profit_engines/ai_tax_optimizer.py:55: error: Dict entry 4 has
incompatible type "str": "bool"; expected "str": "list[str]"  [dict-item]
                "SAFE_AI_COMPLIANT": SAFE_AI_COMPLIANT,
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_empire/profit_engines/ai_tax_optimizer.py:56: error: Dict entry 5 has
incompatible type "str": "bool"; expected "str": "list[str]"  [dict-item]
                "OWNER_CONTROLLED": OWNER_CONTROLLED,
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_empire/profit_engines/ai_tax_optimizer.py:57: error: Dict entry 6 has
incompatible type "str": "bool"; expected "str": "list[str]"  [dict-item]
                "NON_SENTIENT": NON_SENTIENT,
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_empire/profit_engines/ai_tax_optimizer.py:64: error: Function is
missing a return type annotation  [no-untyped-def]
    def tax_drift_protection():
    ^
aifolio_empire/profit_engines/ai_tax_optimizer.py:69: error: Function is
missing a return type annotation  [no-untyped-def]
    def tax_static_feedback():
    ^
aifolio_empire/profit_engines/ai_revenue_turbo.py:18: error: Missing type
parameters for generic type "dict"  [type-arg]
    def get_revenue_turbo_hooks() -> dict:
                                     ^
aifolio_empire/profit_engines/ai_pricing_strategist.py:11: error: Function is
missing a type annotation  [no-untyped-def]
    def get_adaptive_price(pdf_id, base_price, demand_factor=1.0, group="S...
    ^
aifolio_empire/profit_engines/affiliate_intelligence_mesh.py:11: error:
Function is missing a type annotation  [no-untyped-def]
    def get_affiliate_link(user_handle, tier="Bronze"):
    ^
aifolio_ai_bots_backend/omnilock_security_grid.py:17: error: Function is
missing a return type annotation  [no-untyped-def]
    def activate_omnivault_sentinel():
    ^
aifolio_ai_bots_backend/omnilock_security_grid.py:22: error: Function is
missing a type annotation  [no-untyped-def]
    def anti_hack_alert(event):
    ^
aifolio_ai_bots_backend/omnilock_security_grid.py:28: error: Function is
missing a type annotation  [no-untyped-def]
    def trigger_honeytrap(ip_addr):
    ^
aifolio_ai_bots_backend/omnilock_security_grid.py:35: error: Function is
missing a return type annotation  [no-untyped-def]
    def runtime_obfuscation():
    ^
aifolio_ai_bots_backend/omnilock_security_grid.py:40: error: Function is
missing a type annotation  [no-untyped-def]
    def bot_cloaking(bot_name):
    ^
aifolio_ai_bots_backend/ai_omnicheck_finalizer.py:9: error: Function is missing
a return type annotation  [no-untyped-def]
    def run_omnicheck():
    ^
aifolio_ai_bots_backend/ai_growth_compliance_brain.py:14: error: Function is
missing a type annotation  [no-untyped-def]
    def scan_pdf_for_compliance(pdf_path):
    ^
aifolio_ai_bots_backend/ai_growth_compliance_brain.py:28: error: Argument 1 to
"detect_signals" has incompatible type "dict[str, Any]"; expected
"list[SaleRecord]"  [arg-type]
        detect_signals({"pdf_path": pdf_path})
                       ^~~~~~~~~~~~~~~~~~~~~~
aifolio_ai_bots_backend/ai_growth_compliance_brain.py:31: error: Function is
missing a type annotation  [no-untyped-def]
    def compliance_scan(pdf_metadata, pdf_copy, pdf_visuals):
    ^
aifolio_ai_bots_backend/ai_growth_compliance_brain.py:40: error: Function is
missing a type annotation  [no-untyped-def]
    def growth_brain_trigger(trend, revenue_spike, social_virality):
    ^
aifolio_ai_bots_backend/ai_bot_personas.py:18: error: Function is missing a
type annotation  [no-untyped-def]
    def log_bot_action(bot, action, details=None):
    ^
aifolio_ai_bots_backend/ai_bot_personas.py:22: error: Function is missing a
type annotation  [no-untyped-def]
    def enforce_bot_laws(bot, action):
    ^
aifolio_ai_bots_backend/ai_bot_personas.py:27: error: Call to untyped function
"log_bot_action" in typed context  [no-untyped-call]
        log_bot_action(bot, action)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
ai_prompt_engine/validate_market_fit.py:9: error: Function is missing a type
annotation  [no-untyped-def]
    def validate_market_fit(product):
    ^
ai_prompt_engine/validate_market_fit.py:17: error: Call to untyped function
"_log" in typed context  [no-untyped-call]
        _log(
        ^
ai_prompt_engine/validate_market_fit.py:27: error: Function is missing a type
annotation  [no-untyped-def]
    def _log(entry):
    ^
ai_core/emma_security/emma_hsm_auth.py:14: error: Function is missing a return
type annotation  [no-untyped-def]
    def fido2_handshake():
    ^
ai_core/emma_security/emma_hsm_auth.py:18: error: Function is missing a return
type annotation  [no-untyped-def]
    def emma_init_hsm_key():
    ^
ai_core/emma_security/emma_hsm_auth.py:26: error: Call to untyped function
"fido2_handshake" in typed context  [no-untyped-call]
    ... {"hsm": False, "key_ref": hsm_key_ref, "verified": fido2_handshake()}
                                                           ^~~~~~~~~~~~~~~~~
ai_core/emma_security/emma_hsm_auth.py:32: error: Function is missing a return
type annotation  [no-untyped-def]
    def validate_hsm_handshake():
    ^
ai_core/emma_security/emma_hsm_auth.py:43: error: Call to untyped function
"emma_init_hsm_key" in typed context  [no-untyped-call]
        status = emma_init_hsm_key()
                 ^~~~~~~~~~~~~~~~~~~
empress_codemaster.py:13: error: Function is missing a type annotation for one
or more arguments  [no-untyped-def]
        def __init__(
        ^
empress_codemaster.py:18: error: Call to untyped function "EmpressAvatar" in
typed context  [no-untyped-call]
            self.avatar = EmpressAvatar(style=avatar_style, voice=voice)
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
empress_codemaster.py:19: error: Call to untyped function
"EmotionalIntelligenceLayer" in typed context  [no-untyped-call]
            self.ei_layer = EmotionalIntelligenceLayer()
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
empress_codemaster.py:62: error: Untyped decorator makes function
"generate_code" untyped  [misc]
        @owner_approval_required("Code Generation")
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
empress_codemaster.py:68: error: Untyped decorator makes function "review_code"
untyped  [misc]
        @owner_approval_required("Code Review")
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
empress_codemaster.py:74: error: Untyped decorator makes function
"refactor_code" untyped  [misc]
        @owner_approval_required("Refactor Code")
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
empress_codemaster.py:76: error: Incompatible default for argument "style"
(default has type "None", argument has type "str")  [assignment]
            self, code: str, language: str = "Python", style: str = None
                                                                    ^~~~
empress_codemaster.py:76: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
empress_codemaster.py:76: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
empress_codemaster.py:83: error: Function is missing a return type annotation 
[no-untyped-def]
        def set_coding_style(self, style: str):
        ^
empress_codemaster.py:87: error: Function is missing a type annotation 
[no-untyped-def]
        def set_avatar(self, style, voice):
        ^
empress_codemaster.py:88: error: Call to untyped function "set_style" in typed
context  [no-untyped-call]
            self.avatar.set_style(style)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
empress_codemaster.py:89: error: Call to untyped function "set_voice" in typed
context  [no-untyped-call]
            self.avatar.set_voice(voice)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
empress_codemaster.py:90: error: Call to untyped function "describe" in typed
context  [no-untyped-call]
            return self.avatar.describe()
                   ^~~~~~~~~~~~~~~~~~~~~~
empress_codemaster.py:92: error: Function is missing a type annotation 
[no-untyped-def]
        def adapt_ei(self, mood, stress, energy, goals):
        ^
empress_codemaster.py:93: error: Call to untyped function "adapt_to_owner" in
typed context  [no-untyped-call]
            return self.ei_layer.adapt_to_owner(mood, stress, energy, goal...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_utils.py:8: error: Function is missing a return type annotation 
[no-untyped-def]
        def setUp(self):
        ^
tests/test_utils.py:8: note: Use "-> None" if function does not return a value
tests/test_utils.py:11: error: Function is missing a return type annotation 
[no-untyped-def]
        def test_rate_limiting(self):
        ^
tests/test_utils.py:11: note: Use "-> None" if function does not return a value
tests/test_utils.py:28: error: Function is missing a return type annotation 
[no-untyped-def]
        def test_validate_niche(self):
        ^
tests/test_utils.py:28: note: Use "-> None" if function does not return a value
tests/test_utils.py:41: error: Incompatible types in assignment (expression has
type "object", variable has type "str")  [assignment]
            for niche in invalid_niches:
            ^
tests/test_utils.py:45: error: Function is missing a return type annotation 
[no-untyped-def]
        def test_validate_api_key(self):
        ^
tests/test_utils.py:45: note: Use "-> None" if function does not return a value
tests/test_utils.py:58: error: Incompatible types in assignment (expression has
type "object", variable has type "str")  [assignment]
            for key, provider in invalid_keys:
            ^
tests/test_utils.py:61: error: Function is missing a return type annotation 
[no-untyped-def]
        def test_validate_prompt(self):
        ^
tests/test_utils.py:61: note: Use "-> None" if function does not return a value
tests/test_utils.py:73: error: Argument 1 to "validate_prompt" of
"InputValidator" has incompatible type "object"; expected "str"  [arg-type]
                self.assertFalse(InputValidator.validate_prompt(prompt))
                                                                ^~~~~~
tests/test_basic.py:5: error: Function is missing a return type annotation 
[no-untyped-def]
        def test_sanity(self):
        ^
tests/test_basic.py:5: note: Use "-> None" if function does not return a value
tests/test_ai_tools.py:6: error: Function is missing a return type annotation 
[no-untyped-def]
        def test_format_title(self):
        ^
tests/test_ai_tools.py:6: note: Use "-> None" if function does not return a value
tests/test_ai_tools.py:8: error: Call to untyped function "format_title" in
typed context  [no-untyped-call]
                vault_formatter.format_title("the quick brown fox"), "The ...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:11: error: Call to untyped function "format_title" in
typed context  [no-untyped-call]
                vault_formatter.format_title("  a tale of two cities  "),
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:14: error: Call to untyped function "format_title" in
typed context  [no-untyped-call]
            self.assertEqual(vault_formatter.format_title(""), "")
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:16: error: Function is missing a return type annotation 
[no-untyped-def]
        def test_format_description(self):
        ^
tests/test_ai_tools.py:16: note: Use "-> None" if function does not return a value
tests/test_ai_tools.py:18: error: Call to untyped function "format_description"
in typed context  [no-untyped-call]
                vault_formatter.format_description("hello world"), "Hello ...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:21: error: Call to untyped function "format_description"
in typed context  [no-untyped-call]
                vault_formatter.format_description("Already good."), "Alre...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:23: error: Call to untyped function "format_description"
in typed context  [no-untyped-call]
            self.assertEqual(vault_formatter.format_description(""), "")
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:27: error: Function is missing a return type annotation 
[no-untyped-def]
        def test_analyze_review_spelling(self):
        ^
tests/test_ai_tools.py:27: note: Use "-> None" if function does not return a value
tests/test_ai_tools.py:28: error: Call to untyped function "analyze_review" in
typed context  [no-untyped-call]
            out = review_analyzer.analyze_review("Th1s is g00d!")
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:31: error: Function is missing a return type annotation 
[no-untyped-def]
        def test_analyze_review_banned(self):
        ^
tests/test_ai_tools.py:31: note: Use "-> None" if function does not return a value
tests/test_ai_tools.py:32: error: Call to untyped function "analyze_review" in
typed context  [no-untyped-call]
            out = review_analyzer.analyze_review("This is a scam and fraud...
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:35: error: Function is missing a return type annotation 
[no-untyped-def]
        def test_analyze_review_sentiment(self):
        ^
tests/test_ai_tools.py:35: note: Use "-> None" if function does not return a value
tests/test_ai_tools.py:36: error: Call to untyped function "analyze_review" in
typed context  [no-untyped-call]
            out = review_analyzer.analyze_review("This is bad and awful")
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:41: error: Function is missing a return type annotation 
[no-untyped-def]
        def test_vault_registry_entry_required_fields(self):
        ^
tests/test_ai_tools.py:41: note: Use "-> None" if function does not return a value
tests/test_ai_tools.py:61: error: Call to untyped function
"check_vault_metadata" in typed context  [no-untyped-call]
            out = audit_compliance.check_vault_metadata(complete_entry)
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:66: error: Call to untyped function
"check_vault_metadata" in typed context  [no-untyped-call]
            out2 = audit_compliance.check_vault_metadata(entry_missing_nic...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:72: error: Call to untyped function
"check_vault_metadata" in typed context  [no-untyped-call]
            out3 = audit_compliance.check_vault_metadata(entry_missing_des...
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:76: error: Function is missing a return type annotation 
[no-untyped-def]
        def test_check_vault_metadata_compliant(self):
        ^
tests/test_ai_tools.py:76: note: Use "-> None" if function does not return a value
tests/test_ai_tools.py:85: error: Call to untyped function
"check_vault_metadata" in typed context  [no-untyped-call]
            out = audit_compliance.check_vault_metadata(meta)
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:88: error: Function is missing a return type annotation 
[no-untyped-def]
        def test_check_vault_metadata_missing(self):
        ^
tests/test_ai_tools.py:88: note: Use "-> None" if function does not return a value
tests/test_ai_tools.py:96: error: Call to untyped function
"check_vault_metadata" in typed context  [no-untyped-call]
            out = audit_compliance.check_vault_metadata(meta)
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/test_ai_tools.py:100: error: Function is missing a return type annotation
 [no-untyped-def]
        def test_check_vault_metadata_invalid(self):
        ^
tests/test_ai_tools.py:100: note: Use "-> None" if function does not return a value
tests/test_ai_tools.py:108: error: Call to untyped function
"check_vault_metadata" in typed context  [no-untyped-call]
            out = audit_compliance.check_vault_metadata(meta)
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:12: error: Function is missing a type annotation 
[no-untyped-def]
    def lockdown_vaults_with_immutable_storage(vaults):
    ^
backend/security_engine.py:19: error: Function is missing a type annotation 
[no-untyped-def]
    def file_integrity_checker(files):
    ^
backend/security_engine.py:25: error: Function is missing a type annotation 
[no-untyped-def]
    def geo_encrypted_backups(data):
    ^
backend/security_engine.py:31: error: Function is missing a return type
annotation  [no-untyped-def]
    def self_healing_core():
    ^
backend/security_engine.py:36: error: Function is missing a type annotation 
[no-untyped-def]
    def ai_anomaly_detector(files):
    ^
backend/security_engine.py:42: error: Function is missing a return type
annotation  [no-untyped-def]
    def zero_trust_network():
    ^
backend/security_engine.py:47: error: Function is missing a return type
annotation  [no-untyped-def]
    def enforce_tls_and_mtls():
    ^
backend/security_engine.py:52: error: Function is missing a return type
annotation  [no-untyped-def]
    def dynamic_firewall():
    ^
backend/security_engine.py:57: error: Function is missing a return type
annotation  [no-untyped-def]
    def onion_routing_mode():
    ^
backend/security_engine.py:62: error: Function is missing a return type
annotation  [no-untyped-def]
    def enforce_fido2_webauthn():
    ^
backend/security_engine.py:67: error: Function is missing a return type
annotation  [no-untyped-def]
    def split_role_admin():
    ^
backend/security_engine.py:72: error: Function is missing a type annotation 
[no-untyped-def]
    def log_admin_actions(actions):
    ^
backend/security_engine.py:77: error: Function is missing a return type
annotation  [no-untyped-def]
    def threat_response_playbooks():
    ^
backend/security_engine.py:82: error: Function is missing a return type
annotation  [no-untyped-def]
    def encrypt_execution_layers():
    ^
backend/security_engine.py:87: error: Function is missing a return type
annotation  [no-untyped-def]
    def compile_sensitive_to_wasm():
    ^
backend/security_engine.py:92: error: Function is missing a return type
annotation  [no-untyped-def]
    def anti_debugger_tamper():
    ^
backend/security_engine.py:97: error: Function is missing a return type
annotation  [no-untyped-def]
    def deploy_canary_tokens():
    ^
backend/security_engine.py:102: error: Function is missing a return type
annotation  [no-untyped-def]
    def rotate_api_creds():
    ^
backend/security_engine.py:107: error: Function is missing a return type
annotation  [no-untyped-def]
    def schedule_pen_test():
    ^
backend/security_engine.py:112: error: Function is missing a return type
annotation  [no-untyped-def]
    def immutable_infra_rebuild():
    ^
backend/security_engine.py:117: error: Function is missing a type annotation 
[no-untyped-def]
    def load_security_engine(vaults, files, actions, data):
    ^
backend/security_engine.py:118: error: Call to untyped function
"lockdown_vaults_with_immutable_storage" in typed context  [no-untyped-call]
        lockdown_vaults_with_immutable_storage(vaults)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:119: error: Call to untyped function
"file_integrity_checker" in typed context  [no-untyped-call]
        file_integrity_checker(files)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:120: error: Call to untyped function
"geo_encrypted_backups" in typed context  [no-untyped-call]
        geo_encrypted_backups(data)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:121: error: Call to untyped function
"self_healing_core" in typed context  [no-untyped-call]
        self_healing_core()
        ^~~~~~~~~~~~~~~~~~~
backend/security_engine.py:122: error: Call to untyped function
"ai_anomaly_detector" in typed context  [no-untyped-call]
        ai_anomaly_detector(files)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:123: error: Call to untyped function
"zero_trust_network" in typed context  [no-untyped-call]
        zero_trust_network()
        ^~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:124: error: Call to untyped function
"enforce_tls_and_mtls" in typed context  [no-untyped-call]
        enforce_tls_and_mtls()
        ^~~~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:125: error: Call to untyped function
"dynamic_firewall" in typed context  [no-untyped-call]
        dynamic_firewall()
        ^~~~~~~~~~~~~~~~~~
backend/security_engine.py:126: error: Call to untyped function
"onion_routing_mode" in typed context  [no-untyped-call]
        onion_routing_mode()
        ^~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:127: error: Call to untyped function
"enforce_fido2_webauthn" in typed context  [no-untyped-call]
        enforce_fido2_webauthn()
        ^~~~~~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:128: error: Call to untyped function
"split_role_admin" in typed context  [no-untyped-call]
        split_role_admin()
        ^~~~~~~~~~~~~~~~~~
backend/security_engine.py:129: error: Call to untyped function
"log_admin_actions" in typed context  [no-untyped-call]
        log_admin_actions(actions)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:130: error: Call to untyped function
"threat_response_playbooks" in typed context  [no-untyped-call]
        threat_response_playbooks()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:131: error: Call to untyped function
"encrypt_execution_layers" in typed context  [no-untyped-call]
        encrypt_execution_layers()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:132: error: Call to untyped function
"compile_sensitive_to_wasm" in typed context  [no-untyped-call]
        compile_sensitive_to_wasm()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:133: error: Call to untyped function
"anti_debugger_tamper" in typed context  [no-untyped-call]
        anti_debugger_tamper()
        ^~~~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:134: error: Call to untyped function
"deploy_canary_tokens" in typed context  [no-untyped-call]
        deploy_canary_tokens()
        ^~~~~~~~~~~~~~~~~~~~~~
backend/security_engine.py:135: error: Call to untyped function
"rotate_api_creds" in typed context  [no-untyped-call]
        rotate_api_creds()
        ^~~~~~~~~~~~~~~~~~
backend/security_engine.py:136: error: Call to untyped function
"schedule_pen_test" in typed context  [no-untyped-call]
        schedule_pen_test()
        ^~~~~~~~~~~~~~~~~~~
backend/security_engine.py:137: error: Call to untyped function
"immutable_infra_rebuild" in typed context  [no-untyped-call]
        immutable_infra_rebuild()
        ^~~~~~~~~~~~~~~~~~~~~~~~~
backend/revenue_profit_upgrade_engine.py:13: error: Function is missing a type
annotation  [no-untyped-def]
    def build_vault_family_performance_mesh(vaults):
    ^
backend/revenue_profit_upgrade_engine.py:23: error: Function is missing a type
annotation  [no-untyped-def]
    def ai_vault_profit_predictor(vaults):
    ^
backend/revenue_profit_upgrade_engine.py:30: error: Function is missing a type
annotation  [no-untyped-def]
    def dynamic_vault_cloning(vaults):
    ^
backend/revenue_profit_upgrade_engine.py:45: error: Function is missing a type
annotation  [no-untyped-def]
    def auto_niche_expander(vaults):
    ^
backend/revenue_profit_upgrade_engine.py:54: error: Function is missing a type
annotation  [no-untyped-def]
    def ai_title_optimizer_v3(vaults):
    ^
backend/revenue_profit_upgrade_engine.py:62: error: Function is missing a type
annotation  [no-untyped-def]
    def build_sales_heatmap_dashboard(vaults):
    ^
backend/revenue_profit_upgrade_engine.py:69: error: Function is missing a type
annotation  [no-untyped-def]
    def pdf_upsell_engine(vaults):
    ^
backend/revenue_profit_upgrade_engine.py:77: error: Function is missing a type
annotation  [no-untyped-def]
    def pdf_funnel_builder(vaults):
    ^
backend/revenue_profit_upgrade_engine.py:85: error: Function is missing a type
annotation  [no-untyped-def]
    def ai_powered_email_sequences(vaults):
    ^
backend/revenue_profit_upgrade_engine.py:95: error: Function is missing a type
annotation  [no-untyped-def]
    def load_revenue_profit_upgrade_engine(vaults):
    ^
backend/revenue_profit_upgrade_engine.py:96: error: Call to untyped function
"build_vault_family_performance_mesh" in typed context  [no-untyped-call]
        build_vault_family_performance_mesh(vaults)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/revenue_profit_upgrade_engine.py:97: error: Call to untyped function
"ai_vault_profit_predictor" in typed context  [no-untyped-call]
        ai_vault_profit_predictor(vaults)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/revenue_profit_upgrade_engine.py:98: error: Call to untyped function
"dynamic_vault_cloning" in typed context  [no-untyped-call]
        dynamic_vault_cloning(vaults)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/revenue_profit_upgrade_engine.py:99: error: Call to untyped function
"auto_niche_expander" in typed context  [no-untyped-call]
        auto_niche_expander(vaults)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/revenue_profit_upgrade_engine.py:100: error: Call to untyped function
"ai_title_optimizer_v3" in typed context  [no-untyped-call]
        ai_title_optimizer_v3(vaults)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/revenue_profit_upgrade_engine.py:101: error: Call to untyped function
"build_sales_heatmap_dashboard" in typed context  [no-untyped-call]
        build_sales_heatmap_dashboard(vaults)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/revenue_profit_upgrade_engine.py:102: error: Call to untyped function
"pdf_upsell_engine" in typed context  [no-untyped-call]
        pdf_upsell_engine(vaults)
        ^~~~~~~~~~~~~~~~~~~~~~~~~
backend/revenue_profit_upgrade_engine.py:103: error: Call to untyped function
"pdf_funnel_builder" in typed context  [no-untyped-call]
        pdf_funnel_builder(vaults)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
backend/revenue_profit_upgrade_engine.py:104: error: Call to untyped function
"ai_powered_email_sequences" in typed context  [no-untyped-call]
        ai_powered_email_sequences(vaults)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/empire_phase_manager.py:14: error: Function is missing a type
annotation  [no-untyped-def]
    def get_empire_phase_status(vaults, revenue, current_phase_label):
    ^
backend/empire_phase_manager.py:26: error: Function is missing a type
annotation  [no-untyped-def]
    def check_phase_ready_alerts(
    ^
backend/auto_upgrade_manager.py:12: error: Function is missing a return type
annotation  [no-untyped-def]
    def continuous_upgrade_pipeline():
    ^
backend/auto_upgrade_manager.py:17: error: Function is missing a type
annotation  [no-untyped-def]
    def autonomous_vault_repair_engine(vaults):
    ^
backend/auto_upgrade_manager.py:24: error: Function is missing a return type
annotation  [no-untyped-def]
    def low_latency_ai_inference():
    ^
backend/auto_upgrade_manager.py:29: error: Function is missing a return type
annotation  [no-untyped-def]
    def legal_change_monitor():
    ^
backend/auto_upgrade_manager.py:34: error: Function is missing a return type
annotation  [no-untyped-def]
    def region_compliance_engine():
    ^
backend/auto_upgrade_manager.py:39: error: Function is missing a return type
annotation  [no-untyped-def]
    def auto_apply_gdpr():
    ^
backend/auto_upgrade_manager.py:44: error: Function is missing a return type
annotation  [no-untyped-def]
    def ai_explainability_layer():
    ^
backend/auto_upgrade_manager.py:49: error: Function is missing a return type
annotation  [no-untyped-def]
    def elastic_compute_grid():
    ^
backend/auto_upgrade_manager.py:54: error: Function is missing a return type
annotation  [no-untyped-def]
    def ai_load_balancer():
    ^
backend/auto_upgrade_manager.py:59: error: Function is missing a return type
annotation  [no-untyped-def]
    def usage_heatmap():
    ^
backend/auto_upgrade_manager.py:64: error: Function is missing a return type
annotation  [no-untyped-def]
    def ai_output_diff_dashboard():
    ^
backend/auto_upgrade_manager.py:69: error: Function is missing a return type
annotation  [no-untyped-def]
    def rollback_engine():
    ^
backend/auto_upgrade_manager.py:74: error: Function is missing a return type
annotation  [no-untyped-def]
    def ai_telemetry_layer():
    ^
backend/auto_upgrade_manager.py:79: error: Function is missing a return type
annotation  [no-untyped-def]
    def ai_safety_envelope():
    ^
backend/auto_upgrade_manager.py:84: error: Function is missing a return type
annotation  [no-untyped-def]
    def phase_alert_manager_ui():
    ^
backend/auto_upgrade_manager.py:89: error: Function is missing a return type
annotation  [no-untyped-def]
    def phase_lockdown_control_panel():
    ^
backend/auto_upgrade_manager.py:94: error: Function is missing a return type
annotation  [no-untyped-def]
    def safe_mode_toggle():
    ^
backend/auto_upgrade_manager.py:99: error: Function is missing a type
annotation  [no-untyped-def]
    def load_auto_upgrade_manager(vaults):
    ^
backend/auto_upgrade_manager.py:100: error: Call to untyped function
"continuous_upgrade_pipeline" in typed context  [no-untyped-call]
        continuous_upgrade_pipeline()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:101: error: Call to untyped function
"autonomous_vault_repair_engine" in typed context  [no-untyped-call]
        autonomous_vault_repair_engine(vaults)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:102: error: Call to untyped function
"low_latency_ai_inference" in typed context  [no-untyped-call]
        low_latency_ai_inference()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:103: error: Call to untyped function
"legal_change_monitor" in typed context  [no-untyped-call]
        legal_change_monitor()
        ^~~~~~~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:104: error: Call to untyped function
"region_compliance_engine" in typed context  [no-untyped-call]
        region_compliance_engine()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:105: error: Call to untyped function
"auto_apply_gdpr" in typed context  [no-untyped-call]
        auto_apply_gdpr()
        ^~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:106: error: Call to untyped function
"ai_explainability_layer" in typed context  [no-untyped-call]
        ai_explainability_layer()
        ^~~~~~~~~~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:107: error: Call to untyped function
"elastic_compute_grid" in typed context  [no-untyped-call]
        elastic_compute_grid()
        ^~~~~~~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:108: error: Call to untyped function
"ai_load_balancer" in typed context  [no-untyped-call]
        ai_load_balancer()
        ^~~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:109: error: Call to untyped function
"usage_heatmap" in typed context  [no-untyped-call]
        usage_heatmap()
        ^~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:110: error: Call to untyped function
"ai_output_diff_dashboard" in typed context  [no-untyped-call]
        ai_output_diff_dashboard()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:111: error: Call to untyped function
"rollback_engine" in typed context  [no-untyped-call]
        rollback_engine()
        ^~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:112: error: Call to untyped function
"ai_telemetry_layer" in typed context  [no-untyped-call]
        ai_telemetry_layer()
        ^~~~~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:113: error: Call to untyped function
"ai_safety_envelope" in typed context  [no-untyped-call]
        ai_safety_envelope()
        ^~~~~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:114: error: Call to untyped function
"phase_alert_manager_ui" in typed context  [no-untyped-call]
        phase_alert_manager_ui()
        ^~~~~~~~~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:115: error: Call to untyped function
"phase_lockdown_control_panel" in typed context  [no-untyped-call]
        phase_lockdown_control_panel()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/auto_upgrade_manager.py:116: error: Call to untyped function
"safe_mode_toggle" in typed context  [no-untyped-call]
        safe_mode_toggle()
        ^~~~~~~~~~~~~~~~~~
backend/hyper_expansion/hyper_elite_vault_badge_system.py:58: error: Function
is missing a type annotation  [no-untyped-def]
    def get_latest_badge_for_phase(phase):
    ^
backend/hyper_expansion/hyper_elite_vault_badge_system.py:65: error: Function
is missing a type annotation  [no-untyped-def]
    def apply_hyper_elite_badge_system(vaults, current_phase):
    ^
backend/hyper_expansion/hyper_elite_vault_badge_system.py:66: error: Call to
untyped function "get_latest_badge_for_phase" in typed context 
[no-untyped-call]
        badge = get_latest_badge_for_phase(current_phase)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autorepair/autorepair_daemon.py:64: error: Function is missing a type
annotation  [no-untyped-def]
    def register_failover_service(service_dict):
    ^
autorepair/autorepair_daemon.py:74: error: Function is missing a type
annotation  [no-untyped-def]
    def log_repair(action, service, status, explanation, attempts, escalat...
    ^
autorepair/autorepair_daemon.py:98: error: Function is missing a type
annotation  [no-untyped-def]
    def run_healthcheck(script_path):
    ^
autorepair/autorepair_daemon.py:108: error: Function is missing a type
annotation  [no-untyped-def]
    def repair_service(service):
    ^
autorepair/autorepair_daemon.py:114: error: Call to untyped function
"run_healthcheck" in typed context  [no-untyped-call]
                if run_healthcheck(service["healthcheck"]):
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autorepair/autorepair_daemon.py:115: error: Call to untyped function
"log_repair" in typed context  [no-untyped-call]
                    log_repair(
                    ^
autorepair/autorepair_daemon.py:124: error: Call to untyped function
"log_repair" in typed context  [no-untyped-call]
                    log_repair(
                    ^
autorepair/autorepair_daemon.py:135: error: Call to untyped function
"log_repair" in typed context  [no-untyped-call]
                log_repair("repair", service, "ERROR", str(e), attempts + ...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autorepair/autorepair_daemon.py:139: error: Call to untyped function
"escalate_issue" in typed context  [no-untyped-call]
        escalate_issue(service, attempts)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autorepair/autorepair_daemon.py:144: error: Function is missing a type
annotation  [no-untyped-def]
    def escalate_issue(service, attempts):
    ^
autorepair/autorepair_daemon.py:145: error: Call to untyped function
"log_repair" in typed context  [no-untyped-call]
        log_repair(
        ^
autorepair/autorepair_daemon.py:170: error: Function is missing a return type
annotation  [no-untyped-def]
    def main_loop():
    ^
autorepair/autorepair_daemon.py:170: note: Use "-> None" if function does not return a value
autorepair/autorepair_daemon.py:176: error: Call to untyped function
"run_healthcheck" in typed context  [no-untyped-call]
                if not run_healthcheck(service["healthcheck"]):
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autorepair/autorepair_daemon.py:180: error: Call to untyped function
"repair_service" in typed context  [no-untyped-call]
                    repair_service(service)
                    ^~~~~~~~~~~~~~~~~~~~~~~
autorepair/autorepair_daemon.py:189: error: Call to untyped function
"main_loop" in typed context  [no-untyped-call]
            main_loop()
            ^~~~~~~~~~~
autonomy/post_sale_hooks/update_smart_price.py:6: error: Function is missing a
type annotation  [no-untyped-def]
    def update_smart_price(vault_id):
    ^
autonomy/post_sale_hooks/track_analytics.py:9: error: Function is missing a
type annotation  [no-untyped-def]
        def record_sale(vault_id, buyer_metadata):
        ^
autonomy/post_sale_hooks/tag_buyer_crm.py:7: error: Function is missing a type
annotation  [no-untyped-def]
    def tag_buyer_crm(tag, buyer_email):
    ^
autonomy/post_sale_hooks/log_receipt.py:8: error: Function is missing a type
annotation  [no-untyped-def]
    def log_receipt_to_db(receipt_data):
    ^
autonomy/notifications/sendgrid_email.py:17: error: Function is missing a type
annotation  [no-untyped-def]
    def send_email(to_email, subject, content, attachments=None):
    ^
autonomy/notifications/sendgrid_email.py:23: error: Call to untyped function
"analyze_review" in typed context  [no-untyped-call]
        analysis = analyze_review(subject + " " + content)
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:25: error:
Function is missing a return type annotation  [no-untyped-def]
        def setUp(self):
        ^
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:25: note: Use "-> None" if function does not return a value
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:44: error:
Function is missing a return type annotation  [no-untyped-def]
        def test_simulator_initialization(self):
        ^
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:44: note: Use "-> None" if function does not return a value
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:48: error:
Function is missing a return type annotation  [no-untyped-def]
        def test_get_simulated_countdown_future_basic_structure(self):
        ^
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:48: note: Use "-> None" if function does not return a value
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:71: error:
Function is missing a return type annotation  [no-untyped-def]
        def test_get_simulated_countdown_past_basic_structure(self):
        ^
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:71: note: Use "-> None" if function does not return a value
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:85: error:
Function is missing a return type annotation  [no-untyped-def]
        def test_countdown_data_structure(self):
        ^
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:85: note: Use "-> None" if function does not return a value
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:111: error:
Function is missing a return type annotation  [no-untyped-def]
        def test_anti_sentience_markers(self):
        ^
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:111: note: Use "-> None" if function does not return a value
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:125: error:
Function is missing a return type annotation  [no-untyped-def]
        def test_statelessness_action_id_uniqueness(self):
        ^
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:125: note: Use "-> None" if function does not return a value
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:135: error:
Function is missing a return type annotation  [no-untyped-def]
        def test_invalid_datetime_format(self):
        ^
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:135: note: Use "-> None" if function does not return a value
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:151: error:
Function is missing a return type annotation  [no-untyped-def]
        def test_config_logger_fallback(self):
        ^
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:151: note: Use "-> None" if function does not return a value
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:168: error:
Module has no attribute "config"  [attr-defined]
                simulator_module.config = simulator_module.MockConfig()
                ^~~~~~~~~~~~~~~~~~~~~~~
aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py:194: error:
Module has no attribute "config"  [attr-defined]
                    simulator_module.config = original_module_config
                    ^~~~~~~~~~~~~~~~~~~~~~~
aifolio_empire/profit_engines/refund_optimizer.py:17: error: Missing type
parameters for generic type "dict"  [type-arg]
    ...optimize_refund(user_id: str, region: str, refund_count: int) -> dict:
                                                                        ^
aifolio_empire/profit_engines/refund_optimizer.py:56: error: Function is
missing a return type annotation  [no-untyped-def]
    def refund_drift_protection():
    ^
aifolio_empire/profit_engines/refund_optimizer.py:61: error: Function is
missing a return type annotation  [no-untyped-def]
    def refund_static_feedback():
    ^
omniexpansion/omniexpansion_seeder.py:20: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
omniexpansion/omniexpansion_seeder.py:20: note: Use "-> None" if function does not return a value
omniexpansion/omniexpansion_seeder.py:33: error: Function is missing a return
type annotation  [no-untyped-def]
        def seed_all(self):
        ^
omniexpansion/omniexpansion_seeder.py:50: error: Function is missing a type
annotation  [no-untyped-def]
        def auto_inherit(self, workflow):
        ^
backend/upgrade_harden_pipeline.py:25: error: Function is missing a return type
annotation  [no-untyped-def]
    def scan_system_version_state():
    ^
backend/upgrade_harden_pipeline.py:32: error: Function is missing a return type
annotation  [no-untyped-def]
    def refresh_ai_safety_envelope():
    ^
backend/upgrade_harden_pipeline.py:37: error: Function is missing a return type
annotation  [no-untyped-def]
    def refresh_immutable_infrastructure():
    ^
backend/upgrade_harden_pipeline.py:42: error: Function is missing a type
annotation  [no-untyped-def]
    def revalidate_file_integrity_and_anomaly(files):
    ^
backend/upgrade_harden_pipeline.py:47: error: Function is missing a type
annotation  [no-untyped-def]
    def sync_phase_control_panel(current_phase):
    ^
backend/upgrade_harden_pipeline.py:52: error: Function is missing a type
annotation  [no-untyped-def]
    def output_changelog(entries):
    ^
backend/upgrade_harden_pipeline.py:59: error: Function is missing a type
annotation  [no-untyped-def]
    def output_readiness_summary(status):
    ^
backend/upgrade_harden_pipeline.py:66: error: Function is missing a type
annotation  [no-untyped-def]
    def run_upgrade_harden_pipeline(vaults, files, actions, data):
    ^
backend/upgrade_harden_pipeline.py:68: error: Call to untyped function
"scan_system_version_state" in typed context  [no-untyped-call]
        version, phase = scan_system_version_state()
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/upgrade_harden_pipeline.py:70: error: Call to untyped function
"load_revenue_profit_upgrade_engine" in typed context  [no-untyped-call]
        load_revenue_profit_upgrade_engine(vaults)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/upgrade_harden_pipeline.py:72: error: Call to untyped function
"load_security_engine" in typed context  [no-untyped-call]
        load_security_engine(vaults, files, actions, data)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/upgrade_harden_pipeline.py:74: error: Call to untyped function
"load_auto_upgrade_manager" in typed context  [no-untyped-call]
        load_auto_upgrade_manager(vaults)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/upgrade_harden_pipeline.py:76: error: Call to untyped function
"refresh_ai_safety_envelope" in typed context  [no-untyped-call]
        refresh_ai_safety_envelope()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/upgrade_harden_pipeline.py:78: error: Call to untyped function
"refresh_immutable_infrastructure" in typed context  [no-untyped-call]
        refresh_immutable_infrastructure()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/upgrade_harden_pipeline.py:80: error: Call to untyped function
"revalidate_file_integrity_and_anomaly" in typed context  [no-untyped-call]
        revalidate_file_integrity_and_anomaly(files)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/upgrade_harden_pipeline.py:83: error: Call to untyped function
"sync_phase_control_panel" in typed context  [no-untyped-call]
        sync_phase_control_panel(current_phase)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/upgrade_harden_pipeline.py:85: error: Call to untyped function
"output_changelog" in typed context  [no-untyped-call]
        output_changelog(changelog)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
backend/upgrade_harden_pipeline.py:86: error: Call to untyped function
"output_readiness_summary" in typed context  [no-untyped-call]
        output_readiness_summary(
        ^
backend/upgrade_harden_pipeline.py:89: error: Call to untyped function
"get_empire_phase_status" in typed context  [no-untyped-call]
        phase_status = get_empire_phase_status(
                       ^
autonomy/vault/email_alerts.py:24: error: Function is missing a type annotation
 [no-untyped-def]
    def send_vault_email_alert(to_email, subject, body):
    ^
autonomy/vault/email_alerts.py:30: error: Call to untyped function
"analyze_review" in typed context  [no-untyped-call]
        analysis = analyze_review(subject + " " + body)
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
autonomy/vault/email_alerts.py:53: error: Argument 1 to "formataddr" has
incompatible type "tuple[str, str | None]"; expected "tuple[str | None, str]" 
[arg-type]
        msg["From"] = formataddr((FROM_NAME, FROM_EMAIL))
                                 ^~~~~~~~~~~~~~~~~~~~~~~
autonomy/vault/email_alerts.py:56: error: Argument 1 to "SMTP" has incompatible
type "str | None"; expected "str"  [arg-type]
            with smtplib.SMTP(SMTP_HOST, SMTP_PORT) as server:
                              ^~~~~~~~~
autonomy/vault/email_alerts.py:58: error: Argument 1 to "login" of "SMTP" has
incompatible type "str | None"; expected "str"  [arg-type]
                server.login(SMTP_USER, SMTP_PASS)
                             ^~~~~~~~~
autonomy/vault/email_alerts.py:58: error: Argument 2 to "login" of "SMTP" has
incompatible type "str | None"; expected "str"  [arg-type]
                server.login(SMTP_USER, SMTP_PASS)
                                        ^~~~~~~~~
audit/vault_audit_tracker.py:9: error: Need type annotation for "_log" (hint:
"_log: List[<type>] = ...")  [var-annotated]
        _log = []
        ^~~~
audit/vault_audit_tracker.py:10: error: Need type annotation for "_snapshots"
(hint: "_snapshots: List[<type>] = ...")  [var-annotated]
        _snapshots = []
        ^~~~~~~~~~
audit/vault_audit_tracker.py:13: error: Function is missing a type annotation 
[no-untyped-def]
        def record(action, details=None):
        ^
audit/vault_audit_tracker.py:28: error: Function is missing a type annotation 
[no-untyped-def]
        def snapshot(state):
        ^
audit/vault_audit_tracker.py:37: error: Call to untyped function "record" of
"VaultAuditTracker" in typed context  [no-untyped-call]
            VaultAuditTracker.record("snapshot", {"state": state})
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
audit/vault_audit_tracker.py:43: error: Function is missing a return type
annotation  [no-untyped-def]
        def get_log():
        ^
audit/vault_audit_tracker.py:47: error: Function is missing a return type
annotation  [no-untyped-def]
        def get_snapshots():
        ^
analytics/typo_grammar_analytics.py:22: error: Function is missing a type
annotation  [no-untyped-def]
    def analyze_typo_grammar(vaults):
    ^
analytics/typo_grammar_analytics.py:36: error: Argument 1 to "detect_signals"
has incompatible type "dict[str, Any]"; expected "list[SaleRecord]"  [arg-type]
        detect_signals({"vaults": vaults})
                       ^~~~~~~~~~~~~~~~~~
analytics/typo_grammar_analytics.py:51: error: Argument 1 to "detect_signals"
has incompatible type "dict[str, Any]"; expected "list[SaleRecord]"  [arg-type]
        detect_signals({"vaults": vaults})
                       ^~~~~~~~~~~~~~~~~~
analytics/typo_grammar_analytics.py:55: error: Missing type parameters for
generic type "dict"  [type-arg]
    def check_typo_grammar(text: str) -> dict:
                                         ^
analytics/tone_voice_analytics.py:14: error: Function is missing a type
annotation  [no-untyped-def]
    def analyze_tone_voice(vaults):
    ^
analytics/tone_voice_analytics.py:28: error: Argument 1 to "detect_signals" has
incompatible type "dict[str, Any]"; expected "list[SaleRecord]"  [arg-type]
        detect_signals({"vaults": vaults})
                       ^~~~~~~~~~~~~~~~~~
analytics/tone_voice_analytics.py:43: error: Argument 1 to "detect_signals" has
incompatible type "dict[str, Any]"; expected "list[SaleRecord]"  [arg-type]
        detect_signals({"vaults": vaults})
                       ^~~~~~~~~~~~~~~~~~
analytics/tone_voice_analytics.py:47: error: Function is missing a type
annotation  [no-untyped-def]
    def check_tone_voice(text, brand_profile):
    ^
analytics/high_ticket_vault_leaderboard.py:9: error: Function is missing a type
annotation  [no-untyped-def]
    def high_ticket_vault_leaderboard(vaults):
    ^
autonomy/pipeline/ai_quality_gatekeeper.py:15: error: Function is missing a
type annotation  [no-untyped-def]
    def score_output(text):
    ^
autonomy/pipeline/ai_quality_gatekeeper.py:62: error: Call to untyped function
"score_output" in typed context  [no-untyped-call]
        print(json.dumps(score_output(text), indent=2))
                         ^~~~~~~~~~~~~~~~~~
autonomy/pipeline/ai_output_normalizer.py:34: error: Function is missing a type
annotation  [no-untyped-def]
    def normalize_output(
    ^
autonomy/pipeline/ai_output_normalizer.py:88: error: Call to untyped function
"normalize_output" in typed context  [no-untyped-call]
        out = normalize_output(text)
              ^~~~~~~~~~~~~~~~~~~~~~
autonomy/post_sale_hooks/store_backup_to_archive.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def store_backup_to_archive(order_id, vault_id):
    ^
aifolio_empire/dynamic_bundle_builder.py:35: error: Function is missing a
return type annotation  [no-untyped-def]
        def __init__(self):
        ^
aifolio_empire/dynamic_bundle_builder.py:35: note: Use "-> None" if function does not return a value
aifolio_empire/dynamic_bundle_builder.py:70: error: Unsupported operand types
for < ("int" and "object")  [operator]
            if len(items) < template["min_items"]:
                            ^~~~~~~~~~~~~~~~~~~~~
aifolio_empire/dynamic_bundle_builder.py:74: error: Argument 1 has incompatible
type "object"; expected "int"  [arg-type]
            num_items = randint(template["min_items"], template["max_items...
                                ^~~~~~~~~~~~~~~~~~~~~
aifolio_empire/dynamic_bundle_builder.py:74: error: Argument 2 has incompatible
type "object"; expected "int"  [arg-type]
    ...      num_items = randint(template["min_items"], template["max_items"]...
                                                        ^~~~~~~~~~~~~~~~~~~~~
aifolio_empire/dynamic_bundle_builder.py:79: error: Unsupported operand types
for - ("int" and "object")  [operator]
            bundle_price = total_price * (1 - template["discount"])
                                              ^~~~~~~~~~~~~~~~~~~~
aifolio_empire/dynamic_bundle_builder.py:95: error: Missing return statement 
[return]
        def _create_scarcity(self, bundle_type: str) -> Dict[str, Any]:
        ^
aifolio_empire/dynamic_bundle_builder.py:124: error: Missing return statement 
[return]
        def _create_bonus(self, bundle_type: str) -> Dict[str, Any]:
        ^
aifolio_empire/dynamic_bundle_builder.py:171: error: Call to untyped function
"DynamicBundleBuilder" in typed context  [no-untyped-call]
        builder = DynamicBundleBuilder()
                  ^~~~~~~~~~~~~~~~~~~~~~
profitwarp/pdf_quantum_generator.py:20: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
profitwarp/pdf_quantum_generator.py:20: note: Use "-> None" if function does not return a value
profitwarp/fractal_vault_engine.py:22: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
profitwarp/fractal_vault_engine.py:22: note: Use "-> None" if function does not return a value
hooks/dispatcher/hook_resilience.py:15: error: Function is missing a type
annotation  [no-untyped-def]
        def retry_hook(hook_fn, args, max_attempts=3):
        ^
hooks/dispatcher/hook_resilience.py:41: error: Call to untyped function
"log_error" in typed context  [no-untyped-call]
                        log_error(
                        ^
hooks/dispatcher/hook_resilience.py:58: error: Function is missing a type
annotation  [no-untyped-def]
        def manual_replay(hook_name, args):
        ^
hooks/dispatcher/hook_resilience.py:60: error: Call to untyped function
"retry_hook" of "HookResilience" in typed context  [no-untyped-call]
            return HookResilience.retry_hook(globals()[hook_name], args)
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
hooks/dispatcher/hook_resilience.py:63: error: Function is missing a type
annotation  [no-untyped-def]
        def outcome_predictor(hook_name):
        ^
hooks/dispatcher/hook_resilience.py:68: error: Function is missing a return
type annotation  [no-untyped-def]
        def health_monitor():
        ^
hooks/dispatcher/hook_resilience.py:77: error: Function is missing a type
annotation  [no-untyped-def]
        def refund_trigger_predictor(hook_name, args):
        ^
hooks/dispatcher/hook_resilience.py:82: error: Function is missing a return
type annotation  [no-untyped-def]
        def replay_history():
        ^
hooks/dispatcher/hook_resilience.py:86: error: Function is missing a type
annotation  [no-untyped-def]
        def signature_fingerprinter(hook_name, args):
        ^
autonomy/analytics/seasonal_sales_pattern_report.py:7: error: Function is
missing a type annotation  [no-untyped-def]
    def seasonal_sales_pattern(sales_by_month):
    ^
ai_engines/ethics_qualityguard.py:38: error: Unused "type: ignore" comment 
[unused-ignore]
    @domesticate_ai  # type: ignore[misc]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ai_engines/ethics_qualityguard.py:39: error: Unused "type: ignore" comment 
[unused-ignore]
    @sentience_guard  # type: ignore[misc]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
empress_emma.py:198: error: Unused "type: ignore" comment  [unused-ignore]
            if not ethics_validator(action, context):  # type: ignore
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
empress_emma.py:201: error: Unused "type: ignore" comment  [unused-ignore]
            EMMAEthicsGuard.audit_action(action, context)  # type: ignore
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
empress_emma.py:226: error: Unused "type: ignore" comment  [unused-ignore]
                self._pmp.kill_switch()  # type: ignore
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
empress_emma.py:231: error: Unused "type: ignore" comment  [unused-ignore]
                return {"pmp_tutorial": self._pmp.tutorial()}  # type: ign...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
empress_emma.py:234: error: Unused "type: ignore" comment  [unused-ignore]
                    audit_log = self._pmp.get_audit_log()  # type: ignore
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
empress_emma.py:241: error: Argument 1 to "dict" has incompatible type "str";
expected "Iterable[tuple[str, Any]]"  [arg-type]
            return dict(result) if isinstance(result, dict) else {"result"...
                        ^~~~~~
empress_emma.py:241: note: Following member(s) of "str" have conflicts:
empress_emma.py:241: note:     Expected:
empress_emma.py:241: note:         def __iter__(self) -> Iterator[tuple[str, Any]]
empress_emma.py:241: note:     Got:
empress_emma.py:241: note:         def __iter__(self) -> Iterator[str]
autonomy/integrations/neuro_core_bridge.py:16: error: Module has no attribute
"generate_board_report"; maybe "governance_board_report"?  [attr-defined]
        analytics = safe_ai_governance_board_report_generator.generate_boa...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
