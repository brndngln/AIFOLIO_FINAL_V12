[
  "AIFOLIO ai bots - backend/agents/test_agent_utils.py::test_check_pii",
  "AIFOLIO ai bots - backend/agents/test_agent_utils.py::test_forbidden_patterns",
  "AIFOLIO ai bots - backend/agents/test_agent_utils.py::test_moderate_content_blocked",
  "AIFOLIO ai bots - backend/agents/test_agent_utils.py::test_moderate_content_clean",
  "AIFOLIO ai bots - backend/agents/test_agent_utils.py::test_raise_if_sentience_attempted",
  "AIFOLIO ai bots - backend/agents/test_agent_utils.py::test_sanitize_input_basic",
  "ai_core/tests/test_agent.py::TestSafeAIAgent::test_adapt_and_evolve",
  "ai_core/tests/test_agent.py::TestSafeAIAgent::test_fuse_kill_trigger",
  "ai_core/tests/test_agent.py::TestSafeAIAgent::test_learning_and_memory_expiry",
  "ai_core/tests/test_agent.py::TestSafeAIAgent::test_owner_lock",
  "ai_core/tests/test_audit.py::TestAuditDaemon::test_check_drift",
  "ai_core/tests/test_audit.py::TestAuditDaemon::test_log_event",
  "ai_core/tests/test_emma_governor.py::TestEmmaGovernor::test_verify_behavior_safe",
  "ai_core/tests/test_emma_governor.py::TestEmmaGovernor::test_verify_behavior_sentient",
  "ai_core/tests/test_vault.py::TestVault::test_evolve_strategy",
  "ai_core/tests/test_vault.py::TestVault::test_owner_lock_blocks",
  "aifolio_ai_bots_backend/agents/test_agent_utils.py::test_check_pii",
  "aifolio_ai_bots_backend/agents/test_agent_utils.py::test_forbidden_patterns",
  "aifolio_ai_bots_backend/agents/test_agent_utils.py::test_moderate_content_blocked",
  "aifolio_ai_bots_backend/agents/test_agent_utils.py::test_moderate_content_clean",
  "aifolio_ai_bots_backend/agents/test_agent_utils.py::test_raise_if_sentience_attempted",
  "aifolio_ai_bots_backend/agents/test_agent_utils.py::test_sanitize_input_basic",
  "aifolio_ai_bots_backend/agents/test_agents_health.py::test_adam_health",
  "aifolio_ai_bots_backend/agents/test_agents_health.py::test_barbara_health",
  "aifolio_ai_bots_backend/agents/test_agents_health.py::test_bobby_health",
  "aifolio_ai_bots_backend/agents/test_agents_health.py::test_cassie_health",
  "aifolio_ai_bots_backend/agents/test_agents_health.py::test_ceevee_health",
  "aifolio_ai_bots_backend/agents/test_agents_health.py::test_emmi_health",
  "aifolio_ai_bots_backend/agents/test_agents_health.py::test_victor_health",
  "aifolio_ai_bots_backend/agents/test_agents_health.py::test_vinnie_health",
  "aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py::TestVaultDropCountdownSimulator::test_anti_sentience_markers",
  "aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py::TestVaultDropCountdownSimulator::test_config_logger_fallback",
  "aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py::TestVaultDropCountdownSimulator::test_countdown_data_structure",
  "aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py::TestVaultDropCountdownSimulator::test_get_simulated_countdown_future_basic_structure",
  "aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py::TestVaultDropCountdownSimulator::test_get_simulated_countdown_past_basic_structure",
  "aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py::TestVaultDropCountdownSimulator::test_invalid_datetime_format",
  "aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py::TestVaultDropCountdownSimulator::test_simulator_initialization",
  "aifolio_empire/tests/ui_enhancements/test_vault_drop_countdown_simulator.py::TestVaultDropCountdownSimulator::test_statelessness_action_id_uniqueness",
  "aifolio_secrets/test_reload_injection.py::TestReloadInjection::test_reload_secrets_endpoint",
  "aifolio_secrets/test_rotation_success.py::TestSecretRotation::test_rotate_all_secrets_success",
  "backend/test_pmp_service.py::test_authenticate_failure",
  "backend/test_pmp_service.py::test_authenticate_success",
  "backend/test_pmp_service.py::test_content_generation_stub",
  "backend/test_pmp_service.py::test_feedback_stub",
  "backend/test_pmp_service.py::test_health",
  "backend/test_pmp_service.py::test_kink_suggestions",
  "backend/test_pmp_service.py::test_security_status",
  "tests/autonomy_event_system/test_backup_analytics.py::test_backup_creates_files",
  "tests/autonomy_event_system/test_download_initiated.py::test_download_initiated_event",
  "tests/autonomy_event_system/test_export_failed.py::test_export_failed_event",
  "tests/autonomy_event_system/test_policy_violated.py::test_policy_violated_event",
  "tests/autonomy_event_system/test_refund_issued.py::test_refund_issued_event",
  "tests/autonomy_event_system/test_remediation.py::test_replay_event",
  "tests/autonomy_event_system/test_vault_downloaded.py::test_vault_downloaded_event",
  "tests/autonomy_event_system/test_vault_fulfilled.py::test_vault_fulfilled_event",
  "tests/autonomy_event_system/test_vault_refunded.py::test_vault_refunded_event",
  "tests/autonomy_event_system/test_vault_sold.py::test_vault_sold_event",
  "tests/autonomy_event_system/test_vault_test_run.py::test_vault_test_run_event",
  "tests/test_affiliate_attribution.py::TestAffiliateAttribution::test_affiliate_api_success",
  "tests/test_affiliate_attribution.py::TestAffiliateAttribution::test_affiliate_log_only",
  "tests/test_ai_bridge.py::TestAIBridge::test_error_handling",
  "tests/test_ai_bridge.py::TestAIBridge::test_input_validation",
  "tests/test_ai_bridge.py::TestAIBridge::test_logging",
  "tests/test_ai_bridge.py::TestAIBridge::test_rate_limiting",
  "tests/test_ai_bridge.py::TestAIBridge::test_response_validation",
  "tests/test_ai_bridge.py::TestAIBridge::test_secure_api_key",
  "tests/test_ai_bridge.py::TestAPIKeyManager::test_api_key_validation",
  "tests/test_ai_bridge.py::TestAPIKeyManager::test_key_expiration",
  "tests/test_ai_bridge.py::TestInputValidator::test_validate_api_key",
  "tests/test_ai_bridge.py::TestInputValidator::test_validate_niche",
  "tests/test_ai_tools.py::TestAuditCompliance::test_check_vault_metadata_compliant",
  "tests/test_ai_tools.py::TestAuditCompliance::test_check_vault_metadata_invalid",
  "tests/test_ai_tools.py::TestAuditCompliance::test_check_vault_metadata_missing",
  "tests/test_ai_tools.py::TestAuditCompliance::test_vault_registry_entry_required_fields",
  "tests/test_ai_tools.py::TestReviewAnalyzer::test_analyze_review_banned",
  "tests/test_ai_tools.py::TestReviewAnalyzer::test_analyze_review_sentiment",
  "tests/test_ai_tools.py::TestReviewAnalyzer::test_analyze_review_spelling",
  "tests/test_ai_tools.py::TestVaultFormatter::test_format_description",
  "tests/test_ai_tools.py::TestVaultFormatter::test_format_title",
  "tests/test_automated_vault_generator.py::TestAutomatedVaultGenerator::test_error_handling",
  "tests/test_automated_vault_generator.py::TestAutomatedVaultGenerator::test_generate_plausible_text_invalid_length",
  "tests/test_automated_vault_generator.py::TestAutomatedVaultGenerator::test_generate_plausible_text_invalid_niche",
  "tests/test_automated_vault_generator.py::TestAutomatedVaultGenerator::test_generate_plausible_text_invalid_type",
  "tests/test_automated_vault_generator.py::TestAutomatedVaultGenerator::test_generate_plausible_text_valid",
  "tests/test_automated_vault_generator.py::TestAutomatedVaultGenerator::test_generate_simulated_outline",
  "tests/test_automated_vault_generator.py::TestAutomatedVaultGenerator::test_logging",
  "tests/test_automated_vault_generator.py::TestAutomatedVaultGenerator::test_vault_limits",
  "tests/test_basic.py::BasicTestCase::test_sanity",
  "tests/test_blueprints.py::test_accessibility_routes",
  "tests/test_blueprints.py::test_license_route",
  "tests/test_blueprints.py::test_monetization_route",
  "tests/test_blueprints.py::test_payments_routes",
  "tests/test_blueprints.py::test_product_gen_route",
  "tests/test_blueprints.py::test_reviewer_routes",
  "tests/test_blueprints_edge.py::test_accessibility_invalid_route",
  "tests/test_blueprints_edge.py::test_audit_log_on_license_change",
  "tests/test_blueprints_edge.py::test_license_csrf_fail",
  "tests/test_blueprints_edge.py::test_payments_csrf_fail",
  "tests/test_blueprints_edge.py::test_product_gen_missing_fields",
  "tests/test_blueprints_edge.py::test_reviewer_csrf_fail",
  "tests/test_cross_sell_recommender.py::TestCrossSellRecommender::test_log_only",
  "tests/test_cross_sell_recommender.py::TestCrossSellRecommender::test_sendgrid_success",
  "tests/test_file_tax_compliance.py::TestFileTaxCompliance::test_log_only",
  "tests/test_file_tax_compliance.py::TestFileTaxCompliance::test_tax_api_success",
  "tests/test_fraud_check.py::TestFraudCheck::test_flag_suspicious",
  "tests/test_fraud_check.py::TestFraudCheck::test_fraud_api_success",
  "tests/test_notify_internal_channels.py::TestNotifyInternalChannels::test_discord_success",
  "tests/test_notify_internal_channels.py::TestNotifyInternalChannels::test_slack_success",
  "tests/test_notify_internal_channels.py::TestNotifyInternalChannels::test_stub",
  "tests/test_push_to_dashboard_analytics.py::TestPushToDashboardAnalytics::test_dashboard_api_success",
  "tests/test_push_to_dashboard_analytics.py::TestPushToDashboardAnalytics::test_log_only",
  "tests/test_request_review.py::TestRequestReview::test_log_only",
  "tests/test_request_review.py::TestRequestReview::test_sendgrid_success",
  "tests/test_send_confirmation_email.py::TestSendConfirmationEmail::test_sendgrid_invalid",
  "tests/test_send_confirmation_email.py::TestSendConfirmationEmail::test_stub_no_sendgrid",
  "tests/test_send_receipt_email.py::TestSendReceiptEmail::test_log_only",
  "tests/test_send_receipt_email.py::TestSendReceiptEmail::test_sendgrid_success",
  "tests/test_store_backup_to_archive.py::TestStoreBackupToArchive::test_archive_success",
  "tests/test_store_backup_to_archive.py::TestStoreBackupToArchive::test_log_only",
  "tests/test_utils.py::TestInputValidator::test_validate_api_key",
  "tests/test_utils.py::TestInputValidator::test_validate_niche",
  "tests/test_utils.py::TestInputValidator::test_validate_prompt",
  "tests/test_utils.py::TestRateLimiter::test_rate_limiting",
  "tests/ui_enhancements/test_color_properties.py::TestColorProperties::test_color_properties[alert]",
  "tests/ui_enhancements/test_color_properties.py::TestColorProperties::test_color_properties[app]",
  "tests/ui_enhancements/test_color_properties.py::TestColorProperties::test_color_properties[button]",
  "tests/ui_enhancements/test_color_properties.py::TestColorProperties::test_color_properties[card]",
  "tests/ui_enhancements/test_color_properties.py::TestColorProperties::test_color_properties[header]",
  "tests/ui_enhancements/test_color_properties.py::TestColorProperties::test_color_properties[input]",
  "tests/ui_enhancements/test_color_properties.py::TestColorProperties::test_color_properties[link]",
  "tests/ui_enhancements/test_color_properties.py::TestColorProperties::test_color_properties[modal]",
  "tests/ui_enhancements/test_color_properties.py::TestColorProperties::test_color_properties[navigation]",
  "tests/ui_enhancements/test_color_properties.py::TestColorProperties::test_color_properties[tooltip]",
  "tests/ui_enhancements/test_color_properties.py::TestColorProperties::test_preview_components",
  "tests/ui_enhancements/test_color_properties.py::TestColorProperties::test_undo_redo"
]