#!/usr/bin/env python3
"""
 WINDSURF PHOENIX OMEGA SANCTUM LOCK v13.0

This file prevents commits from corrupted Python environments.
Any attempt to commit with wrong Python version will be blocked.

LOCKED VERSION: Python 3.12.8
CREATED: 2025-07-21 20:51:24 UTC
STATUS: IMMORTAL PROTECTION ACTIVE
"""

import sys
import os
from pathlib import Path

# IMMORTAL CONSTANTS
REQUIRED_PYTHON_VERSION = "3.12.8"
LOCK_VERSION = "13.0"
PROJECT_ROOT = Path(__file__).parent


def check_python_version() -> bool:
    """Verify Python version matches locked requirement"""
    current_version = (
        f"{sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}"
    )

    if current_version != REQUIRED_PYTHON_VERSION:
        print(f"\n WINDSURF PHOENIX OMEGA SANCTUM BLOCK: Python version mismatch!")
        print(f"   Required: {REQUIRED_PYTHON_VERSION}")
        print(f"   Current:  {current_version}")
        print(f"\n Fix: Run 'source .venv/bin/activate' first")
        print(f"   Or run: ./windsurf_autofix.py")
        return False
    return True


def check_venv_active() -> bool:
    """Verify virtual environment is active"""
    if not os.environ.get("VIRTUAL_ENV"):
        print(
            f"\n WINDSURF PHOENIX OMEGA SANCTUM BLOCK: Virtual environment not active!"
        )
        print(f"\n Fix: Run 'source .venv/bin/activate' first")
        return False
    return True


def main() -> bool:
    """Main lock validation"""
    print(
        f" WINDSURF PHOENIX OMEGA SANCTUM v{LOCK_VERSION} - Validating environment..."
    )

    if not check_venv_active():
        sys.exit(1)

    if not check_python_version():
        sys.exit(1)

    print(f" Environment validated - Python {REQUIRED_PYTHON_VERSION} active")
    return True


if __name__ == "__main__":
    main()
